---
title: "Take Home Ex3: VAST Challenge 2024 Mini-Challenge 3 [WIP]"
author: "Kristine Joy Paas"
date: "22 May 2024"
date-modified: "last-modified"
format: html
execute: 
  echo: true
  eval: true
  warning: false
  freeze: true
---

# 1 Overview

-   MC3 intro

-   Analyze power flow

# 2 Setup

## 2.1 Loading Packages

```{r}
#| label: setup
pacman::p_load(
  jsonlite,
  tidyverse,
  ggraph,
  tidygraph,
  visNetwork,
  patchwork,
  ggtext,
  knitr,
  igraph,
  ggiraph
)
```

## 2.2 Loading Data

```{r}
mc3_data <- fromJSON("data/mc3.json")
glimpse(mc3_data)
```

It contains graph data, where nodes can be accessed via `nodes` and edges via `links`. This dataset has a lot of columns but we will only filter the relevant data during wrangling..

## 2.3. Defining common variables

We will also set some values to have consistency throughout all graphs. This is also so that we only need to change them in one place

::: panel-tabset
### Styles

We are going to define styles for plotting our different kind of graphs. This is to provide consistency and reduce mistakes when changing how plots are rendered.

```{r}
STYLES = list(
  font_family = "Roboto Condensed",
  # Colors
  primary_color = "blue",
  #primary_light_color = "#e6e6ff",
  primary_light_color = "white",
  secondary_color = "darkorange",
  secondary_light_color = "white",
  muted_color = "grey50",
  title_color = "grey25",
  normal_text_color = "grey50",
  # Graph
  node_size = 7.5,
  node_border_color = "grey25",
  arrow_margin = 3.2,
  arrow_style = arrow(type = "closed", length = unit(2, "pt")),
  base_edge_thickness = 0.2,
  # Panel
  panel_border_color = "grey50",
  panel_border_thickness = 0.5,
  # Texts
  node_label_size = 2,
  node_label_dark = "black",
  node_label_light = "white",

  default_caption = "Hover on the nodes to see more details.",
  # Interactive elemnents
  tooltip_css = paste0(
    "background-color:black;color:white;",
    "font-family:Roboto Condensed;font-size:10pt;",
    "padding:4px;text-align:center;"
  ),
  svg_width = 6,
  svg_height = 6 * 0.618
)
```

### Theme Elements

Common theme elements, another `theme()` definition can be used if these elements need to be overridden.

```{r}
COMMON_THEME = theme(
  text = element_text(family = STYLES$font_family, color = STYLES$normal_text_color),
  plot.title = element_markdown(
    color = STYLES$title_color,
    face = "bold",
    size = unit(10, "pt")
  ),
  plot.subtitle = element_markdown(size = unit(8, "pt")),
  plot.caption = element_markdown(size = unit(6, "pt"), hjust = 0),
  plot.margin = margin(2, 0, 0, 0, unit = "pt"),
  
  # Legend styles
  legend.position = "right",
  legend.location = "plot",
  legend.justification = "top",
  legend.title = element_markdown(
    color = STYLES$title_color,
    face = "bold",
    size = unit(8, "pt")
  ),
  legend.text = element_text(size = unit(6, "pt"), vjust = 0.5),
  legend.box.spacing = unit(4, "pt"),
  legend.margin = margin(0),
  legend.spacing.x = unit(2, "pt"),
  legend.spacing.y = unit(8, "pt"),
  legend.key.size = unit(12, "pt"),
  
  panel.border = element_rect(
    color = STYLES$panel_border_color,
    fill = NA,
    linewidth = STYLES$panel_border_thickness
  )
)
```

### Mappings

```{r}
MAPPINGS = list(
  # Available shapes: https://www.datanovia.com/en/blog/ggplot-point-shapes-best-tips/
  node_supertype_to_shape = c(
    "Person" = 24, # Triangle
    "Organization" = 21 # Circle
  ),
  # Color schemes
  # Colorblind pallettes from https://davidmathlogic.com/colorblind
  node_subtype_to_color = c(
    "Person" = "#44AA99",
    "CEO" = "#117733",
    "Company" = "#DDCC77",
    "FishingCompany" = "#332288",
    "LogisticsCompany" = "#88CCEE",
    "FinancialCompany" = "#AA4499",
    "NGO" = "#CC6677",
    "NewsCompany" = "#882255"
  ),
  edge_relationship_subtype_to_color = c(
    "WorksFor" = "#D81B60",
    "Shareholdership" = "#FFC107",
    "BeneficialOwnership" = "#004D40",
    "FamilyRelationship" = "#1E88E5"
  ),
  edge_power_subtype_to_color = c(
    "WorksFor" = "#D81B60",
    "HasShareholder" = "#FFC107",
    "OwnedBy" = "#004D40",
    "FamilyRelationship" = "#1E88E5"
  )
)
```

### Other configurations

```{r}
CONFIGS = list(
  default_seed = 911 # For reproduceability
)
```
:::

# 3 Data Wrangling

## 3.1 Extracting Graph Elements

For simplicity, we will only extract the columns that are needed to do graph analysis. We will also *ignore* the time elements for now so we will not be including them in the analysis.

::: panel-tabset
### Nodes

The nodes represent the entities in the network. They can be people or companies.

```{r}
mc3_nodes_raw <- as_tibble(mc3_data$nodes)
glimpse(mc3_nodes_raw)
```

We will only retain the following columns:

-   `id` - to serve as the identifier for the node

-   `type` - to differentiate people from companies in the graph.

```{r}
mc3_nodes_lite <- mc3_nodes_raw %>% select(id, type)
```

### Edges

The edges represent the relationship between different nodes.

```{r}
mc3_edges_raw <- as_tibble(mc3_data$links)
glimpse(mc3_edges_raw)
```

We will only retain the following columns:

-   `source` - to identify the *actor* of the relationship, corresponds to `id` in nodes.

-   `target` - to identify the *receiver* of the relationship, corresponds to `id` in nodes.

-   `type` - to identify the type of the relationship

```{r}
mc3_edges_lite <- mc3_edges_raw %>% select(source, target, type)
```
:::

## 3.2 Closer look at *type*

Both the `nodes` and `edges` have `type` which contains the type of the nodes and edges. We will assign a `supertype` and a `subtype` from `type`.

::: panel-tabset
### Nodes

```{r}
(mc3_nodes_lite$type) %>% unique()
```

`supertype` - type of entity, either *Person* or *Organization*

`subtype` - subcategory of *supertype*, e.g., *Company, FishingCompany, CEO*

### Edges

```{r}
(mc3_edges_lite$type) %>% unique()
```

`supertype` - type of relationship, either *Ownership*, *Employment, Relationship.*

`subtype` - subcategory of *supertype*, e.g., *Shareholdership, BeneficialOwnership, FamilyRelationship*
:::

## 3.3 Preparing the data

With the considerations above, we will shape the data needed for our graph visualization.

::: panel-tabset
### Nodes

For nodes, we will also assign a shape for visualization depending on *supertype.* For people, we will use üìê, while we use üî¥ for organizations.

Lastly, we will assign alias to each node as an alternative label to the names (as they are long). This will be generated using the first 4 initials of the name

```{r}
#| file: helpers/to_initials.R
```

```{r}
#| echo: false
to_initials <- source("helpers/to_initials.R", local = knitr::knit_global())$value
```

```{r}
mc3_nodes_clean <- mc3_nodes_lite %>%
  mutate(
    name = id,
    alias = sapply(name, to_initials),
    supertype = strsplit(type, ".", fixed=TRUE) %>% sapply('[', 2),
    # Get the last type as subtype. In the case of Entity.Person,
    # both supertype and subtype are "Person".
    subtype = strsplit(type, ".", fixed=TRUE) %>% sapply(tail, n=1)
    # Names are long so will create alias from initials of name for display in graph
  ) %>%
  select(name, alias, supertype, subtype)

kable(head(mc3_nodes_clean))
```

Let's also check if `supertype`, `subtype`, have been mapped correctly.

```{r}
mc3_nodes_clean %>%
  group_by(supertype, subtype) %>%
  summarize(count = n()) %>%
  arrange(-count) %>%
  kable()
```

### Edges

For `ggraph` to plot the edges correctly, we need to assigns weights to the edges. For simplicity, let us assign the number of edges with the same `source`, `target` and `type`.

Lastly, we will change `source` and `target` to `from` and `to`, respectively for compatibility with network functions we will use.

```{r}
mc3_edges_clean <- mc3_edges_lite %>%
  rename(from = source, to = target, ) %>%
  mutate(
    supertype = ifelse(
      grepl("Event.Owns", type),
      "Ownership",
      ifelse(grepl("Relationship", type), "Relationship", "Employment")
    ),
    subtype = strsplit(type, ".", fixed = TRUE) %>% sapply(tail, n = 1)
  ) %>%
  filter(from != to) %>%
  group_by(from, to, supertype, subtype) %>%
  summarize(weight = n())

kable(head(mc3_edges_clean))
```

Lastly, let's check if `type` has been mapped correctly to `supertype` and `subtype`.

```{r}
mc3_edges_clean %>%
  group_by(supertype, subtype) %>%
  summarize(count = n()) %>%
  arrange(-count) %>%
  kable()
```
:::

## 3.4 Preparing the supernetwork

We will prepare the supernetwork from the nodes and edges we prepared.

```{r}
supernetwork = tbl_graph(edges = mc3_edges_clean,
                         nodes = mc3_nodes_clean,
                         directed = TRUE)
```

We call this a supernetwork as this covers the entire network of entities within the fishing business community.

```{r}
#| echo: false
# Clean up environment
rm(mc3_data)
rm(mc3_nodes_raw, mc3_nodes_lite, mc3_nodes_clean)
rm(mc3_edges_raw, mc3_edges_lite, mc3_edges_clean)
rm(to_initials)
```

# 4 Extracting Subnetworks

## 4.1 Extracting for ease of analysis

As the `supernetwork` is very large, we will need to extract part of it to perform analysis effectively. To do this, we will need to extract subnetworks from this bigger network.

::: panel-tabset
### Explanation

We will extract subnetworks based on distance from a given node. By default, we will get the network of all **connected nodes** to the reference node.

We will use the following functions:

-   `ego()` from *igraph* to get a list of nodes within a given distance from the given node

-   `induced_subgraph()` to extract the subgraph containing only the nodes from the result of `ego()`. This will return an *igraph* type.

-   `as_data_frame()` to extract the nodes and edges so we can generate a `tbl_graph` which is compatible to both *igraph* and *ggraph* functions.

### Function

```{r}
#| file: helpers/extract_subnetwork.R
```

```{r}
#| echo: false
extract_subnetwork <- source("helpers/extract_subnetwork.R", local = knitr::knit_global())$value
```
:::

## 4.2 Plotting the subnetworks

To demonstrate what this function does, we will look at 3 subnetworks related to *SouthSeafood Express Corp.*

1.  Direct neighbors - They have the strongest influence on and can be influenced the most by *SouthSeafood Express Corp.*
2.  Sphere of influence - Based on Nicholas A. Christakis and James H. Fowler's theory of [**Three Degrees of Influence**](https://www.strategy-business.com/article/10218), which states that that influence gradually dissipates and eventually cease to be notable beyond the **3rd degree of separation**. This contains the nodes where *SouthSeafood Express Corp have* notable influence.
3.  Connected network - We will look at the entire network containing the nodes that are connected to *SouthSeafood Express Corp* in any way.

We will use `plot_fishing_relationships()` to plot the relationship graph of the network.

```{r}
#| code-fold: true
#| code-summary: 'Show the code for plot_fishing_relationships()'
#| file: helpers/plot_fishing_relationships.R
```

```{r}
#| echo: false
plot_fishing_relationships <- source("helpers/plot_fishing_relationships.R", local = knitr::knit_global())$value
```

::: {.callout-tip collapse="true" appearance="simple"}
### Relationship Graph

We call this the *Relationship Graph* as the provided graph shows the different relationships among the different entities.

Later, we will tackle how to generate the *Power Graph* which will represent the power and flow of resources within the network.
:::

::: panel-tabset
### Direct Neighbors

```{r}
#| code-fold: true
#| code-summary: 'Show the code'
extract_subnetwork(
  supernetwork,
  node_name="SouthSeafood Express Corp",
  distance=1
) %>% plot_fishing_relationships(
  layout = "linear",
  circular = TRUE,
  node_size = 12,
  arrow_margin = 5.5,
  title = "Relationship Graph: SouthSeafood Express Corp's Direct Neighbors",
  subtitle = "Two other fishing companies, <span style='color:blue;'>**AguaLeska Transit N.V.**</span> and <span style='color:blue;'>**Tainamarine Fishing Co**</span> hold shares in<br />SouthSeafood Express Corp. They are posed to benefit the most from the company's illegal fishing activities."
)
```

::: callout-tip
#### Insights

As shareholders, **AguaLeska Transit N.V.** and **Tainamarine Fishing Co** have big influence on where the resources of *SouthSeafood Express Corp* go.

In this case, most of it will most likely opposite of the arrow direction, i.e. benefitting the shareholders.
:::

### Sphere of Influence

```{r}
#| code-fold: true
#| code-summary: 'Show the code'
extract_subnetwork(
  supernetwork,
  node_name="SouthSeafood Express Corp",
  distance=3
) %>% plot_fishing_relationships(
  title = "Relationship Graph: SouthSeafood Express Corp's Sphere of Influence",
  subtitle = "Entities with 3 degrees of separation from **SouthSeafood Express Corp**. This is where the influence of the<br />company is noticeable."
)
```

::: callout-tip
#### Insights

The network map is comprised mostly of *Shareholderships* and *BenificialOwnerships.*

*SouthSeafood Express Corp's* shareholders, **AguaLeska Transit N.V.** and **Tainamarine Fishing Co** have additional shareholders.

**StichtingMarine Shipping Company** holds shares in these companies (via other entities). **SavanetaCreek Solutions N.V.**, a Logistics Company, also holds a shareholdership in StichtingMarine Shipping Company. These two nodes serve as resource hubs, gathering resources from the companies in which they hold shares, ultimately benefiting their owners and shareholders.

Moreover, **Liam Conti** and **Fintan Park** are the beneficial owners of these companies, giving them final decision-making power and likely the greatest benefits from the network's resources. Additionally, as a family member of **Liam Conti**, **Nadia Conti** may also benefit from Liam's ownership of these companies.

Intuitively, these five nodes are likely candidates for the most influential entities within the network.
:::

### Connected Network

```{r}
#| code-fold: true
#| code-summary: 'Show the code'
extract_subnetwork(
  supernetwork,
  node_name="SouthSeafood Express Corp"
) %>% plot_fishing_relationships(
  node_size = 5,
  arrow_margin = 2,
  title = "Relationship Graph: SouthSeafood Express Corp's Full Network",
  subtitle = "This shows the full view of the network connected to SouthSeafood Express Corp in any way."
)
```

::: callout-tip
#### Insights

With this sheer number of nodes, it is hard to infer any relationships aside from general estimate of how many of each entity and the type of relationships present in the system.

We should consider using other tools that provide more interactivity, like `visNetwork`.

Later on, we will explore different centralities to help infer which entities are most influential in the network.
:::
:::

# 5 Generating Power Graph

To figure out who are the most influential or greatest beneficiaries within the network, we have to look at the power dynamics in each relationship.

## 5.1 Direction

As we want to investigate the flow of power and resources, the direction will be from the **less powerful to more powerful** entity.

## 5.2 Weights

For the purpose of our analysis, we will score each relationship flow according to the following:

-   Benefits from the resources: 1 (+1 if they are the owner of a company)

-   A decision-maker on where resources go: 2 (+1 if they are the ultimate decision maker)

-   Influential on the other person: 1 (only if target is a person)

We will use the total as the weights for each edge. Lastly, we will rename the relationship to prevent confusion in case of direction reversal.

## 5.3 Score tables

::: panel-tabset
### BeneficialOwner

Beneficial owners benefit from the resources of the company.

While BeneficialOwners may or may not be Shareholders in the same company, they hold the ultimate decision-making power.

Current From

+-------------------------+-------------------------------------+
| Current **From**        | Owner                               |
+-------------------------+-------------------------------------+
| Current **To**          | Company                             |
+-------------------------+-------------------------------------+
| New **From\             | Company                             |
| **(Lower power)         |                                     |
+-------------------------+-------------------------------------+
| New **To\               | Owner                               |
| **(Higher power)        |                                     |
+-------------------------+-------------------------------------+
| New **subtype**         | OwnedBy                             |
+-------------------------+-------------------------------------+
| Beneficiary             | 1 + 1                               |
+-------------------------+-------------------------------------+
| Decision-maker          | 2 + 1                               |
+-------------------------+-------------------------------------+
| Influential (on person) | 0                                   |
+-------------------------+-------------------------------------+
| **Total**               | **5**                               |
+-------------------------+-------------------------------------+

: Owner

### Shareholdership

Shareholders may receive proceeds from the profits of the company.

They have some decision-making power within the company. However, it is the Beneficial Owner that ultimately gets the final say in decisions.

+-------------------------+-------------------------------------+
| Current **From**        | Shareholder                         |
+-------------------------+-------------------------------------+
| Current **To**          | Company                             |
+-------------------------+-------------------------------------+
| New **From\             | Company                             |
| **(Lower power)         |                                     |
+-------------------------+-------------------------------------+
| New **To\               | Shareholder                         |
| **(Higher power)        |                                     |
+-------------------------+-------------------------------------+
| New **subtype**         | HasShareholder                      |
+-------------------------+-------------------------------------+
| Beneficiary             | 1                                   |
+-------------------------+-------------------------------------+
| Decision-maker          | 2                                   |
+-------------------------+-------------------------------------+
| Influential (on person) | 0                                   |
+-------------------------+-------------------------------------+
| **Total**               | **3**                               |
+-------------------------+-------------------------------------+

### WorksFor

Employees are contractually obligated to act in the interests of their employer.

Employers also influence what their employees do in the business.

+-------------------------+-------------------------------------+
| Current **From**        | Owner                               |
+-------------------------+-------------------------------------+
| Current **To**          | Company                             |
+-------------------------+-------------------------------------+
| New **From\             | Company                             |
| **(Lower power)         |                                     |
+-------------------------+-------------------------------------+
| New **To\               | Owner                               |
| **(Higher power)        |                                     |
+-------------------------+-------------------------------------+
| New **subtype**         | OwnedBy                             |
+-------------------------+-------------------------------------+
| Beneficiary             | 1 + 1                               |
+-------------------------+-------------------------------------+
| Decision-maker          | 2 + 1                               |
+-------------------------+-------------------------------------+
| Influential (on person) | 0                                   |
+-------------------------+-------------------------------------+
| **Total**               | **5**                               |
+-------------------------+-------------------------------------+

### FamilyRelationship

Assuming that family members have a healthy relationship, they share resources and confide in each other.

Due to this, they have power over each other.

+-------------------------+-------------------------------------+
| Current **From**        | Person 1                            |
+-------------------------+-------------------------------------+
| Current **To**          | Person 2                            |
+-------------------------+-------------------------------------+
| New **From\             | Person 2 (additional)               |
| **(Lower power)         |                                     |
+-------------------------+-------------------------------------+
| New **To\               | Person 2                            |
| **(Higher power)        |                                     |
|                         | (additional)                        |
+-------------------------+-------------------------------------+
| New **subtype**         | FamilyRelationship                  |
+-------------------------+-------------------------------------+
| Beneficiary             | 1                                   |
+-------------------------+-------------------------------------+
| Decision-maker          | 0                                   |
+-------------------------+-------------------------------------+
| Influential (on person) | 1                                   |
+-------------------------+-------------------------------------+
| **Total**               | **2**                               |
+-------------------------+-------------------------------------+
:::

::: {.callout-caution appearance="simple"}
These scores are subjective and based on general assumptions. We also lack the information to model the power dynamics accurately.
:::

## 5.4 Converting relationship edges to power flow

Using the table above, we will create a function to convert relationship edges to power flow.

```{r}
#| file: helpers/convert_edges_to_power_flow.R
```

```{r}
#| echo: false
convert_edges_to_power_flow <- source("helpers/convert_edges_to_power_flow.R", local = knitr::knit_global())$value
```

Let us check the resulting edges table. We are expecting that all edge types would have the same number, expect for *FamilyRelationship*, which is expected to **double**.

::: panel-tabset
### Relationship

```{r}
supernetwork %>%
  as_data_frame(what = "edges") %>%
  group_by(supertype, subtype) %>%
  summarize(count = n()) %>%
  arrange(-count) %>%
  kable()
```

### Power

```{r}
supernetwork %>%
  as_data_frame(what = "edges") %>%
  convert_edges_to_power_flow() %>%
  group_by(supertype, subtype) %>%
  summarize(count = n()) %>%
  arrange(-count) %>%
  kable()
```
:::

## 5.5 Converting relationship graphs to power flow

Using the edge converter, we will generate a new `tbl_graph` with the power flow edges.

```{r}
#| file: helpers/convert_graph_to_power_flow.R
```

```{r}
#| echo: false
convert_graph_to_power_flow <- source("helpers/convert_graph_to_power_flow.R", local = knitr::knit_global())$value
```

## 5.6 Plotting the power graph

Similar to [4.2 Plotting the subnetworks], we will look at 3 subnetworks related to *SouthSeafood Express Corp*.

We will use `plot_fishing_power()` to plot the relationship graph of the network.

```{r}
#| code-fold: true
#| code-summary: 'Show the code for plot_fishing_power()'
#| file: helpers/plot_fishing_power.R
```

```{r}
#| echo: false
plot_fishing_power <- source("helpers/plot_fishing_power.R", local = knitr::knit_global())$value
```

::: panel-tabset
### Direct Neighbors

```{r}
#| code-fold: true
#| code-summary: 'Show the code'
supernetwork %>%
  extract_subnetwork(node_name = "SouthSeafood Express Corp", distance = 1) %>%
  convert_graph_to_power_flow() %>%
  plot_fishing_power(
    layout = "linear",
    circular = TRUE,
    node_size = 12,
    arrow_margin = 5.5,
    title = "Power Graph: SouthSeafood Express Corp's Direct Neighbors",
    subtitle = "Two other fishing companies, <span style='color:blue;'>**AguaLeska Transit N.V.**</span> and <span style='color:blue;'>**Tainamarine Fishing Co**</span> hold shares in<br />SouthSeafood Express Corp. They are posed to benefit the most from the company's illegal fishing activities."
  )
```

::: callout-tip
#### Insights

By making adjustments to the edges, we can better see that *SouthSeafood Express Corp* answers to its shareholders, **AguaLeska Transit N.V.** and **Tainamarine Fishing Co**.
:::

### Sphere of Influence

```{r}
#| code-fold: true
#| code-summary: 'Show the code'
supernetwork %>%
  extract_subnetwork(node_name = "SouthSeafood Express Corp", distance = 3) %>%
  convert_graph_to_power_flow() %>%
  plot_fishing_power(
    title = "Power Graph: SouthSeafood Express Corp's Sphere of Influence",
    subtitle = "Entities with 3 degrees of separation from **SouthSeafood Express Corp**. This is where the influence of the<br />company is noticeable."
  )
```

::: callout-tip
#### Insights

In this plot, we can more clearly see that **StichtingMarine Shipping Company** is a hub that gathering resources from other nodes.

However, the flow does not stop there as the power further flows to its shareholders and owners, **SavanetaCreek Solutions N.V.**, **Liam Conti**, and **Fintan Park.** Some power may trickle down to **Nadia Conti**, as Liam's family member.

Although it does not change our insight from the relationship graph. These influence of these five nodes is much clearer with the power graph.
:::

### Connected Network

```{r}
#| code-fold: true
#| code-summary: 'Show the code'
supernetwork %>%
  extract_subnetwork(node_name = "SouthSeafood Express Corp") %>%
  convert_graph_to_power_flow() %>%
  plot_fishing_power(
    node_size = 5,
    arrow_margin = 2,
    title = "Power Graph: SouthSeafood Express Corp's Full Network",
    subtitle = "This shows the full view of the network connected to SouthSeafood Express Corp in any way."
  )
```

::: callout-tip
#### Insights

With the power graph, it is much easier to notice the most powerful entities in the network.

For example, **Lemuel Conti** has many arrows pointing in, which indicates power over many other nodes.

Another powerful node is **GvardeyskAmerica Shipping Plc**, which is a hub that has power over other nodes. Tracing the arrows reveal that the power flow ends with **Fabio Conti**.

Although not liked as family members, it is highly llikely that **Liam Conti**, **Lemuel Conti**, and **Fabio Conti** are part of a clan that controls is part of the fishing business network.
:::
:::

# 6 Measures of Centrality

We defined the influential entities as having 2 types:

**Type 1:** They have the most power

**Type 2:** They have the ability to connect entities and be a power broker.

## 6.1 Appropriate measures of centrality

::: panel-tabset
### Most Powerful

To identify the most powerful nodes/entities in the network, we will use **page rank** centrality. Originally developed by Google, this is used in ranking web pages. The principle is that *the more incoming edges a node has, the more influential it is*.

This measure for centrality is useful in this context as in our power graph, the node where the power flow stops is the most powerful node.

The main candidates for these are the **BeneficialOwners** and **Shareholders**.

### Power Brokers

To identify the power brokers, we will use **betweenness** centrality.

Power Brokers must be nodes with **both incoming and outgoing edges**, so that it can connect a more powerful node to a less powerful node. Hence, having a large number of edges connected to a node is not enough (which the degree centrality offers). This is because if a node only has 1 kind, it won't be able to connect to other nodes to keep the flow going.
:::

## 6.2 Calculating centrality

We will again use the networks of *SouthSeafood Express Corp* to check how these centrality measures play in the network.

We will use the power graphs of *Sphere of Influence* and the *Connected Network*.

::: panel-tabset
### Sphere of Influence

```{r}
sfec_sphere_of_influence_power <- supernetwork %>%
  extract_subnetwork(node_name = "SouthSeafood Express Corp", distance = 3) %>%
  convert_graph_to_power_flow() %>%
  mutate(
    pagerank_score = centrality_pagerank(weights = E(.)$weight),
    betweenness_score = centrality_betweenness(weights = E(.)$weight, normalized = TRUE)
  )
```

### Connected Network

```{r}
sfec_connected_network_power <- supernetwork %>%
  extract_subnetwork(node_name = "SouthSeafood Express Corp") %>%
  convert_graph_to_power_flow() %>%
  mutate(
    pagerank_score = centrality_pagerank(weights = E(.)$weight),
    betweenness_score = centrality_betweenness(weights = E(.)$weight, normalized = TRUE)
  )
```
:::

## 6.3 Identifying the most powerful nodes

We will use `plot_centrality` to identify the most powerful nodes by visualizing the **pagerank centrality** of the nodes.

```{r}
#| code-fold: true
#| code-summary: 'Show the code for plot_centrality()'
#| file: helpers/plot_centrality.R
```

```{r}
#| echo: false
plot_centrality <- source("helpers/plot_centrality.R", local = knitr::knit_global())$value
```

### 6.3.1 Sphere of Influence

::: panel-tabset
#### Graph

```{r}
sfec_sphere_of_influence_power %>%
  plot_centrality(
    "pagerank",
    title = "Most Powerful Entities in SouthSeafood Express Corp's Sphere of Influence",
    subtitle = "A higher value of **pagerank centrality** means the entity has higher power and benefits from the network."
  )
```

#### Table

```{r}
sfec_sphere_of_influence_power %>%
  as_data_frame(what = "vertices") %>%
  arrange(-pagerank_score) %>%
  select(alias, pagerank_score, supertype, subtype) %>%
  kable()
```
:::

::: callout-tip
#### Insights

Applying the pagerank centrality confirms our observations that **Liam Conti** and **Fintan Park** are part of the powerful entities within *SouthSeafood Express Corp's* Sphere of Influence.

Furthermore, based on our model, **Nadia Conti** also is one of the most entities with the network by being related to **Liam Conti**.

**StichtingMarine Shipping Company**, which is owned by **Liam Conti** and where **Fintan Park** holds shares in, is the most powerful organization as it controls various companies through other entities.

It can be said that whoever controls this company has the most power in the network.
:::

### 6.3.2 Connected Network

::: panel-tabset
#### Graph

```{r}
sfec_connected_network_power %>%
  plot_centrality(
    "pagerank",
    title = "Most Powerful Entities in SouthSeafood Express Corp's Connected Network",
    subtitle = "A higher value of **pagerank centrality** means the entity has higher power and benefits from the network."
  )
```

#### Table

```{r}
sfec_connected_network_power %>%
  as_data_frame(what = "vertices") %>%
  arrange(-pagerank_score) %>%
  select(alias, pagerank_score, supertype, subtype) %>%
  kable()
```
:::

::: callout-tip
#### Insights

Members of the **Conti Clan** are the most powerful people in the network, with **Lena Conti-Park** being the most powerful.

She seems to be the wife of **Fintan Park**, which makes him part of the clan also.

This further confirms our hypothesis and observations that the **Conti Clan** controls this part of the fishing business network.
:::

## 6.4 Identifiying the power brokers

### 6.4.1 Sphere of Influence

::: panel-tabset
#### Graph

```{r}
sfec_sphere_of_influence_power %>%
  plot_centrality(
    "betweenness",
    title = "The Power Brokers in SouthSeafood Express Corp's Sphere of Influence",
    subtitle = "A higher value of **betweenness centrality** means the entity is more capable of connecting entities."
  )
```

#### Table

```{r}
sfec_sphere_of_influence_power %>%
  as_data_frame(what = "vertices") %>%
  arrange(-betweenness_score) %>%
  select(alias, betweenness_score, supertype, subtype) %>%
  kable()
```
:::

::: callout-tip
#### Insights

The power brokers in this network are the companies that acts as *middleman* between a lower power entity to a lower one.

The most notable is **StichtingMarine Shipping Company**, where the Conti Clan members, **Liam Conti and Fintan Park**, hold shares in and Liam owns.

This fishing company becomes their way to consolidate the power and resources within the system.
:::

### 6.4.2 Connected Network

::: panel-tabset
#### Graph

```{r}
sfec_connected_network_power %>%
  plot_centrality(
    "betweenness",
    title = "The Power Brokers in SouthSeafood Express Corp's Connected Network",
    subtitle = "A higher value of **betweenness centrality** means the entity is more capable of connecting entities."
  )
```

#### Table

```{r}
sfec_connected_network_power %>%
  as_data_frame(what = "vertices") %>%
  arrange(-betweenness_score) %>%
  select(alias, betweenness_score, supertype, subtype) %>%
  kable()
```
:::

::: callout-tip
#### Insights

Similar to the smaller network, the power brokers in the bigger network are the companies owned by **Conti Clan** members. These companies transfer the power and resources from the wider network to them.

These are **StichtingMarine Shipping Company**, **GvardeyskAmerica Shipping Plc**, **NamRiver Transit A/S**, **Namorna Transit Ltd**.
:::

## 6.5 Curious case of Sanaa El-Amin

Consider the influential entities within **Sanaa El-Amin**'s sphere of influence. She is also within *SouthSeafood Express Corp*'s connected network.

```{r}
sea_sphere_of_influence_power <- supernetwork %>%
  extract_subnetwork(node_name = "Sanaa El-Amin", distance = 3) %>%
  convert_graph_to_power_flow() %>%
  mutate(
    pagerank_score = centrality_pagerank(weights = E(.)$weight),
    betweenness_score = centrality_betweenness(weights = E(.)$weight, normalized = TRUE)
  )
```

::: panel-tabset
### Most Powerful

```{r}
sea_sphere_of_influence_power %>%
  plot_centrality(
    "pagerank",
    title = "The Power Brokers in Sanaa El-Amin's Sphere of Influence",
    subtitle = "A higher value of **betweenness centrality** means the entity is more capable of connecting entities."
  )
```

### Power Brokers

```{r}
sea_sphere_of_influence_power %>%
  plot_centrality(
    "betweenness",
    title = "The Power Brokers in Sanaa El-Amin's Sphere of Influence",
    subtitle = "A higher value of **betweenness centrality** means the entity is more capable of connecting entities."
  )
```
:::

**Sanaa El-Amin** is **not influential**, according to the metrics that we set but she works with a lot of companies in the network. This includes **GvardeyskAmerica Shipping Plc** , **NamRiver Transit A/S**, and **StichtingMarine Shipping Company**, which are the strongest *power brokers* in the network.

It can imply that she is an expert in the industry so various companies hire her (perhaps as a consultant). Although she does not own any companies, nor hold shares in any, she may hold some influence in the network as **influential companies depend on her services**.

### 6.5.1 Measures of centrality to identify this influence

Possible measures of centrality that can identify her influence could be **eigenvector centrality**. In eigenvector centrality, the principle *the more influential your neighbors are, the more influential you are.* This can be interpreted such that her association with influential companies also gives her influence.

Other measures of centrality that can identify this particular are **hub centrality** (due to her direct connection with influential nodes) and **degree centrality** (due to the number of outgoing edges).

::: callout-tip
#### Do we update the power model?

Despite this observation, we will **not** update the power model, nor add another measure of centrality to our visualizations.

This is because we acknowledged that the model we created in [5.3 Score tables] is imperfect and we lack information to model the power dynamics in the network accurately.

However, it is enough that we learn that our model will **not identify** all influential people in the network, and can even mis-identify some entities as influential.
:::

# 7 Power Flow

# References

<https://blogs.cornell.edu/info2040/2015/10/19/three-degrees-of-influence-how-far-can-you-reach-people/>

<https://www.strategy-business.com/article/10218>

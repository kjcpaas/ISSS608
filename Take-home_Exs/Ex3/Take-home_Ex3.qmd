---
title: "Take Home Ex3: VAST Challenge 2024 Mini-Challenge 3 [WIP]"
author: "Kristine Joy Paas"
date: "22 May 2024"
date-modified: "last-modified"
format: html
execute: 
  echo: true
  eval: true
  warning: false
  freeze: true
---

# 1 Overview

In this exercise, we will be tacking [Mini-case 3](https://vast-challenge.github.io/2024/MC3.html) of [VAST Challenge 2024](https://vast-challenge.github.io/2024/index.html).

We will answer **Questions 3 and 4** from the mini-challenge:

> 3.  Develop a visual approach to examine inferences. Infer how the influence of a company changes through time. Can you infer ownership or influence that a network may have?
>
> 4.  Identify the network associated with SouthSeafood Express Corp and visualize how this network and competing businesses change as a result of their illegal fishing behavior. Which companies benefited from SouthSeafood Express Corp legal troubles? Are there other suspicious transactions that may be related to illegal fishing? Provide visual evidence for your conclusions.

## 1.1 The data

We will use the dataset provided by VAST Challenge. It is a network data that contains nodes that represent the different entities in the fishing business industry, and edges which represent the relationships between different entities.

## 1.2 Methodology

To answer this questions, we will investigate the changes in the fishing business community through time. We will do this by creating **animations of the network through time**.

::: {.callout-important appearance="minimal"}
Unfortunately, animations cannot be generated due to the limitations of compatibility of `plotly` and `gganimate` with `ggraph`.

See [5.3 Animations] for details.
:::

Secondly, we will identify the influential entities in the network. We will do this by first visually inspecting the network and making inferences.

Lastly, we will use measures of centrality to verify our inferences.

For the purposes of this exercise we will define 2 types of influential entity:

-   Power holders - Those who hold the most power and beneficiary of resources in the network. We will use **pagerank** centrality to identify power holders.

-   Power brokers - Those who facilitate the transfer of power/resources from a less powerful entity to another. We will use **betweenness centrality** to identify power brokers.

# 2 Setup

## 2.1 Loading Packages

```{r}
#| label: setup
pacman::p_load(
  jsonlite,
  tidyverse,
  ggraph,
  tidygraph,
  lubridate,
  patchwork,
  ggtext,
  knitr,
  igraph,
  ggiraph
)
```

## 2.2 Loading Data

```{r}
mc3_data <- fromJSON("data/mc3.json")
glimpse(mc3_data)
```

It contains graph data, where nodes can be accessed via `nodes` and edges via `links`. This dataset has a lot of columns but we will only filter the relevant data during wrangling..

## 2.3. Defining common variables

We will also set some values to have consistency throughout all graphs. This is also so that we only need to change them in one place

::: panel-tabset
### Styles

We are going to define styles for plotting our different kind of graphs. This is to provide consistency and reduce mistakes when changing how plots are rendered.

```{r}
STYLES = list(
  font_family = "Roboto Condensed",
  # Colors
  primary_color = "blue",
  #primary_light_color = "#e6e6ff",
  primary_light_color = "white",
  secondary_color = "darkorange",
  secondary_light_color = "white",
  muted_color = "grey50",
  title_color = "grey25",
  normal_text_color = "grey50",
  # Graph
  node_size = 7.5,
  node_border_color = "grey50",
  node_border_stroke = 0.5,
  node_emphasized_border_color = "black",
  node_emphasized_border_stroke = 1,
  arrow_margin = 3.2,
  arrow_style = arrow(type = "closed", length = unit(2, "pt")),
  base_edge_thickness = 0.2,
  # Panel
  panel_border_color = "grey50",
  panel_border_thickness = 0.5,
  # Texts
  node_label_size = 2,
  node_label_dark = "black",
  node_label_light = "white",

  default_caption = "Hover on the nodes to see more details.",
  # Interactive elemnents
  tooltip_css = paste0(
    "background-color:black;color:white;",
    "font-family:Roboto Condensed;font-size:10pt;",
    "padding:4px;text-align:center;"
  ),
  svg_width = 6,
  svg_height = 6 * 0.618
)
```

### Theme Elements

Common theme elements, another `theme()` definition can be used if these elements need to be overridden.

```{r}
COMMON_THEME = theme(
  text = element_text(family = STYLES$font_family, color = STYLES$normal_text_color),
  plot.title = element_markdown(
    color = STYLES$title_color,
    face = "bold",
    size = unit(10, "pt")
  ),
  plot.subtitle = element_markdown(size = unit(8, "pt")),
  plot.caption = element_markdown(size = unit(6, "pt"), hjust = 0),
  plot.margin = margin(2, 0, 0, 0, unit = "pt"),
  
  # Legend styles
  legend.position = "right",
  legend.location = "plot",
  legend.justification = "top",
  legend.title = element_markdown(
    color = STYLES$title_color,
    face = "bold",
    size = unit(8, "pt")
  ),
  legend.text = element_text(size = unit(6, "pt"), vjust = 0.5),
  legend.box.spacing = unit(4, "pt"),
  legend.margin = margin(0),
  legend.spacing.x = unit(2, "pt"),
  legend.spacing.y = unit(8, "pt"),
  legend.key.size = unit(12, "pt"),
  
  panel.border = element_rect(
    color = STYLES$panel_border_color,
    fill = NA,
    linewidth = STYLES$panel_border_thickness
  )
)
```

### Mappings

```{r}
MAPPINGS = list(
  # Available shapes: https://www.datanovia.com/en/blog/ggplot-point-shapes-best-tips/
  node_supertype_to_shape = c(
    "Person" = 24, # Triangle
    "Organization" = 21 # Circle
  ),
  # Color schemes
  # Colorblind pallettes from https://davidmathlogic.com/colorblind
  node_subtype_to_color = c(
    "Person" = "#44AA99",
    "CEO" = "#117733",
    "Company" = "#DDCC77",
    "FishingCompany" = "#88CCEE",
    "LogisticsCompany" = "#332288",
    "FinancialCompany" = "#AA4499",
    "NGO" = "#CC6677",
    "NewsCompany" = "#882255"
  ),
  edge_relationship_subtype_to_color = c(
    "WorksFor" = "#D81B60",
    "Shareholdership" = "#FFC107",
    "BeneficialOwnership" = "#004D40",
    "FamilyRelationship" = "#1E88E5"
  ),
  edge_power_subtype_to_color = c(
    "WorksFor" = "#D81B60",
    "HasShareholder" = "#FFC107",
    "OwnedBy" = "#004D40",
    "FamilyRelationship" = "#1E88E5"
  )
)
```

### Other configurations

```{r}
CONFIGS = list(
  default_seed = 7253 # For reproduceability
)
```
:::

# 3 Data Wrangling

## 3.1 Extracting Graph Elements

We need to do time and network analysis so we will only include the columns needed to do these analysis.

::: panel-tabset
### Nodes

The nodes represent the entities in the network. They can be people or companies.

```{r}
mc3_nodes_raw <- as_tibble(mc3_data$nodes)
glimpse(mc3_nodes_raw)
```

We will only retain the following columns:

-   `id` - to serve as the identifier for the node

-   `type` - to differentiate people from companies in the graph.

```{r}
mc3_nodes_lite <- mc3_nodes_raw %>% select(id, type)
```

### Edges

The edges represent the relationship between different nodes.

```{r}
mc3_edges_raw <- as_tibble(mc3_data$links)
glimpse(mc3_edges_raw)
```

We will only retain the following columns:

-   `source` - to identify the *actor* of the relationship, corresponds to `id` in nodes.

-   `target` - to identify the *receiver* of the relationship, corresponds to `id` in nodes.

-   `type` - to identify the type of the relationship

-   `start_date` - to identify when the relationship started

-   `end_date` - to identify when the relationship ended

```{r}
mc3_edges_lite <- mc3_edges_raw %>% select(source, target, type, start_date, end_date)
```
:::

## 3.2 Closer look at *type*

Both the `nodes` and `edges` have `type` which contains the type of the nodes and edges. We will assign a `supertype` and a `subtype` from `type`.

::: panel-tabset
### Nodes

```{r}
(mc3_nodes_lite$type) %>% unique()
```

`supertype` - type of entity, either *Person* or *Organization*

`subtype` - subcategory of *supertype*, e.g., *Company, FishingCompany, CEO*

### Edges

```{r}
(mc3_edges_lite$type) %>% unique()
```

`supertype` - type of relationship, either *Ownership*, *Employment, Relationship.*

`subtype` - subcategory of *supertype*, e.g., *Shareholdership, BeneficialOwnership, FamilyRelationship*
:::

## 3.3 Preparing the data

With the considerations above, we will shape the data needed for our graph visualization.

::: panel-tabset
### Nodes

For nodes, we will also assign a shape for visualization depending on *supertype.* For people, we will use üìê, while we use üî¥ for organizations.

Lastly, we will assign alias to each node as an alternative label to the names (as they are long). This will be generated using the first 4 initials of the name

```{r}
#| file: helpers/to_initials.R
```

```{r}
#| echo: false
to_initials <- source("helpers/to_initials.R", local = knitr::knit_global())$value
```

```{r}
mc3_nodes_clean <- mc3_nodes_lite %>%
  mutate(
    name = id,
    alias = sapply(name, to_initials),
    supertype = strsplit(type, ".", fixed=TRUE) %>% sapply('[', 2),
    # Get the last type as subtype. In the case of Entity.Person,
    # both supertype and subtype are "Person".
    subtype = strsplit(type, ".", fixed=TRUE) %>% sapply(tail, n=1)
    # Names are long so will create alias from initials of name for display in graph
  ) %>%
  select(name, alias, supertype, subtype)

kable(head(mc3_nodes_clean))
```

Let's also check if `supertype`, `subtype`, have been mapped correctly.

```{r}
mc3_nodes_clean %>%
  group_by(supertype, subtype) %>%
  summarize(count = n()) %>%
  arrange(-count) %>%
  kable()
```

### Edges

For `ggraph` to plot the edges correctly, we need to assigns weights to the edges. For simplicity, let us assign the number of edges with the same `source`, `target` and `type`.

Lastly, we will change `source` and `target` to `from` and `to`, respectively for compatibility with network functions we will use.

```{r}
mc3_edges_clean <- mc3_edges_lite %>%
  rename(from = source, to = target, ) %>%
  mutate(
    supertype = ifelse(
      grepl("Event.Owns", type),
      "Ownership",
      ifelse(grepl("Relationship", type), "Relationship", "Employment")
    ),
    subtype = strsplit(type, ".", fixed = TRUE) %>% sapply(tail, n = 1),
    # Convert date strings to datetime
    start_date = as_datetime(start_date),
    end_date = as_datetime(end_date)
  ) %>%
  filter(from != to) %>%
  group_by(from, to, supertype, subtype, start_date, end_date) %>%
  summarize(weight = n())

kable(head(mc3_edges_clean))
```

Lastly, let's check if `type` has been mapped correctly to `supertype` and `subtype`.

```{r}
mc3_edges_clean %>%
  group_by(supertype, subtype) %>%
  summarize(count = n()) %>%
  arrange(-count) %>%
  kable()
```
:::

## 3.4 Preparing the supernetwork

We will prepare the supernetwork from the nodes and edges we prepared.

```{r}
supernetwork = tbl_graph(edges = mc3_edges_clean,
                             nodes = mc3_nodes_clean,
                             directed = TRUE)
```

We call this a supernetwork as this covers the entire network of entities within the fishing business community.

```{r}
#| echo: false
# Save environment
saveRDS(mc3_nodes_clean, "data/rds/mc3_nodes_clean.rds")
saveRDS(mc3_edges_clean, "data/rds/mc3_nodes_edges.rds")
saveRDS(supernetwork, "data/rds/supernetwork.rds")
# Clean up environment
rm(mc3_data)
rm(mc3_nodes_raw, mc3_nodes_lite, mc3_nodes_clean)
rm(mc3_edges_raw, mc3_edges_lite, mc3_edges_clean)
rm(to_initials)
```

# 4 Extracting subnetworks

## 4.1 Extracting for ease of analysis

As the `supernetwork` is very large, we will need to extract part of it to perform analysis effectively. To do this, we will need to extract subnetworks from this bigger network.

::: panel-tabset
### Explanation

We will extract subnetworks based on distance from a given node. By default, we will get the network of all **connected nodes** to the reference node.

We will use the following functions:

-   `ego()` from *igraph* to get a list of nodes within a given distance from the given node

-   `induced_subgraph()` to extract the subgraph containing only the nodes from the result of `ego()`. This will return an *igraph* type.

-   `as_data_frame()` to extract the nodes and edges so we can generate a `tbl_graph` which is compatible to both *igraph* and *ggraph* functions.

### Function

```{r}
#| file: helpers/extract_subnetwork.R
```

```{r}
#| echo: false
extract_subnetwork <- source("helpers/extract_subnetwork.R", local = knitr::knit_global())$value
```
:::

## 4.2 Plotting the subnetworks

To demonstrate what this function does, we will look at 3 subnetworks related to *SouthSeafood Express Corp.*

1.  Direct neighbors - They have the strongest influence on and can be influenced the most by *SouthSeafood Express Corp.*
2.  Sphere of influence - Based on Nicholas A. Christakis and James H. Fowler's theory of [**Three Degrees of Influence**](https://www.strategy-business.com/article/10218), which states that that influence gradually dissipates and eventually cease to be notable beyond the **3rd degree of separation**. This contains the nodes where *SouthSeafood Express Corp have* notable influence.
3.  Connected network - We will look at the entire network containing the nodes that are connected to *SouthSeafood Express Corp* in any way.

We will use `plot_fishing_relationships()` to plot the relationship graph of the network.

```{r}
#| code-fold: true
#| code-summary: 'Show the code for plot_fishing_relationships()'
#| file: helpers/plot_fishing_relationships.R
```

```{r}
#| echo: false
plot_fishing_relationships <- source("helpers/plot_fishing_relationships.R", local = knitr::knit_global())$value
```

::: {.callout-tip collapse="true" appearance="simple"}
### Relationship Graph

We call this the *Relationship Graph* as the provided graph shows the different relationships among the different entities.

Later, we will tackle how to generate the *Power Graph* which will represent the power and flow of resources within the network.
:::

::: callout-important
### No time component yet

In this part, we just want to make a basic visualization so we can see earlier if we have processed the data appropriate for analysis.
:::

::: panel-tabset
### Direct Neighbors

```{r}
#| code-fold: true
#| code-summary: 'Show the code'
extract_subnetwork(
  supernetwork,
  node_name="SouthSeafood Express Corp",
  distance=1
) %>% plot_fishing_relationships(
  emphasize_nodes = c("SouthSeafood Express Corp"),
  layout = "linear",
  circular = TRUE,
  node_size = 12,
  arrow_margin = 5.5,
  title = "Relationship Graph: SouthSeafood Express Corp's Direct Neighbors",
  subtitle = "Two other fishing companies, <span style='color:blue;'>**AguaLeska Transit N.V.**</span> and <span style='color:blue;'>**Tainamarine Fishing Co**</span> hold shares in<br />SouthSeafood Express Corp. They are posed to benefit the most from the company's illegal fishing activities."
)
```

::: callout-tip
#### Insights

As shareholders, **AguaLeska Transit N.V.** and **Tainamarine Fishing Co** have big influence on where the resources of *SouthSeafood Express Corp* go.

In this case, most of it will most likely opposite of the arrow direction, i.e. benefiting the shareholders.
:::

### Sphere of Influence

```{r}
#| code-fold: true
#| code-summary: 'Show the code'
extract_subnetwork(
  supernetwork,
  node_name="SouthSeafood Express Corp",
  distance=3
) %>% plot_fishing_relationships(
  emphasize_nodes = c(
    "SouthSeafood Express Corp",
    "Tainamarine Fishing Co",
    "AguaLeska Transit N.V.",
    "StichtingMarine Shipping Company",
    "SavanetaCreek Solutions NV",
    "Liam Conti",
    "Fintan Park",
    "Nadia Conti"
    ),
  title = "Relationship Graph: SouthSeafood Express Corp's Sphere of Influence",
  subtitle = "Entities with 3 degrees of separation from **SouthSeafood Express Corp**. This is where the influence of the<br />company is noticeable."
)
```

::: callout-tip
#### Insights

The network map is comprised mostly of *Shareholderships* and *BenificialOwnerships.*

*SouthSeafood Express Corp's* shareholders, **AguaLeska Transit N.V.** and **Tainamarine Fishing Co** have additional shareholders.

**StichtingMarine Shipping Company** holds shares in these companies (via other entities). **SavanetaCreek Solutions N.V.**, a Logistics Company, also holds a shareholdership in StichtingMarine Shipping Company. These two nodes serve as resource hubs, gathering resources from the companies in which they hold shares, ultimately benefiting their owners and shareholders.

Moreover, **Liam Conti** and **Fintan Park** are the beneficial owners of these companies, giving them final decision-making power and likely the greatest benefits from the network's resources. Additionally, as a family member of **Liam Conti**, **Nadia Conti** may also benefit from Liam's ownership of these companies.

Intuitively, these five nodes are likely candidates for the most influential entities within the network.
:::

### Connected Network

```{r}
#| code-fold: true
#| code-summary: 'Show the code'
extract_subnetwork(
  supernetwork,
  node_name="SouthSeafood Express Corp"
) %>% plot_fishing_relationships(
  emphasize_nodes = c(
    "SouthSeafood Express Corp",
    "Tainamarine Fishing Co",
    "AguaLeska Transit N.V.",
    "StichtingMarine Shipping Company",
    "SavanetaCreek Solutions NV",
    "Liam Conti",
    "Fintan Park",
    "Nadia Conti"
    ),
  node_size = 5,
  arrow_margin = 2,
  title = "Relationship Graph: SouthSeafood Express Corp's Full Network",
  subtitle = "This shows the full view of the network connected to SouthSeafood Express Corp in any way."
)
```

::: callout-tip
#### Insights

With this sheer number of nodes, it is hard to easily infer any relationships aside from general estimate of how many of each entity and the type of relationships present in the system.

To more easily make inferences about the network, we need to do 2 things:

-   Narrow down the relationships through time so we can make sense of the transactions in the network

-   Use appropriate measures of centrality based on what we have in the [1.2 Methodology]
:::
:::

# 5 Investigating network changes

The plots we generated so far ignored the time component. However, the fishing business network is dynamic and changes through time.

We need to visualize these changes.

## 5.1 Extracting snapshots

The base of this analysis is to capture a snapshot of a relationship in time.

We will define a 2 functions to enable this:

-   extract this network, which accepts a graph and date of the snapshot.

-   figure out if an edge is active at that point in time

```{r}
#| file: helpers/extract_network_snapshot.R
```

```{r}
extract_network_snapshot <- source("helpers/extract_network_snapshot.R", local = knitr::knit_global())$value
```

## 5.2 Change in SouthSeafood Express Corp network

Let us look at the relationships of *SouthSeafood Express Corp.*

```{r}
supernetwork %>%
  as_data_frame(what = "edges") %>%
  filter(from == "SouthSeafood Express Corp" | to == "SouthSeafood Express Corp") %>%
  kable()
```

This indicates a **Transfer of Shareholdership** from *AguaLeska Transit N.V.* to *Tainamarine Fishing Co* on **2035-05-25.**

We will visualize relationships based on this date using 2 approaches:

1.  Using `extract_network_snapshot()` to filter the active edges at that point in time, or
2.  Making use of `filter` aesthetic in `geom_edge_fan` to hide the inactive edges

### 5.2.1 By filtering our edges using extract_network_snapshot()

::: panel-tabset
#### Before 2035-05-25

```{r}
#| code-fold: true
#| code-summary: 'Show the code'
extract_subnetwork(
  supernetwork,
  node_name="SouthSeafood Express Corp"
) %>%
  extract_network_snapshot("2035-05-24") %>%
  plot_fishing_relationships(
  emphasize_nodes = c("SouthSeafood Express Corp",
                      "Tainamarine Fishing Co",
                      "AguaLeska Transit N.V.",
                      "StichtingMarine Shipping Company"),
  node_size = 5,
  arrow_margin = 2,
  title = "Relationship Graph: SouthSeafood Express Corp's Full Network (May 24, 2035)",
  subtitle = "This shows the full view of the network around SouthSeafood Express Corp in any way **after** the transfer of<br />shareholdership from <span style='color:blue;'>**AguaLeska Transit N.V.**</span> to <span style='color:blue;'>**Tainamarine Fishing Co**</span>."
)
```

#### From 2035-05-25

```{r}
#| code-fold: true
#| code-summary: 'Show the code'
extract_subnetwork(
  supernetwork,
  node_name="SouthSeafood Express Corp"
) %>%
  extract_network_snapshot("2035-05-25") %>%
  plot_fishing_relationships(
  emphasize_nodes = c("SouthSeafood Express Corp",
                      "Tainamarine Fishing Co",
                      "AguaLeska Transit N.V.",
                      "StichtingMarine Shipping Company"),
  node_size = 5,
  arrow_margin = 2,
  title = "Relationship Graph: SouthSeafood Express Corp's Full Network (May 25, 2035)",
  subtitle = "This shows the full view of the network around SouthSeafood Express Corp in any way **after** the transfer of<br />shareholdership from <span style='color:blue;'>**AguaLeska Transit N.V.**</span> to <span style='color:blue;'>**Tainamarine Fishing Co**</span>."
)
```
:::

This visualization is difficult to compare as the layout changed due to the different edges.

### 5.2.2 By hiding inactive edges

::: panel-tabset
#### Before 2035-05-25

```{r}
#| code-fold: true
#| code-summary: 'Show the code'
extract_subnetwork(
  supernetwork,
  node_name="SouthSeafood Express Corp"
) %>%
  plot_fishing_relationships(
  datestring = "2035-05-24",
  emphasize_nodes = c("SouthSeafood Express Corp",
                      "Tainamarine Fishing Co",
                      "AguaLeska Transit N.V.",
                      "StichtingMarine Shipping Company"),
  node_size = 5,
  arrow_margin = 2,
  title = "Relationship Graph: SouthSeafood Express Corp's Full Network (May 24, 2035)",
  subtitle = "This shows the full view of the network around SouthSeafood Express Corp in any way **before** the transfer of<br />shareholdership from <span style='color:blue;'>**AguaLeska Transit N.V.**</span> to <span style='color:blue;'>**Tainamarine Fishing Co**</span>."
)
```

#### From 2035-05-25

```{r}
#| code-fold: true
#| code-summary: 'Show the code'
extract_subnetwork(
  supernetwork,
  node_name="SouthSeafood Express Corp"
) %>%
  plot_fishing_relationships(
  datestring = "2035-05-25",
  emphasize_nodes = c("SouthSeafood Express Corp",
                      "Tainamarine Fishing Co",
                      "AguaLeska Transit N.V.",
                      "StichtingMarine Shipping Company"),
  node_size = 5,
  arrow_margin = 2,
  title = "Relationship Graph: SouthSeafood Express Corp's Full Network (May 25, 2035)",
  subtitle = "This shows the full view of the network around SouthSeafood Express Corp in any way **after** the transfer of<br />shareholdership from <span style='color:blue;'>**AguaLeska Transit N.V.**</span> to <span style='color:blue;'>**Tainamarine Fishing Co**</span>."
)
```
:::

The layout is intact, making it easier to identify which relationships changed.

::: callout-tip
#### Insights

The change of shareholders put *SouthSeafood Express Corp* farther away (distance of 2 to 4) from *StichtingMarine Shipping Company,* a company owned by **Liam Conti** and **Fintan Park.** This puts *StichtingMarine Shipping Company* **outside of SouthSeafood Express Corp's sphere of influence**.

This can be an effort to **distance the owners** from *SouthSeafood Express Corp*'*s* illegal activity, especially as it is put under the non-fishing company branch of *StichtingMarine Shipping Company* (under *Namorna Transit Ltd* and *V. Miesel Shipping*).
:::

::: callout-tip
## Decision

We will hide inactive edges so that the nodes don't move upon re-rendering, and makes it easy to compare.
:::

## 5.3 Animations

In our [1.2 Methodology], we indicated that we wanted to animate the plot so that we can see how the network changes through time.

However, we encountered issues in animating as the available libraries (`plotly` and `gganimate`) do not fully support animations especially with the level of details that our static but interactive plots provide.

For example, `plotly` cannot translate the `ggraph` plots with the full detail, especially on the edges. In addition, `gganimate` does not accept `ggraph` plots as frames.

As a workaround, we will just use Quatro's **tabset** to visualize the changes via tab switches.

# 6 Generating Power Graph

To figure out who are the most influential or greatest beneficiaries within the network, we have to look at the power dynamics in each relationship.

## 6.1 Direction

As we want to investigate the flow of power and resources, the direction will be from the **less powerful to more powerful** entity.

## 6.2 Weights

For the purpose of our analysis, we will score each relationship flow according to the following:

-   Benefits from the resources: 1 (+1 if they are the owner of a company)

-   A decision-maker on where resources go: 2 (+1 if they are the ultimate decision maker)

-   Influential on the other person: 1 (only if target is a person)

We will use the total as the weights for each edge. Lastly, we will rename the relationship to prevent confusion in case of direction reversal.

## 6.3 Score tables

::: panel-tabset
### BeneficialOwner

Beneficial owners benefit from the resources of the company.

While BeneficialOwners may or may not be Shareholders in the same company, they hold the ultimate decision-making power.

Current From

+-------------------------+------------------+
| Current **From**        | Owner            |
+-------------------------+------------------+
| Current **To**          | Company          |
+-------------------------+------------------+
| New **From\             | Company          |
| **(Lower power)         |                  |
+-------------------------+------------------+
| New **To\               | Owner            |
| **(Higher power)        |                  |
+-------------------------+------------------+
| New **subtype**         | OwnedBy          |
+-------------------------+------------------+
| Beneficiary             | 1 + 1            |
+-------------------------+------------------+
| Decision-maker          | 2 + 1            |
+-------------------------+------------------+
| Influential (on person) | 0                |
+-------------------------+------------------+
| **Total**               | **5**            |
+-------------------------+------------------+

: Owner

### Shareholdership

Shareholders may receive proceeds from the profits of the company.

They have some decision-making power within the company. However, it is the Beneficial Owner that ultimately gets the final say in decisions.

+-------------------------+------------------+
| Current **From**        | Shareholder      |
+-------------------------+------------------+
| Current **To**          | Company          |
+-------------------------+------------------+
| New **From\             | Company          |
| **(Lower power)         |                  |
+-------------------------+------------------+
| New **To\               | Shareholder      |
| **(Higher power)        |                  |
+-------------------------+------------------+
| New **subtype**         | HasShareholder   |
+-------------------------+------------------+
| Beneficiary             | 1                |
+-------------------------+------------------+
| Decision-maker          | 2                |
+-------------------------+------------------+
| Influential (on person) | 0                |
+-------------------------+------------------+
| **Total**               | **3**            |
+-------------------------+------------------+

### WorksFor

Employees are contractually obligated to act in the interests of their employer.

Employers also influence what their employees do in the business.

+-------------------------+------------------+
| Current **From**        | Owner            |
+-------------------------+------------------+
| Current **To**          | Company          |
+-------------------------+------------------+
| New **From\             | Company          |
| **(Lower power)         |                  |
+-------------------------+------------------+
| New **To\               | Owner            |
| **(Higher power)        |                  |
+-------------------------+------------------+
| New **subtype**         | OwnedBy          |
+-------------------------+------------------+
| Beneficiary             | 1 + 1            |
+-------------------------+------------------+
| Decision-maker          | 2 + 1            |
+-------------------------+------------------+
| Influential (on person) | 0                |
+-------------------------+------------------+
| **Total**               | **5**            |
+-------------------------+------------------+

### FamilyRelationship

Assuming that family members have a healthy relationship, they share resources and confide in each other.

Due to this, they have power over each other.

+-------------------------+-----------------------+
| Current **From**        | Person 1              |
+-------------------------+-----------------------+
| Current **To**          | Person 2              |
+-------------------------+-----------------------+
| New **From\             | Person 2 (additional) |
| **(Lower power)         |                       |
+-------------------------+-----------------------+
| New **To\               | Person 2              |
| **(Higher power)        |                       |
|                         | (additional)          |
+-------------------------+-----------------------+
| New **subtype**         | FamilyRelationship    |
+-------------------------+-----------------------+
| Beneficiary             | 1                     |
+-------------------------+-----------------------+
| Decision-maker          | 0                     |
+-------------------------+-----------------------+
| Influential (on person) | 1                     |
+-------------------------+-----------------------+
| **Total**               | **2**                 |
+-------------------------+-----------------------+
:::

::: {.callout-caution appearance="simple"}
These scores are subjective and based on general assumptions. We also lack the information to model the power dynamics accurately.
:::

## 6.4 Converting relationship edges to power flow

Using the table above, we will create a function to convert relationship edges to power flow.

```{r}
#| file: helpers/convert_edges_to_power_flow.R
```

```{r}
#| echo: false
convert_edges_to_power_flow <- source("helpers/convert_edges_to_power_flow.R", local = knitr::knit_global())$value
```

Let us check the resulting edges table. We are expecting that all edge types would have the same number, expect for *FamilyRelationship*, which is expected to **double**.

::: panel-tabset
### Relationship

```{r}
supernetwork %>%
  as_data_frame(what = "edges") %>%
  group_by(supertype, subtype) %>%
  summarize(count = n()) %>%
  arrange(-count) %>%
  kable()
```

### Power

```{r}
supernetwork %>%
  as_data_frame(what = "edges") %>%
  convert_edges_to_power_flow() %>%
  group_by(supertype, subtype) %>%
  summarize(count = n()) %>%
  arrange(-count) %>%
  kable()
```
:::

## 6.5 Converting relationship graphs to power flow

Using the edge converter, we will generate a new `tbl_graph` with the power flow edges.

```{r}
#| file: helpers/convert_graph_to_power_flow.R
```

```{r}
#| echo: false
convert_graph_to_power_flow <- source("helpers/convert_graph_to_power_flow.R", local = knitr::knit_global())$value
```

## 6.6 Plotting the power graph

Similar to \[4.3 Plotting the subnetworks\], we will look at 3 subnetworks related to *SouthSeafood Express Corp*.

We will use `plot_fishing_power()` to plot the relationship graph of the network.

```{r}
#| code-fold: true
#| code-summary: 'Show the code for plot_fishing_power()'
#| file: helpers/plot_fishing_power.R
```

```{r}
#| echo: false
plot_fishing_power <- source("helpers/plot_fishing_power.R", local = knitr::knit_global())$value
```

### 6.6.1 Direct Neighbors

::: panel-tabset
#### Before 2035-05-25

```{r}
#| code-fold: true
#| code-summary: 'Show the code'
supernetwork %>%
  extract_subnetwork(node_name = "SouthSeafood Express Corp", distance = 1) %>%
  convert_graph_to_power_flow() %>%
  plot_fishing_power(
    emphasize_nodes = c("SouthSeafood Express Corp", "AguaLeska Transit N.V."),
    datestring = "2035-05-24",
    layout = "linear",
    circular = TRUE,
    node_size = 12,
    arrow_margin = 5.5,
    title = "Power Graph: SouthSeafood Express Corp's Direct Neighbors (May 24, 2035)",
    subtitle = "<span style='color:blue;'>**AguaLeska Transit N.V.**</span> is the sole shareholder in SouthSeafood Express Corp, having large control in the company.<br />They benefit the most from and could have controlled company's illegal fishing activities."
  )
```

#### From 2035-05-25

```{r}
#| code-fold: true
#| code-summary: 'Show the code'
supernetwork %>%
  extract_subnetwork(node_name = "SouthSeafood Express Corp", distance = 1) %>%
  convert_graph_to_power_flow() %>%
  plot_fishing_power(
    emphasize_nodes = c("SouthSeafood Express Corp", "Tainamarine Fishing Co"),
    datestring = "2035-05-25",
    layout = "linear",
    circular = TRUE,
    node_size = 12,
    arrow_margin = 5.5,
    title = "Power Graph: SouthSeafood Express Corp's Direct Neighbors (May 25, 2035)",
    subtitle = "On this day, shareholdership in SouthSeafood Express Corp transferred from <span style='color:blue;'>**AguaLeska Transit N.V.**</span> to  <span style='color:blue;'>**Tainamarine Fishing Co**</span>.<br />This also transferred the control, and consequently, responsibility over the company."
  )
```
:::

::: callout-tip
#### Insights

The transfer of shareholdership constituted a transfer of power and responsibility over *SouthSeafood Express Corp* from one company to the other.

From this scope, it not easy to see who is ultimately pulling the strings. We need to cast our net wider to see the effect of this transaction in *SouthSeafood Express Corp*'s network.
:::

### 6.6.2 Sphere of Influence

::: panel-tabset
#### Before 2035-05-25

```{r}
#| code-fold: true
#| code-summary: 'Show the code'
supernetwork %>%
  extract_subnetwork(node_name = "SouthSeafood Express Corp", distance = 3) %>%
  convert_graph_to_power_flow() %>%
  plot_fishing_power(
    emphasize_nodes = c(
      "SouthSeafood Express Corp",
      "AguaLeska Transit N.V.",
      "StichtingMarine Shipping Company",
      "SavanetaCreek Solutions NV",
      "Liam Conti",
      "Fintan Park"
    ),
    datestring = "2035-05-24",
    title = "Power Graph: SouthSeafood Express Corp's Sphere of Influence (May 24, 2035)",
    subtitle = "Before the transfer of shareholdership, <span style='color:blue;'>**Liam Conti**</span> and <span style='color:blue;'>**Fintan Park**</span> controls SouthSeafood Express Corp through<br /><span style='color:blue;'>**AguaLeska Transit N.V.**</span> and <span style='color:blue;'>**StichtingMarine Shipping Company**</span>."
  )
```

#### From 2035-05-25

```{r}
#| code-fold: true
#| code-summary: 'Show the code'
supernetwork %>%
  extract_subnetwork(node_name = "SouthSeafood Express Corp", distance = 3) %>%
  convert_graph_to_power_flow() %>%
  plot_fishing_power(
    emphasize_nodes = c(
      "SouthSeafood Express Corp",
      "Tainamarine Fishing Co",
      "V. Miesel Shipping",
      "Namorna Transit Ltd"
    ),
    datestring = "2035-05-25",
    title = "Power Graph: SouthSeafood Express Corp's Sphere of Influence (May 25, 2035)",
    subtitle = "The transfer of shareholdership, distances <span style='color:blue;'>**Liam Conti**</span> and <span style='color:blue;'>**Fintan Park**</span> form SouthSeafood Express Corp. <br /> The company is put under the non-fishing branch of <span style='color:blue;'>**StichtingMarine Shipping Company**</span>."
  )
```
:::

::: callout-tip
#### Insights

With this visualization, it is now clearer that change of shareholdership puts **Liam Conti** and **Fintan Park** out of the sphere of influence of *SouthSeafood Express Corp*.

As inferred previously, this could have been an effort to **distance themselves** from *SouthSeafood Express Corp* to lower the impact of the sanctions and punishments after the fishing company's illegall fishing activities were discovered.

This is because according to the Theory of Sphere of Influence, one's influence diminish the farther the other party is. Beyond the 3rd, degree the effect may not be too noticeable.
:::

### 6.6.3 Connected Network

::: panel-tabset
#### Before 2035-05-25

```{r}
#| code-fold: true
#| code-summary: 'Show the code'
supernetwork %>%
  extract_subnetwork(node_name = "SouthSeafood Express Corp") %>%
  convert_graph_to_power_flow() %>%
  plot_fishing_power(
    emphasize_nodes = c(
      "SouthSeafood Express Corp",
      "AguaLeska Transit N.V.",
      "StichtingMarine Shipping Company",
      "SavanetaCreek Solutions NV",
      "Liam Conti",
      "Fintan Park"
    ),
    datestring = "2035-05-24",
    title = "Power Graph: SouthSeafood Express Corp's Connected Nodes (May 24, 2035)",
    subtitle = "This shows the full view of the network connected to SouthSeafood Express Corp in any way at any point in time",
    caption = "Highlighted nodes are with *SouthSeafood Express Corp's* **Sphere of Influence**. Hover on the nodes to see more details."
  )
```

#### From 2035-05-25

```{r}
#| code-fold: true
#| code-summary: 'Show the code'
supernetwork %>%
  extract_subnetwork(node_name = "SouthSeafood Express Corp") %>%
  convert_graph_to_power_flow() %>%
  plot_fishing_power(
    emphasize_nodes = c(
      "SouthSeafood Express Corp",
      "Tainamarine Fishing Co",
      "V. Miesel Shipping",
      "Namorna Transit Ltd"
    ),
    datestring = "2035-05-25",
    title = "Power Graph: SouthSeafood Express Corp's Sphere of Influence (May 25, 2035)",
    subtitle = "This shows the full view of the network connected to SouthSeafood Express Corp in any way at any point in time",
    caption = "Highlighted nodes are with *SouthSeafood Express Corp's* **Sphere of Influence**. Hover on the nodes to see more details."
  )
```
:::

::: callout-tip
#### Insights

We can see that *SouthSeafood Express Corp's* Sphere of Influence only tells part of the story in this part of the fishing business network.

By generating this power graph, we can more easily see that most of the *Person* nodes with arrows pointing have the **Conti** family name. These are:

-   Liam Conti, and his wife Nadia

-   Nathan Conti

-   Fabio Conti

-   Lemuel Conti

-   Lena Conti - Park

Fintan Park is also part of the Conti Clan by marriage to Lena Conti-Park. This indicates that the **Conti Clan controls the fishing business** in this network. They do this by holding shares of fishing companies through the companies that they own.
:::

# 7 Measures of Centrality

In [1.2 Methodology], we defined the influential entities as having 2 types:

**Type 1: Power holders** - entities who hold the most power and main beneficiaries of resources in the network.

**Type 2: Power brokers** - entities who facilitate the transfer of power/resources from a less powerful entity to another.

## 7.1 Appropriate measures of centrality

::: panel-tabset
### Power Holders

To identify the most powerful nodes/entities in the network, we will use **page rank** centrality. Originally developed by Google, this is used in ranking web pages. The principle is that *the more incoming edges a node has, the more influential it is* and nodes to which they are connected share of that influence. ([Disney, 2020](https://cambridge-intelligence.com/eigencentrality-pagerank/))

This measure for centrality is useful in this context as in our power graph, the node where the power flow stops is the most powerful node as they have the ultimate control over all the nodes inwardly connected to them.

The main candidates for these are the **BeneficialOwners** and **Shareholders**.

### Power Brokers

To identify the power brokers, we will use **betweenness** centrality.

Power Brokers must be nodes with **both incoming and outgoing edges**, so that they can connect a more powerful node to a less powerful node. Hence, having a large number of edges connected to a node is not enough (which the degree centrality offers).

This is because if a node only has incoming or outgoing edges, it won't be able to connect to other nodes to keep the flow going.
:::

## 7.2 Generating template graphs

We will again use the networks of *SouthSeafood Express Corp* to check how these centrality measures play in the network.

We will use the power graphs of *Sphere of Influence* and the *Connected Network*.

For the purpose of visualization, we will use these graphs as *templates* for visualization so they have the same layouts even if the edges change through time.

::: panel-tabset
### Sphere of Influence

```{r}
sfec_sphere_of_influence_power <- supernetwork %>%
  extract_subnetwork(node_name = "SouthSeafood Express Corp", distance = 3) %>%
  convert_graph_to_power_flow()
```

### Connected Network

```{r}
sfec_connected_network_power <- supernetwork %>%
  extract_subnetwork(node_name = "SouthSeafood Express Corp") %>%
  convert_graph_to_power_flow()
```
:::

## 7.3 Calculating measures of centrality

We will now calculate the measures of centrality **before and from May 25, 2035**. We will use `extract_network_snapshot()` to do this.

After the calculation, we will extract the node dataframe to join with the template

::: callout-tip
### Note on hiding edges

We cannot just calculate the the measures of centrality and hide the inactive edges in the visualization.

This is because the network structure itself change, which affect the calculations. Hence, we will do the calculations on the underlying network snapshot itself then join the calculations with the template graphs we generated above for visualization.
:::

### 7.3.1 Sphere of Influence

::: panel-tabset
#### Before 2035-05-25

```{r}
nodes_influence_before <- sfec_sphere_of_influence_power %>%
  extract_network_snapshot('2035-05-24') %>%
  mutate(
    pagerank = centrality_pagerank(weights = E(.)$weight),
    betweenness = centrality_betweenness(weights = E(.)$weight, normalized = TRUE)
  ) %>%
  as_data_frame(what="vertices")

nodes_influence_before %>% arrange(name) %>% select(-name) %>% kable()
```

#### From 2035-05-25

```{r}
nodes_influence_after <- sfec_sphere_of_influence_power %>%
  extract_network_snapshot('2035-05-25') %>%
  mutate(
    pagerank = centrality_pagerank(weights = E(.)$weight),
    betweenness = centrality_betweenness(weights = E(.)$weight, normalized = TRUE)
  ) %>%
  as_data_frame(what="vertices")

nodes_influence_after %>% arrange(name) %>% select(-name) %>% kable()
```
:::

### 7.3.2 Connected Network

::: panel-tabset
#### Before 2035-05-25

```{r}
nodes_connected_before <- sfec_connected_network_power %>%
  extract_network_snapshot('2035-05-24') %>%
  mutate(
    pagerank = centrality_pagerank(weights = E(.)$weight),
    betweenness = centrality_betweenness(weights = E(.)$weight, normalized = TRUE)
  ) %>%
  as_data_frame(what="vertices")

nodes_connected_before %>% arrange(name) %>% select(-name) %>% kable()
```

#### From 2035-05-25

```{r}
nodes_connected_after <- sfec_connected_network_power %>%
  extract_network_snapshot('2035-05-25') %>%
  mutate(
    pagerank = centrality_pagerank(weights = E(.)$weight),
    betweenness = centrality_betweenness(weights = E(.)$weight, normalized = TRUE)
  ) %>%
  as_data_frame(what="vertices")

nodes_connected_after %>% arrange(name) %>% select(-name) %>% kable()
```
:::

### 7.3.3 Putting it all together

We will combine the calculated measures in the template graphs.

::: panel-tabset
#### Sphere of Influence

```{r}
sfec_sphere_of_influence_power <- sfec_sphere_of_influence_power %>%
  left_join(
    nodes_influence_before %>% rename(
      d_20350524.pagerank = pagerank,
      d_20350524.betweenness = betweenness
    )
  ) %>%
  left_join(
    nodes_influence_after %>% rename(
      d_20350525.pagerank = pagerank,
      d_20350525.betweenness = betweenness
    )
  )
```

#### Connected Network

```{r}
sfec_connected_network_power <- sfec_connected_network_power %>%
  left_join(
    nodes_connected_before %>% rename(
      d_20350524.pagerank = pagerank,
      d_20350524.betweenness = betweenness
    )
  ) %>%
  left_join(
    nodes_connected_after %>% rename(
      d_20350525.pagerank = pagerank,
      d_20350525.betweenness = betweenness
    )
  )
```
:::

# 8 Visualizing Influential Nodes

We will use `plot_centrality` to identify the most powerful nodes by visualizing the measures of centrality of the nodes.

```{r}
#| code-fold: true
#| code-summary: 'Show the code for plot_centrality()'
#| file: helpers/plot_centrality.R
```

```{r}
#| echo: false
plot_centrality <- source("helpers/plot_centrality.R", local = knitr::knit_global())$value
```

## 8.1 Power Holders - Sphere of influence

### 8.1.1 Graph

::: panel-tabset
#### Before 2035-05-25

```{r}
sfec_sphere_of_influence_power %>%
  plot_centrality(
    centrality_col = "d_20350524.pagerank",
    datestring = "2035-05-24",
    title = "The Power Holders: SouthSeafood Express Corp's Sphere of Influence (May 24, 2035)",
    subtitle = "A higher value of **pagerank centrality** means the entity has higher power and gets more benefits from the network.",
    caption = "Bigger and brighter nodes are more influential. Hover on the nodes to see more details.")
```

#### From 2035-05-25

```{r}
sfec_sphere_of_influence_power %>%
  plot_centrality(
    centrality_col = "d_20350525.pagerank",
    datestring = "2035-05-25",
    title = "The Power Holders: SouthSeafood Express Corp's Sphere of Influence (May 25, 2035)",
    subtitle = "A higher value of **pagerank centrality** means the entity has higher power and gets more benefits from the network.",
    caption = "Bigger and brighter nodes are more influential. Hover on the nodes to see more details.")
```
:::

### 8.1.2 Table

::: panel-tabset
#### Before 2035-05-25

```{r}
nodes_influence_before %>%
  arrange(-pagerank) %>%
  select(alias, pagerank, supertype, subtype) %>%
  kable()
```

#### From 2035-05-25

```{r}
nodes_influence_after %>%
  arrange(-pagerank) %>%
  select(alias, pagerank, supertype, subtype) %>%
  kable()
```
:::

::: callout-tip
### Insights

This plot confirms that the power holders in the network are **Conti Clan members**, especially **Liam** and **Nadia Conti**.

The change in shareholders **very slightly weakened** the power of Conti Clan members.

In fact, only the 3 entities involved ‚Äì *SouthSeafood Express Corp*, *AguaLeska Transit N.V.*, and *Tainamarine Fishing Co* had their rankings changed.

In addition, only *Namorna Transit Ltd*, *V. Miesel Shipping* had their pagerank centrality increase by 10%+. This seems consistent with the Theory of Sphere of Influence.
:::

## 8.2 Power Holders - Connected Network

### 8.2.1 Graph

::: panel-tabset
#### Before 2035-05-25

```{r}
sfec_connected_network_power %>%
  plot_centrality(
    centrality_col = "d_20350524.pagerank",
    datestring = "2035-05-24",
    title = "The Power Holders: SouthSeafood Express Corp's Sphere of Influence (May 24, 2035)",
    subtitle = "A higher value of **pagerank centrality** means the entity has higher power and gets more benefits from the network.",
    caption = "Bigger and brighter nodes are more influential. Hover on the nodes to see more details.")
```

#### From 2035-05-25

```{r}
sfec_connected_network_power %>%
  plot_centrality(
    centrality_col = "d_20350525.pagerank",
    datestring = "2035-05-25",
    title = "The Power Holders: SouthSeafood Express Corp's Sphere of Influence (May 25, 2035)",
    subtitle = "A higher value of **pagerank centrality** means the entity has higher power and gets more benefits from the network.",
    caption = "Bigger and brighter nodes are more influential. Hover on the nodes to see more details.")
```
:::

### 8.2.2 Table

::: panel-tabset
#### Before 2035-05-25

```{r}
nodes_connected_before %>%
  arrange(-pagerank) %>%
  select(alias, pagerank, supertype, subtype) %>%
  kable()
```

#### From 2035-05-25

```{r}
nodes_connected_after %>%
  arrange(-pagerank) %>%
  select(alias, pagerank, supertype, subtype) %>%
  kable()
```
:::

::: callout-tip
### Insights

This plot further confirms the power holders in the wider network are **Conti Clan** members, with **Lena Conti-Park** being the **most powerful person** in the network. This can be because of her association as family member of **Fintan Park** and **Nathan Conti**.

In hindsight, we could have put more weight to business connections to our model in [6.3 Score tables] as it could be the case that family members are not really involved in the business (will apply this in the project).

Another observation is that the plot in [8.1 Power Holders - Sphere of influence] shows **Liam and Nadia Conti** as more powerful than **Fintan Park**. However, in the wider network, **Fintan Park** is more powerful.

Lastly, similar to the previous observation, the impact of *SouthSeafood Express Corp*'s change in shareholders have little impact on the power holders in this network - the **Conti** **Clan** members
:::

## 8.3 Power Brokers - Sphere of influence

### 8.3.1 Graph

::: panel-tabset
#### Before 2035-05-25

```{r}
sfec_sphere_of_influence_power %>%
  plot_centrality(
    centrality_col = "d_20350524.betweenness",
    datestring = "2035-05-24",
    title = "The Power Brokers: SouthSeafood Express Corp's Sphere of Influence (May 24, 2035)",
    subtitle = "A higher value of **betweenness centrality** means the entity is more capable of connecting entities.",
    caption = "Bigger and brighter nodes are more influential. Hover on the nodes to see more details.")
```

#### From 2035-05-25

```{r}
sfec_sphere_of_influence_power %>%
  plot_centrality(
    centrality_col = "d_20350525.betweenness",
    datestring = "2035-05-25",
    title = "The Power Brokers: SouthSeafood Express Corp's Sphere of Influence (May 25, 2035)",
    subtitle = "A higher value of **betweenness centrality** means the entity is more capable of connecting entities.",
    caption = "Bigger and brighter nodes are more influential. Hover on the nodes to see more details.")
```
:::

### 8.3.2 Table

::: panel-tabset
#### Before 2035-05-25

```{r}
nodes_influence_before %>%
  arrange(-betweenness) %>%
  select(alias, betweenness, supertype, subtype) %>%
  kable()
```

#### From 2035-05-25

```{r}
nodes_influence_after %>%
  arrange(-betweenness) %>%
  select(alias, betweenness, supertype, subtype) %>%
  kable()
```
:::

::: callout-tip
### Insights

The power brokers in this network are the companies that act as *middlemen* between a more powerful entity to a less powerful one and vice versa.

The most notable is **StichtingMarine Shipping Company**, which the Conti Clan members, **Liam Conti and Fintan Park**, own. This fishing company is their way to consolidate the power and resources within the system.

Similarly, after the change of *SouthSeafood Express Corp* shareholder, *Tainamarine Fishing Co* also took the power broker role from *AguaLeska Transit N.V.*
:::

## 8.4 Power Brokers - Connected Network

### 8.4.1 Graph

::: panel-tabset
#### Before 2035-05-25

```{r}
sfec_connected_network_power %>%
  plot_centrality(
    centrality_col = "d_20350524.betweenness",
    datestring = "2035-05-24",
    title = "The Power Brokers: SouthSeafood Express Corp's Connected Network (May 24, 2035)",
    subtitle = "A higher value of **betweenness centrality** means the entity is more capable of connecting entities.",
    caption = "Bigger and brighter nodes are more influential. Hover on the nodes to see more details.")
```

#### From 2035-05-25

```{r}
sfec_connected_network_power %>%
  plot_centrality(
    centrality_col = "d_20350525.betweenness",
    datestring = "2035-05-25",
    title = "The Power Brokers: SouthSeafood Express Corp's Connected Network (May 25, 2035)",
    subtitle = "A higher value of **betweenness centrality** means the entity is more capable of connecting entities.",
    caption = "Bigger and brighter nodes are more influential. Hover on the nodes to see more details.")
```
:::

### 8.4.2 Table

::: panel-tabset
#### Before 2035-05-25

```{r}
nodes_connected_before %>%
  arrange(-betweenness) %>%
  select(alias, betweenness, supertype, subtype) %>%
  kable()
```

#### From 2035-05-25

```{r}
nodes_connected_after %>%
  arrange(-betweenness) %>%
  select(alias, betweenness, supertype, subtype) %>%
  kable()
```
:::

::: callout-tip
### Insights

TSimilar to the smaller network, the power brokers in the bigger network are the companies owned by **Conti Clan** members. These companies transfer the power and resources from the wider network to them.

These are **StichtingMarine Shipping Company**, **GvardeyskAmerica Shipping Plc**, **NamRiver Transit A/S**, **Namorna Transit Ltd**.
:::

## 8.5 Curious case of Sanaa El-Amin

Consider **Sanaa El-Amin**, and entity within *SouthSeafood Express Corp*'s connected network (snapshot after the shareholder change).

::: panel-tabset
### Power Holders

```{r}
sfec_connected_network_power %>%
  plot_centrality(
    centrality_col = "d_20350525.pagerank",
    datestring = "2035-05-25",
    emphasize_nodes = c("Sanaa El-Amin"),
    title = "The Power Holders: Sanaa El-Amin's Connected Network (May 25, 2035)",
    subtitle = "A higher value of **pagerank centrality** means the entity has higher power and gets more benefits from the network.",
    caption = "Bigger and brighter nodes are more influential. Hover on the nodes to see more details."
  )
```

### Power Brokers

```{r}
sfec_connected_network_power %>%
  plot_centrality(
    centrality_col = "d_20350525.betweenness",
    datestring = "2035-05-25",
    emphasize_nodes = c("Sanaa El-Amin"),
    title = "The Power Holders: Sanaa El-Amin's Connected Network (May 25, 2035)",
    subtitle = "A higher value of **betweenness centrality** means the entity is more capable of connecting entities.",
    caption = "Bigger and brighter nodes are more influential. Hover on the nodes to see more details."
  )
```
:::

**Sanaa El-Amin** is **not influential**, according to the metrics that we set but she works with a lot of companies in the network. This includes **GvardeyskAmerica Shipping Plc** , **NamRiver Transit A/S**, and **StichtingMarine Shipping Company**, which are the strongest *power brokers* in the network.

It can imply that she is an **expert** in the industry so various companies hire her (perhaps as a consultant). Although she does not own any companies, nor hold shares in any, she may hold some influence in the network as **influential companies depend on her services**.

### 8.5.1 Measures of centrality to identify this influence

Possible measures of centrality that can identify her influence could be **eigenvector centrality**. In eigenvector centrality, the principle *the more influential your neighbors are, the more influential you are.* This can be interpreted such that her association with influential companies also gives her influence.

Other measures of centrality that can identify this particular are **hub centrality** (due to her direct connection with influential nodes) and **degree centrality** (due to the number of outgoing edges).

::: callout-tip
#### Do we update the power model?

Despite this observation, we will **not** update the power model, nor add another measure of centrality to our visualizations.

This is because we acknowledged that the model we created in [6.3 Score tables] is imperfect and we lack information to model the power dynamics in the network accurately.

However, it is enough that we learn that our model will **not identify** all influential people in the network, and can even misidentify some entities as influential.
:::

# References

<https://blogs.cornell.edu/info2040/2015/10/19/three-degrees-of-influence-how-far-can-you-reach-people/>

<https://www.strategy-business.com/article/10218>

Disney, A. (2020, January 14). *PageRank centrality & EigenCentrality*. Cambridge Intelligence. <https://cambridge-intelligence.com/eigencentrality-pagerank/>

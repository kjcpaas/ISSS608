[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Hands-on_Exs/Ex3B/Hands-on_Ex3B.html",
    "href": "Hands-on_Exs/Ex3B/Hands-on_Ex3B.html",
    "title": "Hands-on Exercise 3B: Programming Animated Statistical Graphics with R",
    "section": "",
    "text": "This hands-on exercise covers Chapter 4: Programming Animated Statistical Graphics with R.\nI learned about the following:\n\nBasic concepts of animation, in the context of data visualization, 1 plot = 1 frame. We can adjust animation attributes like duration of the frame\nAnimating graphics using plotly and gganimate"
  },
  {
    "objectID": "Hands-on_Exs/Ex3B/Hands-on_Ex3B.html#loading-the-required-packages",
    "href": "Hands-on_Exs/Ex3B/Hands-on_Ex3B.html#loading-the-required-packages",
    "title": "Hands-on Exercise 3B: Programming Animated Statistical Graphics with R",
    "section": "2.1 Loading the required packages",
    "text": "2.1 Loading the required packages\nFor this exercise we will use the following R packages:\n\nplotly, R library for plotting interactive statistical graphs.\ngganimate, an ggplot extension for creating animated statistical graphs.\ngifski converts video frames to GIF animations using pngquant’s fancy features for efficient cross-frame palettes and temporal dithering. It produces animated GIFs that use thousands of colors per frame.\ngapminder: An excerpt of the data available at Gapminder.org. We just want to use its country_colors scheme.\ntidyverse, a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\n\n\npacman::p_load(readxl, gifski, gapminder,\n               plotly, gganimate, tidyverse)"
  },
  {
    "objectID": "Hands-on_Exs/Ex3B/Hands-on_Ex3B.html#loading-the-data",
    "href": "Hands-on_Exs/Ex3B/Hands-on_Ex3B.html#loading-the-data",
    "title": "Hands-on Exercise 3B: Programming Animated Statistical Graphics with R",
    "section": "2.2 Loading the data",
    "text": "2.2 Loading the data\nWe will use the same `GlobalPopulation` dataset from eLearn and load it into the RStudio environment using read_xls().\n\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate(across(.cols = c(\"Country\", \"Continent\"), .fns = as.factor)) %&gt;%\n  mutate(Year = as.integer(Year))\n\nglimpse(globalPop)\n\nRows: 6,204\nColumns: 6\n$ Country    &lt;fct&gt; \"Afghanistan\", \"Afghanistan\", \"Afghanistan\", \"Afghanistan\",…\n$ Year       &lt;int&gt; 1996, 1998, 2000, 2002, 2004, 2006, 2008, 2010, 2012, 2014,…\n$ Young      &lt;dbl&gt; 83.6, 84.1, 84.6, 85.1, 84.5, 84.3, 84.1, 83.7, 82.9, 82.1,…\n$ Old        &lt;dbl&gt; 4.5, 4.5, 4.5, 4.5, 4.5, 4.6, 4.6, 4.6, 4.6, 4.7, 4.7, 4.7,…\n$ Population &lt;dbl&gt; 21559.9, 22912.8, 23898.2, 25268.4, 28513.7, 31057.0, 32738…\n$ Continent  &lt;fct&gt; Asia, Asia, Asia, Asia, Asia, Asia, Asia, Asia, Asia, Asia,…\n\n\nThere are a total of 6 attributes in the globalPop tibble data frame. Two of them are categorical data type and the other three are numeric.\n\nThe categorical attributes are: Country, and Continent.\nThe numeris attributes are: Year, Young, Old, and Population."
  },
  {
    "objectID": "Hands-on_Exs/Ex3B/Hands-on_Ex3B.html#building-a-static-population-bubble-plot",
    "href": "Hands-on_Exs/Ex3B/Hands-on_Ex3B.html#building-a-static-population-bubble-plot",
    "title": "Hands-on Exercise 3B: Programming Animated Statistical Graphics with R",
    "section": "3.1 Building a static population bubble plot",
    "text": "3.1 Building a static population bubble plot\nWe will first plot a static bubble plot using geom_dots().\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young')\n\n\n\n\n\n\n\n\nThe title has Year: {frame time} as we will use the year plots as the frames in animation."
  },
  {
    "objectID": "Hands-on_Exs/Ex3B/Hands-on_Ex3B.html#building-the-animated-bubble-plot",
    "href": "Hands-on_Exs/Ex3B/Hands-on_Ex3B.html#building-the-animated-bubble-plot",
    "title": "Hands-on Exercise 3B: Programming Animated Statistical Graphics with R",
    "section": "3.2 Building the animated bubble plot",
    "text": "3.2 Building the animated bubble plot\nWe will now animate the plot by year by adding the following functions to the existing plot:\n\ntransition_time() of gganimate is used to create transition through distinct states in time (i.e. Year).\nease_aes() is used to control easing of aesthetics. The default is linear. Other methods are: quadratic, cubic, quartic, quintic, sine, circular, exponential, elastic, back, and bounce.\n\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +       \n  ease_aes('linear')\n\n\n\n\n\n\n\n\nThis generates a gif image of the animation."
  },
  {
    "objectID": "Hands-on_Exs/Ex3B/Hands-on_Ex3B.html#building-animated-bubble-plot-using-ggplotly",
    "href": "Hands-on_Exs/Ex3B/Hands-on_Ex3B.html#building-animated-bubble-plot-using-ggplotly",
    "title": "Hands-on Exercise 3B: Programming Animated Statistical Graphics with R",
    "section": "4.1 Building animated bubble plot using ggplotly()",
    "text": "4.1 Building animated bubble plot using ggplotly()\n\n\n\n\n\n\nLong-running code chunk\n\n\n\nThis code chunk takes a few minutes to run, so adding eval: false here so it does not re-evaluate all the time and I can just run it manually when needed.\n\n\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young')\n\nggplotly(gg)\n\nIt generates an interactive animation, and unlike what gganimate can produce. However, it takes quite a while to render so I have to use this method sparingly."
  },
  {
    "objectID": "Hands-on_Exs/Ex3B/Hands-on_Ex3B.html#building-animated-bubble-plot-using-plot_ly",
    "href": "Hands-on_Exs/Ex3B/Hands-on_Ex3B.html#building-animated-bubble-plot-using-plot_ly",
    "title": "Hands-on Exercise 3B: Programming Animated Statistical Graphics with R",
    "section": "4.2 Building animated bubble plot using plot_ly()",
    "text": "4.2 Building animated bubble plot using plot_ly()\nWe can also use plotly() by specifying frame in the plot.\n\nbp &lt;- globalPop %&gt;%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent,\n          sizes = c(2, 100),\n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          ) %&gt;%\n  layout(showlegend = FALSE)\nbp\n\n\n\n\n\nUnlike the ggplotly() method, this does not render interactive legends and the zoom and pan fuctions. Hoever, it renders much faster so this is a good alternative to previous visualization."
  },
  {
    "objectID": "Hands-on_Exs/Ex3A/Hands-on_Ex3A.html",
    "href": "Hands-on_Exs/Ex3A/Hands-on_Ex3A.html",
    "title": "Hands-on Exercise 3A: Programming Interactive Data Visualisation with R",
    "section": "",
    "text": "This hands-on exercise covers Chapter 3: Programming Interactive Data Visualisation with R.\nI learned about the following:\n\nCreating interactive data visualizations"
  },
  {
    "objectID": "Hands-on_Exs/Ex3A/Hands-on_Ex3A.html#loading-the-required-packages",
    "href": "Hands-on_Exs/Ex3A/Hands-on_Ex3A.html#loading-the-required-packages",
    "title": "Hands-on Exercise 3A: Programming Interactive Data Visualisation with R",
    "section": "2.1 Loading the required packages",
    "text": "2.1 Loading the required packages\nFor this exercise we will use the following R packages:\n\nggiraph for making ‘ggplot’ graphics interactive.\nplotly, R library for plotting interactive statistical graphs.\nDT provides an R interface to the JavaScript library DataTables that create interactive table on html page.\ntidyverse, a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\npatchwork for combining multiple ggplot2 graphs into one figure.\n\n\npacman::p_load(ggiraph, plotly, \n               DT, patchwork,\n               tidyverse)"
  },
  {
    "objectID": "Hands-on_Exs/Ex3A/Hands-on_Ex3A.html#loading-the-data",
    "href": "Hands-on_Exs/Ex3A/Hands-on_Ex3A.html#loading-the-data",
    "title": "Hands-on Exercise 3A: Programming Interactive Data Visualisation with R",
    "section": "2.2 Loading the data",
    "text": "2.2 Loading the data\nWe will use the same exam_data dataset from Hands-on Ex 1 and load it into the RStudio environment using read_csv().\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\nglimpse(exam_data)\n\nRows: 322\nColumns: 7\n$ ID      &lt;chr&gt; \"Student321\", \"Student305\", \"Student289\", \"Student227\", \"Stude…\n$ CLASS   &lt;chr&gt; \"3I\", \"3I\", \"3H\", \"3F\", \"3I\", \"3I\", \"3I\", \"3I\", \"3I\", \"3H\", \"3…\n$ GENDER  &lt;chr&gt; \"Male\", \"Female\", \"Male\", \"Male\", \"Male\", \"Female\", \"Male\", \"M…\n$ RACE    &lt;chr&gt; \"Malay\", \"Malay\", \"Chinese\", \"Chinese\", \"Malay\", \"Malay\", \"Chi…\n$ ENGLISH &lt;dbl&gt; 21, 24, 26, 27, 27, 31, 31, 31, 33, 34, 34, 36, 36, 36, 37, 38…\n$ MATHS   &lt;dbl&gt; 9, 22, 16, 77, 11, 16, 21, 18, 19, 49, 39, 35, 23, 36, 49, 30,…\n$ SCIENCE &lt;dbl&gt; 15, 16, 16, 31, 25, 16, 25, 27, 15, 37, 42, 22, 32, 36, 35, 45…\n\n\nThere are a total of seven attributes in the exam_data tibble data frame. Four of them are categorical data type and the other three are in continuous data type.\n\nThe categorical attributes are: ID, CLASS, GENDER and RACE.\nThe continuous attributes are: MATHS, ENGLISH and SCIENCE."
  },
  {
    "objectID": "Hands-on_Exs/Ex3A/Hands-on_Ex3A.html#tooltips",
    "href": "Hands-on_Exs/Ex3A/Hands-on_Ex3A.html#tooltips",
    "title": "Hands-on Exercise 3A: Programming Interactive Data Visualisation with R",
    "section": "3.1 Tooltips",
    "text": "3.1 Tooltips\n\n3.1.2 Adding tooltips\nInstead of geom_dotplot() provided by ggplot2, we will use ggiraph’s geom_dotplot_interactive() with the tooltip aesthetic to add the label in the content.\nAfter defining the plot, we will pass this to girafe() to generate the interactive element in our webpage.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\nHovering on a dot in a plot shows the ID, which we set as the tooltip content.\n\n\n3.1.2 Adding multiple information in tooltip\nOne way we can add multiple information in tooltip is by setting tooltip value in dataframe with the data to be presented.\n\nexam_data$tooltip &lt;- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)\n\n\n\n\n\nThe tooltip now has the student Name and Class when hovering on the dots.\n\n\n3.1.3 Styling the tooltip\nThe tooltip can be styled using CSS as the rendering is done on the webpage, and no processing of style by ggplot2. This style is passed to the girafe() function.\nFor example, we can change the background to white, instead of the default black. We will also change the font to Arial.\n\ntooltip_css &lt;- \"background-color:white; #&lt;&lt;\nfont-style:bold; color:black; font-family: Arial\" #&lt;&lt;\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = ID),                   \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(    #&lt;&lt;\n    opts_tooltip(    #&lt;&lt;\n      css = tooltip_css)) #&lt;&lt;\n)"
  },
  {
    "objectID": "Hands-on_Exs/Ex3A/Hands-on_Ex3A.html#hover",
    "href": "Hands-on_Exs/Ex3A/Hands-on_Ex3A.html#hover",
    "title": "Hands-on Exercise 3A: Programming Interactive Data Visualisation with R",
    "section": "3.2 Hover",
    "text": "3.2 Hover\n\n3.2.1 Adding hover effect\nWe can add hover effect by adding data_id aesthetic to geom_dotplot_interactive().\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)\n\n\n\n\n\nHovering on a dot show the other dots with the same value in CLASS. This is useful for highlight plot elements related to the data.\n\n\n3.2.2 Styling hover effect\nWe can also use CSS to style the hover effect. The styles are passed to the girafe() function.\nopts_hover - style of the hovered and related data\nopts_hover_inv - style of unrelated data\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: blue;\"),  \n    opts_hover_inv(css = \"opacity:0.4;\") \n  )                                        \n)\n\n\n\n\n\n\n\n3.2.3 Combining tooltip and hover\nWe can also combine both tooltips and hover effect to highlight related data and provide guiding text on the tootltip.\nThis can be done by setting both tooltip and data_id aesthetics on geom_dotplot_interactive().\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = paste(\"Class:\", CLASS), \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_tooltip(css = \"background-color:white; font-style:bold; color:black; font-family: Arial\"),\n    opts_hover(css = \"fill: blue;\"),  \n    opts_hover_inv(css = \"opacity:0.4;\") \n  )                                        \n)\n\n\n\n\n\nWith this, the tooltip shows the class and highlights the other dots associated with the class."
  },
  {
    "objectID": "Hands-on_Exs/Ex3A/Hands-on_Ex3A.html#onclick-effect",
    "href": "Hands-on_Exs/Ex3A/Hands-on_Ex3A.html#onclick-effect",
    "title": "Hands-on Exercise 3A: Programming Interactive Data Visualisation with R",
    "section": "3.3 onclick() effect",
    "text": "3.3 onclick() effect\nThis provides functionality to run Javascript code when clicking on a plot element.\n\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)\n\n\n\n\n\nIn this example, clicking a dot opens MOE page of the student. This is triggered by the window.open() javascript.\n\n\n\n\n\n\nPreventing XSS attacks\n\n\n\nWhen running javascript functions, using data not generated by our system, it is important to escape the data for Javascript safety to prevent Cross-Site Scripting attacks.\nOne example is if CLASS has some values such as ;stealYoInfo();, it can potentially make users vulnerable. Even if there is no malicious intent, if some values have text that can affect Javascript parsing, the interactive plot may not work as expected.\nThis particular dataset and Singapore Open Data datasets are trusted so there is less concern for this happening. However, some caution is needed when using untrusted sources.\nI will do some tests at a later time to check if ggiraph is vulnerable to such attacks so that I can apply measures to prevent XSS."
  },
  {
    "objectID": "Hands-on_Exs/Ex3A/Hands-on_Ex3A.html#coordinating-multiple-views",
    "href": "Hands-on_Exs/Ex3A/Hands-on_Ex3A.html#coordinating-multiple-views",
    "title": "Hands-on Exercise 3A: Programming Interactive Data Visualisation with R",
    "section": "3.4 Coordinating multiple views",
    "text": "3.4 Coordinating multiple views\nWe can pass the patchwork plot to girafe() to coordinate the interactions of the two plots.\n\np1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 &lt;- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       )\n\n\n\n\n\nIn the example above, hovering a dot in the Maths plot, highlights the corresponding dot in English.\nThis is useful for seeing how the student scored in both subjects."
  },
  {
    "objectID": "Hands-on_Exs/Ex3A/Hands-on_Ex3A.html#creating-an-interactive-scatterplot",
    "href": "Hands-on_Exs/Ex3A/Hands-on_Ex3A.html#creating-an-interactive-scatterplot",
    "title": "Hands-on Exercise 3A: Programming Interactive Data Visualisation with R",
    "section": "4.1 Creating an interactive scatterplot",
    "text": "4.1 Creating an interactive scatterplot\n\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)\n\n\n\n\n\nWith a few lines of code, it generated an interactive plot with tooltips and with varioous functions like zoom and pan."
  },
  {
    "objectID": "Hands-on_Exs/Ex3A/Hands-on_Ex3A.html#adding-color-to-plotly-visualization",
    "href": "Hands-on_Exs/Ex3A/Hands-on_Ex3A.html#adding-color-to-plotly-visualization",
    "title": "Hands-on Exercise 3A: Programming Interactive Data Visualisation with R",
    "section": "4.2 Adding color to plotly visualization",
    "text": "4.2 Adding color to plotly visualization\n\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH,\n             color = ~RACE)\n\n\n\n\n\nAdding the color also added an interactive legend, and each race can clicked to hide and unhide dots from the plot."
  },
  {
    "objectID": "Hands-on_Exs/Ex3A/Hands-on_Ex3A.html#creating-an-interactive-scatetrplot-using-ggplotly",
    "href": "Hands-on_Exs/Ex3A/Hands-on_Ex3A.html#creating-an-interactive-scatetrplot-using-ggplotly",
    "title": "Hands-on Exercise 3A: Programming Interactive Data Visualisation with R",
    "section": "4.3 Creating an interactive scatetrplot using ggplotly",
    "text": "4.3 Creating an interactive scatetrplot using ggplotly\nWe can make an existing ggplot visualization interactive by passing the plot using ggplotly()\n\np &lt;- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)"
  },
  {
    "objectID": "Hands-on_Exs/Ex3A/Hands-on_Ex3A.html#coordinating-multiple-views-1",
    "href": "Hands-on_Exs/Ex3A/Hands-on_Ex3A.html#coordinating-multiple-views-1",
    "title": "Hands-on Exercise 3A: Programming Interactive Data Visualisation with R",
    "section": "4.4 Coordinating multiple views",
    "text": "4.4 Coordinating multiple views\nCoordinating views is done by the following:\n\nhighlight_key() of plotly package is used as shared data.\ntwo scatterplots will be created by using ggplot2 functions.\nlastly, subplot() of plotly package is used to place them next to each other side-by-side. (similar to patchwork)\n\n\nd &lt;- highlight_key(exam_data)\np1 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nsubplot(ggplotly(p1),\n        ggplotly(p2))"
  },
  {
    "objectID": "Hands-on_Exs/Ex3A/Hands-on_Ex3A.html#interactive-data-table-dt-package",
    "href": "Hands-on_Exs/Ex3A/Hands-on_Ex3A.html#interactive-data-table-dt-package",
    "title": "Hands-on Exercise 3A: Programming Interactive Data Visualisation with R",
    "section": "5.1 Interactive Data Table: DT Package",
    "text": "5.1 Interactive Data Table: DT Package\nIt is a wrapper of DataTables Javascript library. Data objects in R can be rendered as HTML tables using the JavaScript library ‘DataTables’ (typically via R Markdown or Shiny).\n\nDT::datatable(exam_data, class= \"compact\")\n\n\n\n\n\n\nThis provides interactive elements like pagination, search and sort with just 1 line of code!"
  },
  {
    "objectID": "Hands-on_Exs/Ex3A/Hands-on_Ex3A.html#rendering-plots-with-data-table",
    "href": "Hands-on_Exs/Ex3A/Hands-on_Ex3A.html#rendering-plots-with-data-table",
    "title": "Hands-on Exercise 3A: Programming Interactive Data Visualisation with R",
    "section": "5.2 Rendering plots with data table",
    "text": "5.2 Rendering plots with data table\n\nd &lt;- highlight_key(exam_data) \np &lt;- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg &lt;- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe scatterplot is rendered beside datatable."
  },
  {
    "objectID": "In-class_Exs/Ex2/In-class_Ex2.html",
    "href": "In-class_Exs/Ex2/In-class_Ex2.html",
    "title": "In-class Exercise 2: Visualizing distribution",
    "section": "",
    "text": "From exercise published on https://r4va.netlify.app/chap09\nI learned the following:\n\nDifferent ways to visualize distribution\nRidgeline plot using ggridges\nRaincloud plot using ggdists"
  },
  {
    "objectID": "In-class_Exs/Ex2/In-class_Ex2.html#loading-the-r-packages",
    "href": "In-class_Exs/Ex2/In-class_Ex2.html#loading-the-r-packages",
    "title": "In-class Exercise 2: Visualizing distribution",
    "section": "2.1 Loading the R packages",
    "text": "2.1 Loading the R packages\n\npacman::p_load(tidyverse, ggdist, ggthemes, ggridges, colorspace)"
  },
  {
    "objectID": "In-class_Exs/Ex2/In-class_Ex2.html#importing-the-data",
    "href": "In-class_Exs/Ex2/In-class_Ex2.html#importing-the-data",
    "title": "In-class Exercise 2: Visualizing distribution",
    "section": "2.2 Importing the data",
    "text": "2.2 Importing the data\n\nexam_df &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "In-class_Exs/Ex2/In-class_Ex2.html#histogram",
    "href": "In-class_Exs/Ex2/In-class_Ex2.html#histogram",
    "title": "In-class Exercise 2: Visualizing distribution",
    "section": "3.1 Histogram",
    "text": "3.1 Histogram\n\nggplot(exam_df, aes(x=ENGLISH)) +\n  geom_histogram(color = \"#1696d2\",\n               adjust = 0.65,\n               alpha = 0.6)"
  },
  {
    "objectID": "In-class_Exs/Ex2/In-class_Ex2.html#probability-density-diagram",
    "href": "In-class_Exs/Ex2/In-class_Ex2.html#probability-density-diagram",
    "title": "In-class Exercise 2: Visualizing distribution",
    "section": "3.2 Probability Density Diagram",
    "text": "3.2 Probability Density Diagram\nIt uses geom_density() from ggdist package.\n\nggplot(exam_df, aes(x=ENGLISH)) +\n  geom_density(color = \"#1696d2\",\n               adjust = 0.65,\n               alpha = 0.6,)"
  },
  {
    "objectID": "In-class_Exs/Ex2/In-class_Ex2.html#alternative-design",
    "href": "In-class_Exs/Ex2/In-class_Ex2.html#alternative-design",
    "title": "In-class Exercise 2: Visualizing distribution",
    "section": "3.3 Alternative design",
    "text": "3.3 Alternative design\n\nmedian_eng &lt;- median(exam_df$ENGLISH)\nmean_eng &lt;- mean(exam_df$ENGLISH)\nstd_eng &lt;- sd(exam_df$ENGLISH)\n\nggplot(exam_df, aes(x=ENGLISH)) +\n  geom_density(color = \"#1696d2\",\n               adjust = 0.65,\n               alpha = 0.6,) +\n  stat_function(\n    fun=dnorm,\n    args = list(mean=mean_eng, sd = std_eng),\n    col = \"grey30\",\n    size = 0.8)+\n    geom_vline(aes(xintercept=mean_eng), color = \"#4d5887\", linewidth = 0.6, linetype = \"dashed\")+\n  annotate(geom = \"text\",\n           x = mean_eng - 10,\n           y = 0.04,\n           label = paste0(\"Mean ENGLISH:\", round(mean_eng), 2),\n           color = \"#4d5887\") +\n  geom_vline(aes(xintercept=median_eng), color = \"#4d5887\", linewidth = 0.6) +\n  annotate(geom = \"text\",\n           x = median_eng + 10,\n           y = 0.04,\n           label = paste0(\"Median ENGLISH:\", round(median_eng), 2),\n           color = \"#4d5887\")"
  },
  {
    "objectID": "In-class_Exs/Ex2/In-class_Ex2.html#plotting-ridgeline-graph-ggridges-method",
    "href": "In-class_Exs/Ex2/In-class_Ex2.html#plotting-ridgeline-graph-ggridges-method",
    "title": "In-class Exercise 2: Visualizing distribution",
    "section": "4.1 Plotting ridgeline graph: ggridges method",
    "text": "4.1 Plotting ridgeline graph: ggridges method\nggridges package provides two main geom to plot gridgeline plots, they are: geom_ridgeline() and geom_density_ridges().\ngeom_ridgeline() plots the graph using the height values from the data directly. It is useful when the height values refer to a column directly.\nFor this particular dataset, it is more appropriate to use geom_density_ridges() as we need to plot the distribution of students’ English score. If we had tallied and aggregated the number of students who scores within score ranges, geom_ridgeline() might be appropriate but it isn’t the case.\n\n\nShow ggplot2 code\nggplot(exam_df, \n       aes(x = ENGLISH, \n           y = CLASS)) +\n  geom_density_ridges(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 3.4,\n    fill = lighten(\"#7097BB\", .3),\n    color = \"white\"\n  ) +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n    ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()"
  },
  {
    "objectID": "In-class_Exs/Ex2/In-class_Ex2.html#varying-colors-along-the-x-axis",
    "href": "In-class_Exs/Ex2/In-class_Ex2.html#varying-colors-along-the-x-axis",
    "title": "In-class Exercise 2: Visualizing distribution",
    "section": "4.2 Varying colors along the x-axis",
    "text": "4.2 Varying colors along the x-axis\nSometimes we would like to have the area under a ridgeline not filled with a single solid color but rather with colors that vary in some form along the x axis. This effect can be achieved by using either geom_ridgeline_gradient() or geom_density_ridges_gradient(). Both geoms work just like geom_ridgeline() and geom_density_ridges(), except that they allow for varying fill colors. However, they do not allow for alpha transparency in the fill. For technical reasons, we can have changing fill colors or transparency but not both.\nIf we need emphasize the actual values with color gradient, using colors is appropriate. However, It may not be necessary when there are fewer ridge graphs, since the farthest graph is still relatively close to the axis.\nHowever, in the plot below, it can be more easily seen that 3I scored lowest, while 3A scored the highest among the different classes. Hence, in this case, colors are really valuable.\n\n\nShow ggplot2 code\nggplot(exam_df, \n       aes(x = ENGLISH, \n           y = CLASS,\n           fill = after_stat(x))) + # changed from stat() as it is deprecated\n  geom_density_ridges_gradient(\n    scale = 3,\n    rel_min_height = 0.01) +\n  scale_fill_viridis_c(name = \"Temp. [F]\",\n                       option = \"C\") +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()"
  },
  {
    "objectID": "In-class_Exs/Ex2/In-class_Ex2.html#mapping-the-probabilities-directly-into-color",
    "href": "In-class_Exs/Ex2/In-class_Ex2.html#mapping-the-probabilities-directly-into-color",
    "title": "In-class Exercise 2: Visualizing distribution",
    "section": "4.3 Mapping the probabilities directly into color",
    "text": "4.3 Mapping the probabilities directly into color\nBeside providing additional geom objects to support the need to plot ridgeline plot, ggridges package also provides a stat function called stat_density_ridges() that replaces stat_density() of ggplot2.\nFigure below is plotted by mapping the probabilities calculated by using stat(ecdf) which represent the empirical cumulative density function for the distribution of English score.\n\n\n\n\n\n\nWe are using the probabilities from stat(ecdf) in the fill aesthetic of the plot so the probabilities affect the color fill.\n\n\n\n\n\nShow ggplot2 code\nggplot(exam_df,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = 0.5 - abs(0.5-stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\", \n                      calc_ecdf = TRUE) +\n  scale_fill_viridis_c(name = \"Tail probability\",\n                       direction = -1) +\n  theme_ridges()"
  },
  {
    "objectID": "In-class_Exs/Ex2/In-class_Ex2.html#ridgeline-plots-with-quantile-lines",
    "href": "In-class_Exs/Ex2/In-class_Ex2.html#ridgeline-plots-with-quantile-lines",
    "title": "In-class Exercise 2: Visualizing distribution",
    "section": "4.4 Ridgeline plots with quantile lines",
    "text": "4.4 Ridgeline plots with quantile lines\nBy using geom_density_ridges_gradient(), we can colour the ridgeline plot by quantile, via the calculated stat(quantile) aesthetic as shown in the figure below.\n\n\nShow ggplot2 code\nggplot(exam_df,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n\n\n\n\n\nInstead of using number to define the quantiles, we can also specify quantiles by cut points such as 2.5% and 97.5% tails to colour the ridgeline plot as shown in the figure below.\n\n\nShow ggplot2 code\nggplot(exam_df,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = c(0.025, 0.975)\n    ) +\n  scale_fill_manual(\n    name = \"Probability\",\n    values = c(\"#FF0000A0\", \"#A0A0A0A0\", \"#0000FFA0\"),\n    labels = c(\"(0, 0.025]\", \"(0.025, 0.975]\", \"(0.975, 1]\")\n  ) +\n  theme_ridges()"
  },
  {
    "objectID": "In-class_Exs/Ex2/In-class_Ex2.html#plotting-a-half-eye-plot",
    "href": "In-class_Exs/Ex2/In-class_Ex2.html#plotting-a-half-eye-plot",
    "title": "In-class Exercise 2: Visualizing distribution",
    "section": "5.1 Plotting a Half-eye plot",
    "text": "5.1 Plotting a Half-eye plot\nWe will plot a Half-Eye graph by using stat_halfeye() of ggdist package.\nIt contains a half-density and slab interval graph.\n\nWith slab intervalWithout slab interval\n\n\nThe slab interval is similar to a box plot and it shows the relevant quantiles of the data.\n\n\nShow ggplot2 code\nggplot(exam_df, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2)\n\n\n\n\n\n\n\nSetting .width = 0, point_colour = NA will remove the slab interval. Slab interval may be useful for some use cases but rendering a box plot or removing it together may be more useful for visualization.\n\n\nShow ggplot2 code\nggplot(exam_df, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA)"
  },
  {
    "objectID": "In-class_Exs/Ex2/In-class_Ex2.html#adding-a-boxplot",
    "href": "In-class_Exs/Ex2/In-class_Ex2.html#adding-a-boxplot",
    "title": "In-class Exercise 2: Visualizing distribution",
    "section": "5.2 Adding a boxplot",
    "text": "5.2 Adding a boxplot\nWe can replace the slab interval with a narrow boxplot. It provides more aesthetic presentation of the distribution and fills the gap between the half-eye plot and the gridlines.\n\n\nShow ggplot2 code\nggplot(exam_df, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA)"
  },
  {
    "objectID": "In-class_Exs/Ex2/In-class_Ex2.html#adding-volume-information",
    "href": "In-class_Exs/Ex2/In-class_Ex2.html#adding-volume-information",
    "title": "In-class Exercise 2: Visualizing distribution",
    "section": "5.3 Adding Volume information",
    "text": "5.3 Adding Volume information\nThe distribution plot so far gives information on the relative distribution. However, it is hard to know the absolute volume within each bin. We can use stat_dots() of ggdist package to generate this.\nWe will plot it on the same side as the half-eye plot.\n\n\nShow ggplot2 code\nggplot(exam_df, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 2)\n\n\n\n\n\nBy adding the volume dots, we can see that the Others plot actually has less observations that the other Race values, even though the curve looks taller. It reduces misinterpretation of the data."
  },
  {
    "objectID": "In-class_Exs/Ex2/In-class_Ex2.html#finishing-touches",
    "href": "In-class_Exs/Ex2/In-class_Ex2.html#finishing-touches",
    "title": "In-class Exercise 2: Visualizing distribution",
    "section": "5.4 Finishing touches",
    "text": "5.4 Finishing touches\nLastly, we can flip the coordinates and add a theme to make it more presentable.\n\nggplot(exam_df, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 1.5) +\n  coord_flip() +\n  theme_economist()"
  },
  {
    "objectID": "In-class_Exs/Ex1/In-class_Ex1.html",
    "href": "In-class_Exs/Ex1/In-class_Ex1.html",
    "title": "In-class Exercise 1",
    "section": "",
    "text": "pacman::p_load(tidyverse)\n\nUsing read_csv() imports as tibble data frame\n\nrealis &lt;- read_csv(\"data/realis2019.csv\")\n\nUsing read.csv() will import as data.frame.\n\nrealis.csv &lt;- read.csv(\"data/realis2019.csv\")"
  },
  {
    "objectID": "Hands-on_Exs/Ex1/Hands-on_Ex1.html",
    "href": "Hands-on_Exs/Ex1/Hands-on_Ex1.html",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "",
    "text": "This hands-on exercise covers Chapter 1: A Layered Grammar of Graphics: ggplot2 methods.\nI learned about the following:\n\nUseful functions and components in ggplot2 .\nGrammar of Graphics to guide how data is visualized"
  },
  {
    "objectID": "Hands-on_Exs/Ex1/Hands-on_Ex1.html#loading-the-required-libraries",
    "href": "Hands-on_Exs/Ex1/Hands-on_Ex1.html#loading-the-required-libraries",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Loading the required libraries",
    "text": "Loading the required libraries\n\n\n\n\n\n\nMark this chunk for setup so it ensures loading of required libraries when another code chunk is run\n\n\n\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Hands-on_Exs/Ex1/Hands-on_Ex1.html#loading-the-data",
    "href": "Hands-on_Exs/Ex1/Hands-on_Ex1.html#loading-the-data",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Loading the data",
    "text": "Loading the data\nWe first need to download the provided data set from eLearn and put it under the data folder.\n\n\n\n\n\n\nFile structure\n\n\n\n\n\n\n\n\n\nNext, read the data by using read_csv() from readr package.\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\nglimpse(exam_data)\n\nRows: 322\nColumns: 7\n$ ID      &lt;chr&gt; \"Student321\", \"Student305\", \"Student289\", \"Student227\", \"Stude…\n$ CLASS   &lt;chr&gt; \"3I\", \"3I\", \"3H\", \"3F\", \"3I\", \"3I\", \"3I\", \"3I\", \"3I\", \"3H\", \"3…\n$ GENDER  &lt;chr&gt; \"Male\", \"Female\", \"Male\", \"Male\", \"Male\", \"Female\", \"Male\", \"M…\n$ RACE    &lt;chr&gt; \"Malay\", \"Malay\", \"Chinese\", \"Chinese\", \"Malay\", \"Malay\", \"Chi…\n$ ENGLISH &lt;dbl&gt; 21, 24, 26, 27, 27, 31, 31, 31, 33, 34, 34, 36, 36, 36, 37, 38…\n$ MATHS   &lt;dbl&gt; 9, 22, 16, 77, 11, 16, 21, 18, 19, 49, 39, 35, 23, 36, 49, 30,…\n$ SCIENCE &lt;dbl&gt; 15, 16, 16, 31, 25, 16, 25, 27, 15, 37, 42, 22, 32, 36, 35, 45…"
  },
  {
    "objectID": "Hands-on_Exs/Ex1/Hands-on_Ex1.html#data",
    "href": "Hands-on_Exs/Ex1/Hands-on_Ex1.html#data",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Data",
    "text": "Data\nThe data layer contains the dataset to be visualized.\n\nggplot(data=exam_data)\n\n\n\n\nThis generated an empty plot as no visual elements have been added to ggplot2 call."
  },
  {
    "objectID": "Hands-on_Exs/Ex1/Hands-on_Ex1.html#aesthetic-mappings",
    "href": "Hands-on_Exs/Ex1/Hands-on_Ex1.html#aesthetic-mappings",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Aesthetic Mappings",
    "text": "Aesthetic Mappings\nThe aesthetic mappings take attributes of the data and and use them to influence visual characteristics, such as position, colour, size, shape, or transparency. Each visual characteristic can thus encode an aspect of the data and be used to convey information.\nAll aesthetics of a plot are specified in the aes() function call.\n\nggplot(data=exam_data, \n       aes(x= MATHS))\n\n\n\n\nThis maps the MATHS column of exam_data to the x-axis of the plot. The axis range is based on the range of this dataset.\n\nmin(exam_data[\"MATHS\"])\n\n[1] 9\n\n\n\nmax(exam_data[\"MATHS\"])\n\n[1] 99"
  },
  {
    "objectID": "Hands-on_Exs/Ex1/Hands-on_Ex1.html#geometrics",
    "href": "Hands-on_Exs/Ex1/Hands-on_Ex1.html#geometrics",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Geometrics",
    "text": "Geometrics\n\nTypes\nGeometric objects are the actual marks we put on a plot. Examples include:\n\ngeom_point for drawing individual points (e.g., a scatter plot)\ngeom_line for drawing lines (e.g., for a line charts)\ngeom_smooth for drawing smoothed lines (e.g., for simple trends or approximations)\ngeom_bar for drawing bars (e.g., for bar charts)\ngeom_histogram for drawing binned values (e.g. a histogram)\ngeom_polygon for drawing arbitrary shapes\ngeom_map for drawing polygons in the shape of a map! (You can access the data to use for these maps by using the map_data() function).\n\nA plot can have multiple geometrics. Other available geometrics can be found in https://ggplot2.tidyverse.org/reference/#section-layer-geoms.\n\n\ngeom_bar()\ngeom_bar() plots a bar chart.\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\n\n\ngeom_dotplot()\ngeom_dotplot() is appropriate for binned data.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(dotsize = 0.5)\n\n\n\n\nVertical scale is misleading so let’s just remove it.\n\n\n\n\n\n\nNote\n\n\n\n\nscale_y_continuous() is used to turn off the y-axis, and\nbinwidth argument is used to change the binwidth to 2.5.\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL)  \n\n\n\n\n\n\ngeom_histogram()\ngeom_histogram() is for generating a histogram. (default bin = 30)\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram()\n\n\n\n\nLet’s change the histogram bin and color.\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\")  \n\n\n\n\n\n\nChanging geometry by using aes()\nIn this example, we partition the data (e.g. Female vs Male) and color each bar corresponding to the partition differently.\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           fill = GENDER)) +\n  geom_histogram(bins=20, \n                 color=\"grey30\")\n\n\n\n\n\n\ngeom_density()\ngeom-density() computes and plots kernel density estimate, which is a smoothed version of the histogram.\nThis is appropriate for continuous data.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_density()           \n\n\n\n\nIt can be used with partitioned data as well.\n\nggplot(data=exam_data, \n       aes(x = MATHS, \n           colour = GENDER)) +\n  geom_density()\n\n\n\n\n\n\ngeom_boxplot()\ngeom_boxplot() displays continuous value list. It visualises five summary statistics (the median, two hinges and two whiskers), and all “outlying” points individually.\nIt is appropriate for visualizing the distribution of a dataset.\n\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot()            \n\n\n\n\nNotches are used in box plots to help visually assess whether the medians of distributions differ. If the notches do not overlap, this is evidence that the medians are different.\nNotches can be used by supplying notches=true.\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot(notch=TRUE)\n\n\n\n\n\n\ngeom_violin()\ngeom_violin is designed for creating violin plot. Violin plots are a way of comparing multiple data distributions. With ordinary density curves, it is difficult to compare more than just a few distributions because the lines visually interfere with each other. With a violin plot, it’s easier to compare several distributions since they’re placed side by side.\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()\n\n\n\n\n\n\ngeom_point()\ngeom_point() is especially useful for creating scatterplot.\nThe plot below shows the plot of Maths and English grades.\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()            \n\n\n\n\n\n\nCombining geom objects\nMultiple geom objects can be combined in a single plot like below, combining a boxplot and scatterplot.\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5)"
  },
  {
    "objectID": "Hands-on_Exs/Ex1/Hands-on_Ex1.html#statistics",
    "href": "Hands-on_Exs/Ex1/Hands-on_Ex1.html#statistics",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Statistics",
    "text": "Statistics\nThe Statistics functions statistically transform data, usually as some form of summary. For example:\n\nfrequency of values of a variable (bar graph)\n\na mean\na confidence limit\n\nThere are two ways to use these functions:\n\nadd a stat_() function and override the default geom, or\nadd a geom_() function and override the default stat.\n\n\n\nAdding mean to the boxplot\nThe boxplot show summary of the dataset based on quantiles. Hence, we can see the median but not the mean.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot()\n\n\n\n\nWe can add the mean by using the stat_summary() function.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun=\"mean\",         \n               colour =\"red\",        \n               size=4)               \n\n\n\n\nThis adds a red dot corresponding to the mean to the boxplot.\n\n\nGenerating the stat using the geom_() functions\nAlternatively, the result above can also be generated by using geom_point() with stat parameter.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun=\"mean\",           \n             colour =\"red\",          \n             size=4)          \n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nUsing fun.y generated the warning below:\nWarning: The `fun.y` argument of `stat_summary()` is deprecated as of ggplot2 3.3.0.\nPlease use the `fun` argument instead.\nHence, I replace fun.y with just fun.\n\n\n\n\nGenerating best fit curve\nBest fit curve can be generated by using geom_smooth(). We can add this to the English vs Maths scatterplot previously generated.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(linewidth=0.5, color=\"red\")\n\n\n\n\nWe can also generate a best fit line by specifying method=lm instead of the default loess.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=\"lm\", linewidth=0.5, color=\"red\")"
  },
  {
    "objectID": "Hands-on_Exs/Ex1/Hands-on_Ex1.html#facets",
    "href": "Hands-on_Exs/Ex1/Hands-on_Ex1.html#facets",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Facets",
    "text": "Facets\nFacetting generates small multiples (sometimes also called trellis plot), each displaying a different subset of the data. They are an alternative to aesthetics for displaying additional discrete variables. ggplot2 supports two types of factes, namely: facet_grid() and facet_wrap.\n\nfacet_wrap()\nfacet_wrap wraps a 1d sequence of panels into 2d. This is generally a better use of screen space than facet_grid because most displays are roughly rectangular.\nThe code chunk below generates multiple histograms for Maths grades for each class.\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ CLASS)\n\n\n\n\n\n\nfacet_grid()\nfacet_grid() forms a matrix of panels defined by row and column facetting variables. It is most useful when you have two discrete variables, and all combinations of the variables exist in the data.\nThe code chunk below visualizes the same data above but using facet_grid().\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_grid(~ CLASS)"
  },
  {
    "objectID": "Hands-on_Exs/Ex1/Hands-on_Ex1.html#coordinates",
    "href": "Hands-on_Exs/Ex1/Hands-on_Ex1.html#coordinates",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Coordinates",
    "text": "Coordinates\nThe Coordinates functions map the position of objects onto the plane of the plot. There are a number of different possible coordinate systems to use, they are:\n\ncoord_cartesian(): the default cartesian coordinate systems, where you specify x and y values (e.g. allows you to zoom in or out).\ncoord_flip(): a cartesian system with the x and y flipped.\ncoord_fixed(): a cartesian system with a “fixed” aspect ratio (e.g. 1.78 for a “widescreen” plot).\ncoord_quickmap():\n\n\nFlipping coordinates\nBy the default, the bar chart of ggplot2 is in vertical form.\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\nWe can transform the vertical to horizontal bars by using coord_flip().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip()\n\n\n\n\n\n\nChanging axis range\nThe scatterplot below may be misleading as the axis range are different.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, linewidth=0.5)\n\n\n\n\nThis is because by default, the axis range was generated based on the min and max values in the dataset.\nWe can apply context and set axis ranges based on the real life min and max values (0 and 100, respectively).\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              linewidth=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))"
  },
  {
    "objectID": "Hands-on_Exs/Ex1/Hands-on_Ex1.html#themes",
    "href": "Hands-on_Exs/Ex1/Hands-on_Ex1.html#themes",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Themes",
    "text": "Themes\nThemes control elements of the graph not related to the data. For example:\n\nbackground colour\nsize of fonts\ngridlines\ncolour of labels\n\nBuilt-in themes include: - theme_gray() (default) - theme_bw() - theme_classic()\nA list of theme can be found at this link. Each theme element can be conceived of as either a line (e.g. x-axis), a rectangle (e.g. graph background), or text (e.g. axis title).\nApplying the built-in themes is as simple as applying the theme_* functions.\n\nggplot(data=exam_data,\n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_linedraw()"
  },
  {
    "objectID": "Hands-on_Exs/Ex2/Hands-on_Ex2.html",
    "href": "Hands-on_Exs/Ex2/Hands-on_Ex2.html",
    "title": "Hands-on Exercise 2: Beyond ggplot Fundamentals",
    "section": "",
    "text": "This hands-on exercise covers Chapter 2: Beyond ggplot Fundamentals.\nI learned about the following:\n\nPackages to extend ggplot2\nImporting custom fonts\nComposing figures using multiple graphs"
  },
  {
    "objectID": "Hands-on_Exs/Ex2/Hands-on_Ex2.html#loading-the-required-libraries",
    "href": "Hands-on_Exs/Ex2/Hands-on_Ex2.html#loading-the-required-libraries",
    "title": "Hands-on Exercise 2: Beyond ggplot Fundamentals",
    "section": "Loading the required libraries",
    "text": "Loading the required libraries\nIn Hands-on Ex 1, we only used tidyverse and ggplot2. In this exercise, 4 other R packages will be used:\n\nggrepel: an R package provides geoms for ggplot2 to repel overlapping text labels.\nggthemes: an R package provides some extra themes, geoms, and scales for ‘ggplot2’.\nhrbrthemes: an R package provides typography-centric themes and theme components for ggplot2.\npatchwork: an R package for preparing composite figure created using ggplot2.\n\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse)"
  },
  {
    "objectID": "Hands-on_Exs/Ex2/Hands-on_Ex2.html#loading-the-data",
    "href": "Hands-on_Exs/Ex2/Hands-on_Ex2.html#loading-the-data",
    "title": "Hands-on Exercise 2: Beyond ggplot Fundamentals",
    "section": "Loading the data",
    "text": "Loading the data\nWe will use the same exam_data dataset from Hands-on Ex 1 and load it into the RStudio environment using read_csv().\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\nglimpse(exam_data)\n\nRows: 322\nColumns: 7\n$ ID      &lt;chr&gt; \"Student321\", \"Student305\", \"Student289\", \"Student227\", \"Stude…\n$ CLASS   &lt;chr&gt; \"3I\", \"3I\", \"3H\", \"3F\", \"3I\", \"3I\", \"3I\", \"3I\", \"3I\", \"3H\", \"3…\n$ GENDER  &lt;chr&gt; \"Male\", \"Female\", \"Male\", \"Male\", \"Male\", \"Female\", \"Male\", \"M…\n$ RACE    &lt;chr&gt; \"Malay\", \"Malay\", \"Chinese\", \"Chinese\", \"Malay\", \"Malay\", \"Chi…\n$ ENGLISH &lt;dbl&gt; 21, 24, 26, 27, 27, 31, 31, 31, 33, 34, 34, 36, 36, 36, 37, 38…\n$ MATHS   &lt;dbl&gt; 9, 22, 16, 77, 11, 16, 21, 18, 19, 49, 39, 35, 23, 36, 49, 30,…\n$ SCIENCE &lt;dbl&gt; 15, 16, 16, 31, 25, 16, 25, 27, 15, 37, 42, 22, 32, 36, 35, 45…\n\n\nThere are a total of seven attributes in the exam_data tibble data frame. Four of them are categorical data type and the other three are in continuous data type.\n\nThe categorical attributes are: ID, CLASS, GENDER and RACE.\nThe continuous attributes are: MATHS, ENGLISH and SCIENCE."
  },
  {
    "objectID": "Hands-on_Exs/Ex2/Hands-on_Ex2.html#working-with-ggreprel",
    "href": "Hands-on_Exs/Ex2/Hands-on_Ex2.html#working-with-ggreprel",
    "title": "Hands-on Exercise 2: Beyond ggplot Fundamentals",
    "section": "Working with ggreprel",
    "text": "Working with ggreprel\nggrepel is an extension of ggplot2 package which provides geoms for ggplot2 to repel overlapping text like below.\nWe simply replace geom_text() by geom_text_repel() and geom_label() by geom_label_repel.\n\n\nShow the code\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              linewidth=0.5) +  \n  geom_label_repel(aes(label = ID), \n             fontface=\"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")"
  },
  {
    "objectID": "Hands-on_Exs/Ex2/Hands-on_Ex2.html#working-with-ggtheme-package",
    "href": "Hands-on_Exs/Ex2/Hands-on_Ex2.html#working-with-ggtheme-package",
    "title": "Hands-on Exercise 2: Beyond ggplot Fundamentals",
    "section": "Working with ggtheme package",
    "text": "Working with ggtheme package\nggthemes provides ‘ggplot2’ themes that replicate the look of plots by Edward Tufte, Stephen Few, Fivethirtyeight, The Economist, ‘Stata’, ‘Excel’, and The Wall Street Journal, among others.\nSome of the themes provided by the package are show below:\n\nCalcThe EconomistThe Economist (white)ExcelExcel (new)FivethirtyeightSolarizedStataThe Wall Street Journal\n\n\n\n\nShow the code\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_calc()\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist_white()\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_excel()\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_excel_new()\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_fivethirtyeight()\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_solarized()\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_stata()\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_wsj()"
  },
  {
    "objectID": "Hands-on_Exs/Ex2/Hands-on_Ex2.html#working-with-hbrthemes-package",
    "href": "Hands-on_Exs/Ex2/Hands-on_Ex2.html#working-with-hbrthemes-package",
    "title": "Hands-on Exercise 2: Beyond ggplot Fundamentals",
    "section": "Working with hbrthemes package",
    "text": "Working with hbrthemes package\nhrbrthemes package provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used.\n\n\n\n\n\n\nImporting required fonts\n\n\n\n\n\nSome of the themes use custom fonts. To install these fonts, the corresponding import command must be run first, e.g.\n\nimport_econ_sans()\n\nThis will show where there fonts are located.\nNext, import the font in the location to your system.\n\nMac: https://support.apple.com/en-sg/guide/font-book/fntbk1000/mac\nWindows: https://support.microsoft.com/en-us/office/add-a-font-b7c5f17c-4426-4b53-967f-455339c564c1\nLinux: https://linuxiac.com/how-to-install-fonts-on-linux\n\nIn future exercises, if these themes will be used, these steps must be added to the setup code chunk.\n\n\n\nSome of the themes provided by the package are show below:\n\nft_rcipsumipsum_esipsum_interipsum_gs\n\n\n\n\n\n\n\n\nNote\n\n\n\nImport Roboto Condensed font first:\n\nimport_roboto_condensed()\n\n\n\n\n\nShow the code\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ft_rc()\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum()\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThis requires the Econ Sans font to be installed and imported first:\n\nimport_econ_sans()\n\n\n\n\n\nShow the code\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum_es()\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nImport Inter font first:\n\nimport_inter()\n\nAfter installing the font, run:\n\nextrafont::font_import()\n\n\n\n\n\nShow the code\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum_inter()\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThis requires the Goldman Sans Condensed font to be installed and imported first:\n\nimport_goldman_sans()\n\n\n\n\n\nShow the code\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum_gs()"
  },
  {
    "objectID": "Hands-on_Exs/Ex2/Hands-on_Ex2.html#base-graphs",
    "href": "Hands-on_Exs/Ex2/Hands-on_Ex2.html#base-graphs",
    "title": "Hands-on Exercise 2: Beyond ggplot Fundamentals",
    "section": "Base Graphs",
    "text": "Base Graphs\n\nDistribution of Maths scoresDistribution of English scoresEnglish vs Maths scores for Primary 3\n\n\n\n\nShow the code\np1 &lt;- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\np1\n\n\n\n\n\n\n\n\n\nShow the code\np2 &lt;- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\np2\n\n\n\n\n\n\n\n\n\nShow the code\np3 &lt;- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English vs Maths scores (Primary 3)\")\np3"
  },
  {
    "objectID": "Hands-on_Exs/Ex2/Hands-on_Ex2.html#creating-composite-graphics-pathwork-methods",
    "href": "Hands-on_Exs/Ex2/Hands-on_Ex2.html#creating-composite-graphics-pathwork-methods",
    "title": "Hands-on Exercise 2: Beyond ggplot Fundamentals",
    "section": "Creating Composite Graphics: pathwork methods",
    "text": "Creating Composite Graphics: pathwork methods\nThere are several ggplot2 extension’s functions support the needs to prepare composite figure by combining several graphs such as grid.arrange() of gridExtra package and plot_grid() of cowplot package. In this section, I am going to shared with you an ggplot2 extension called patchwork which is specially designed for combining separate ggplot2 graphs into a single figure.\nPatchwork package has a very simple syntax where we can create layouts super easily. Here’s the general syntax that combines:\n\nTwo-Column Layout using the Plus Sign +.\nParenthesis () to create a subplot group.\nTwo-Row Layout using the Division Sign /"
  },
  {
    "objectID": "Hands-on_Exs/Ex2/Hands-on_Ex2.html#combining-two-ggplot2-graphs-using",
    "href": "Hands-on_Exs/Ex2/Hands-on_Ex2.html#combining-two-ggplot2-graphs-using",
    "title": "Hands-on Exercise 2: Beyond ggplot Fundamentals",
    "section": "Combining two ggplot2 graphs using ‘+’",
    "text": "Combining two ggplot2 graphs using ‘+’\nUsing + is the simplest way to combine multiple graphs. This will show them side by side\n\np1 + p2"
  },
  {
    "objectID": "Hands-on_Exs/Ex2/Hands-on_Ex2.html#combining-three-ggplot2-graphs-using-pathwork",
    "href": "Hands-on_Exs/Ex2/Hands-on_Ex2.html#combining-three-ggplot2-graphs-using-pathwork",
    "title": "Hands-on Exercise 2: Beyond ggplot Fundamentals",
    "section": "Combining three ggplot2 graphs using pathwork",
    "text": "Combining three ggplot2 graphs using pathwork\nAside from +, patchwork provides other operators we can use to compose plots:\n\n“/” operator to stack two ggplot2 graphs,\n“|” operator to place the plots beside each other,\n“()” operator the define the sequence of the plotting.\n\nFor example, if we want to stack the two bar graphs, and show the scatterplot to the right, we can do:\n\n(p1 / p2) | p3"
  },
  {
    "objectID": "Hands-on_Exs/Ex2/Hands-on_Ex2.html#tagging-composed-graphs",
    "href": "Hands-on_Exs/Ex2/Hands-on_Ex2.html#tagging-composed-graphs",
    "title": "Hands-on Exercise 2: Beyond ggplot Fundamentals",
    "section": "Tagging composed graphs",
    "text": "Tagging composed graphs\npatchwork provides auto-tagging capabilities so the individual graphs can more easily be referred in text.\n\n((p1 / p2) | p3) +\n  plot_annotation(tag_levels = '1')\n\n\n\n\nFor example, we can refer to the Distributions of Maths scores graph as Graph 1, corresponding to the annotation provided."
  },
  {
    "objectID": "Hands-on_Exs/Ex2/Hands-on_Ex2.html#creating-figure-with-insert",
    "href": "Hands-on_Exs/Ex2/Hands-on_Ex2.html#creating-figure-with-insert",
    "title": "Hands-on Exercise 2: Beyond ggplot Fundamentals",
    "section": "Creating figure with insert",
    "text": "Creating figure with insert\nBeside providing functions to place plots next to each other based on the provided layout. With inset_element() of patchwork, we can place one or several plots or graphic elements freely on top or below another plot.\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n\n\n\n\nThis is useful for providing supplementary details to the main graph."
  },
  {
    "objectID": "Hands-on_Exs/Ex2/Hands-on_Ex2.html#applying-themes-to-the-composite-figure",
    "href": "Hands-on_Exs/Ex2/Hands-on_Ex2.html#applying-themes-to-the-composite-figure",
    "title": "Hands-on Exercise 2: Beyond ggplot Fundamentals",
    "section": "Applying themes to the composite figure",
    "text": "Applying themes to the composite figure\nWe can apply the theme by using & theme_() to the patchwork result.\n\nThe Economist (ggtheme)Ipsum_es (hrbrtheme)\n\n\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_economist()\n\n\n\n\n\n\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_ipsum_es()"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608 - Visual Analytics and Applications",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications!\nI am Kristine Joy Paas, or Joy for short.\nIn this webpage, I am going to share with you my learning journey of visual analytics.\nNetlify link: https://isss608-kjcpaas.netlify.app/\nGithub repo: https://github.com/kjcpaas/ISSS608"
  },
  {
    "objectID": "Take-home_Exs/Ex1/Take-home_Ex1.html",
    "href": "Take-home_Exs/Ex1/Take-home_Ex1.html",
    "title": "Take-home Exercise 1: Singapore Private Residential Property Market for 2024 Q1",
    "section": "",
    "text": "Singapore has one of the highest home ownership rates in the world at 89.7%, 2nd only to Russia among the G20 countries. Due to Singapore’s successful public housing program, 77.8% of Singapore residents live in HDB flats, while 22% live in private properties like condos or landed properties.\nWhile the HDB market targets Singaporeans with household income of up to 14,000 SGD, the private housing market is Singapore is still in demand for households looking to upgrade, invest their property, and for residents not eligible for public housing (e.g. high income household, foreigners, etc.)\nIn this exercise we will look at the market trends for private residential property market for 2024 Q1 and see how the economic factors have affected it.\n\n\n\nFor this exercise, we will use the residential real estate transaction data from REALIS. This provides comprehensive and up-to-date statistics on the private property market in Singapore.\nThe dataset has been provided via eLearn and added to the data/ folder of this exercise.\n\n\n\n\n\n\nFile Structure\n\n\n\n\n\n\n\n\n\nFor the purposes of this exercise, we will refer to each data as the following:\n\n2023Q1: ResidentialTransaction20240308160536.csv\n2023Q2: ResidentialTransaction20240308160736.csv\n2023Q3: ResidentialTransaction20240308161009.csv\n2023Q4: ResidentialTransaction20240308161109.csv\n2024Q1: ResidentialTransaction20240414220633.csv\n\n\n\n\nTo start the data analysis, we first need to prepare the R environment for analysis. This includes loading the R packages and loading the datasets.\nAfter the setup, we need to do data wrangling where we clean and transform the data into a form that is fitting for our analysis. This will possible entail removing irrelevant data, deriving additional variables, renaming columns, etc.\nAs part of wrangling, we need to decide on what data we would like to look at closely. For the purposes of this exercise, these are the data we can look at that can potentially give valuable insights:\n\nTotal units sold by quarter\nUnits sold by submarkets such as property type (e.g. condominium, terrace house, apartment, detached house), sale type (e.g. resale, new sale, subsale), etc.\nTransaction price by submarkets such property type (e.g. condominium, terrace house, apartment, detached house, etc), sale type (e.g. resale, new sale, subsale), etc.\n\nFinally, we will do data exploration and visualize the insights gained from the data. Some of the questions we would ask are:\n\nWhat is the general trend of private residential property sales prices?\nIs this trend consistent among all submarkets?\nHow affordable are private residential properties for Singaporean households?"
  },
  {
    "objectID": "Take-home_Exs/Ex1/Take-home_Ex1.html#background",
    "href": "Take-home_Exs/Ex1/Take-home_Ex1.html#background",
    "title": "Take-home Exercise 1: Singapore Private Residential Property Market for 2024 Q1",
    "section": "",
    "text": "Singapore has one of the highest home ownership rates in the world at 89.7%, 2nd only to Russia among the G20 countries. Due to Singapore’s successful public housing program, 77.8% of Singapore residents live in HDB flats, while 22% live in private properties like condos or landed properties.\nWhile the HDB market targets Singaporeans with household income of up to 14,000 SGD, the private housing market is Singapore is still in demand for households looking to upgrade, invest their property, and for residents not eligible for public housing (e.g. high income household, foreigners, etc.)\nIn this exercise we will look at the market trends for private residential property market for 2024 Q1 and see how the economic factors have affected it."
  },
  {
    "objectID": "Take-home_Exs/Ex1/Take-home_Ex1.html#loading-the-data-sources",
    "href": "Take-home_Exs/Ex1/Take-home_Ex1.html#loading-the-data-sources",
    "title": "Take-home Exercise 1: Singapore Private Residential Property Market for 2024 Q1",
    "section": "",
    "text": "For this exercise, we will use the residential real estate transaction data from REALIS. This provides comprehensive and up-to-date statistics on the private property market in Singapore.\nThe dataset has been provided via eLearn and added to the data/ folder of this exercise.\n\n\n\n\n\n\nFile Structure\n\n\n\n\n\n\n\n\n\nFor the purposes of this exercise, we will refer to each data as the following:\n\n2023Q1: ResidentialTransaction20240308160536.csv\n2023Q2: ResidentialTransaction20240308160736.csv\n2023Q3: ResidentialTransaction20240308161009.csv\n2023Q4: ResidentialTransaction20240308161109.csv\n2024Q1: ResidentialTransaction20240414220633.csv"
  },
  {
    "objectID": "Take-home_Exs/Ex1/Take-home_Ex1.html#methodology",
    "href": "Take-home_Exs/Ex1/Take-home_Ex1.html#methodology",
    "title": "Take-home Exercise 1: Singapore Private Residential Property Market for 2024 Q1",
    "section": "",
    "text": "To start the data analysis, we first need to prepare the R environment for analysis. This includes loading the R packages and loading the datasets.\nAfter the setup, we need to do data wrangling where we clean and transform the data into a form that is fitting for our analysis. This will possible entail removing irrelevant data, deriving additional variables, renaming columns, etc.\nAs part of wrangling, we need to decide on what data we would like to look at closely. For the purposes of this exercise, these are the data we can look at that can potentially give valuable insights:\n\nTotal units sold by quarter\nUnits sold by submarkets such as property type (e.g. condominium, terrace house, apartment, detached house), sale type (e.g. resale, new sale, subsale), etc.\nTransaction price by submarkets such property type (e.g. condominium, terrace house, apartment, detached house, etc), sale type (e.g. resale, new sale, subsale), etc.\n\nFinally, we will do data exploration and visualize the insights gained from the data. Some of the questions we would ask are:\n\nWhat is the general trend of private residential property sales prices?\nIs this trend consistent among all submarkets?\nHow affordable are private residential properties for Singaporean households?"
  },
  {
    "objectID": "Take-home_Exs/Ex1/Take-home_Ex1.html#loading-the-r-packages",
    "href": "Take-home_Exs/Ex1/Take-home_Ex1.html#loading-the-r-packages",
    "title": "Take-home Exercise 1: Singapore Private Residential Property Market for 2024 Q1",
    "section": "2.1 Loading the R packages",
    "text": "2.1 Loading the R packages\nFor this exercise, we will mainly use the following packages for data analysis:\n\ntidyverse: A collection of R packages used in data science, which includes ggplot2, tibble, readr, among others\nggdist: Provides functions for presenting distributions in ggplot2. stat_halfeye() and stat_dots() will be used the most.\nggtext: Enhances text rendering for ggplot2. element_markdown() is most notable function used for markdown rendering so we can highlight important information in text.\nggrepel: Manages overlapping texts and labels on ggplot2. We will use this to render labels on dense plots.\npatchwork: Allows composition of multiple graphs into a single plot\n\nAside from these, we will also include other packages that will help us present the data better.\n\nknitr: Provides tools for dynamic report generation in R. For this exercise, we will use this package to render our tables better.\nscales: Extends functions to operate on ggplot2 scales. For this exercise, we will use wrap_format() to wrap long texts.\n\n\npacman::p_load(knitr,\n               tidyverse,\n               patchwork,\n               ggdist,\n               ggtext,\n               ggrepel,\n               scales)"
  },
  {
    "objectID": "Take-home_Exs/Ex1/Take-home_Ex1.html#data-checkpoints",
    "href": "Take-home_Exs/Ex1/Take-home_Ex1.html#data-checkpoints",
    "title": "Take-home Exercise 1: Singapore Private Residential Property Market for 2024 Q1",
    "section": "2.2 Data Checkpoints",
    "text": "2.2 Data Checkpoints\nAs the analysis is expected to have a lot of intermediate steps, Save, Load, and Data clear points are available to make our data wrangling more efficient.\n\n\n\n\n\n\nSave point\n\n\n\nThis is where data is written as rds files using write_rds() for important data sets that will be used in later analysis. Examples are:\n\nData we need to prepare for analysis\nCritical outputs of expensive calculations\nCleaned up data for lightweight processing\n\n\n\n\n\n\n\n\n\nLoad point\n\n\n\nThis is where data is loaded from rds files using read_rds(). They were previously generated by the save point.\nTIP: Skip to the load points to progress without running the code above it\n\n\n\n\n\n\n\n\nData clear point\n\n\n\nThis is where data that will not be used anymore are cleared. The data in RStudio environment will pile up and will make it more difficult to check the relevant data in each part.\nWe can set #| eval: false in code chunks if we want skip the clearing. For example, the code below won’t be run.\n\nmessage &lt;- \"This code chunk executed\"\n\n\n\nTo use these checkpoints, we need to create data/rds folder."
  },
  {
    "objectID": "Take-home_Exs/Ex1/Take-home_Ex1.html#importing-the-datasets",
    "href": "Take-home_Exs/Ex1/Take-home_Ex1.html#importing-the-datasets",
    "title": "Take-home Exercise 1: Singapore Private Residential Property Market for 2024 Q1",
    "section": "3.1 Importing the datasets",
    "text": "3.1 Importing the datasets\nUpon inspection of the csv files, column names have human-readable titles such as “Project Name”, “Transacted Price ($)”, etc. While good for humans, these column names may cause parsing issues with R, especially as there are special characters.\nBecause of this, we will rename the columns in their UPPER_CASE format after removing the special characters. We will create a helper function that will help us accomplish this:\n\nrename_realis_column &lt;- function(orig_name) {\n  # Add underscores to spaces\n  gsub(\" +\", \"_\",\n       # Remove special characters\n       gsub(\"[^A-Z ]\", \"\",\n            # Convert to upper case and remove trailing spaces\n            toupper(orig_name)) %&gt;% trimws())\n}\n\nWe will use read_csv() to import each file and use rename_realis_column() in the rename_with() function.\n\n2023 Q12023 Q22023 Q32023 Q42024 Q1\n\n\n\nrealis_2023q1 &lt;- read_csv('data/ResidentialTransaction20240308160536.csv') %&gt;%\n                  rename_with(rename_realis_column)\nkable(head(realis_2023q1, n=7))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPROJECT_NAME\nTRANSACTED_PRICE\nAREA_SQFT\nUNIT_PRICE_PSF\nSALE_DATE\nADDRESS\nTYPE_OF_SALE\nTYPE_OF_AREA\nAREA_SQM\nUNIT_PRICE_PSM\nNETT_PRICE\nPROPERTY_TYPE\nNUMBER_OF_UNITS\nTENURE\nCOMPLETION_DATE\nPURCHASER_ADDRESS_INDICATOR\nPOSTAL_CODE\nPOSTAL_DISTRICT\nPOSTAL_SECTOR\nPLANNING_REGION\nPLANNING_AREA\n\n\n\n\nTHE REEF AT KING’S DOCK\n2317000\n882.65\n2625\n01 Jan 2023\n12 HARBOURFRONT AVENUE #05-32\nNew Sale\nStrata\n82.0\n28256\n-\nCondominium\n1\n99 yrs from 12/01/2021\nUncompleted\nHDB\n097996\n04\n09\nCentral Region\nBukit Merah\n\n\nURBAN TREASURES\n1823500\n882.65\n2066\n02 Jan 2023\n205 JALAN EUNOS #08-02\nNew Sale\nStrata\n82.0\n22238\n-\nCondominium\n1\nFreehold\nUncompleted\nPrivate\n419535\n14\n41\nEast Region\nBedok\n\n\nNORTH GAIA\n1421112\n1076.40\n1320\n02 Jan 2023\n29 YISHUN CLOSE #08-10\nNew Sale\nStrata\n100.0\n14211\n-\nExecutive Condominium\n1\n99 yrs from 15/02/2021\nUncompleted\nHDB\n269343\n27\n26\nNorth Region\nYishun\n\n\nNORTH GAIA\n1258112\n1033.34\n1218\n02 Jan 2023\n45 YISHUN CLOSE #07-42\nNew Sale\nStrata\n96.0\n13105\n-\nExecutive Condominium\n1\n99 yrs from 15/02/2021\nUncompleted\nHDB\n269294\n27\n26\nNorth Region\nYishun\n\n\nPARC BOTANNIA\n1280000\n871.88\n1468\n03 Jan 2023\n12 FERNVALE STREET #06-16\nResale\nStrata\n81.0\n15802\n-\nCondominium\n1\n99 yrs from 28/12/2016\n2022\nHDB\n797391\n28\n79\nNorth East Region\nSengkang\n\n\nNANYANG PARK\n5870000\n3322.85\n1767\n03 Jan 2023\n72 JALAN LIMBOK\nResale\nLand\n308.7\n19015\n-\nTerrace House\n1\n999 yrs from 14/02/1881\n-\nPrivate\n548742\n19\n54\nNorth East Region\nHougang\n\n\nPALMS @ SIXTH AVENUE\n4950000\n4520.88\n1095\n03 Jan 2023\n231 SIXTH AVENUE\nResale\nStrata\n420.0\n11786\n-\nSemi-Detached House\n1\nFreehold\n2015\nPrivate\n275780\n10\n27\nCentral Region\nBukit Timah\n\n\n\n\n\nThere are 4,722 private residential propertysales for 2023 Q1.\n\n\n\nrealis_2023q2 &lt;- read_csv('data/ResidentialTransaction20240308160736.csv') %&gt;%\n                  rename_with(rename_realis_column)\nkable(head(realis_2023q2, n=7))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPROJECT_NAME\nTRANSACTED_PRICE\nAREA_SQFT\nUNIT_PRICE_PSF\nSALE_DATE\nADDRESS\nTYPE_OF_SALE\nTYPE_OF_AREA\nAREA_SQM\nUNIT_PRICE_PSM\nNETT_PRICE\nPROPERTY_TYPE\nNUMBER_OF_UNITS\nTENURE\nCOMPLETION_DATE\nPURCHASER_ADDRESS_INDICATOR\nPOSTAL_CODE\nPOSTAL_DISTRICT\nPOSTAL_SECTOR\nPLANNING_REGION\nPLANNING_AREA\n\n\n\n\nTHE GAZANIA\n1528000\n678.13\n2253\n01 Apr 2023\n15 HOW SUN DRIVE #02-31\nNew Sale\nStrata\n63\n24254\n-\nCondominium\n1\nFreehold\n2022\nN.A\n538545\n19\n53\nNorth East Region\nSerangoon\n\n\nTHE GAZANIA\n1938000\n958.00\n2023\n01 Apr 2023\n7 HOW SUN DRIVE #01-12\nNew Sale\nStrata\n89\n21775\n-\nCondominium\n1\nFreehold\n2022\nPrivate\n538530\n19\n53\nNorth East Region\nSerangoon\n\n\nONE PEARL BANK\n2051000\n699.66\n2931\n01 Apr 2023\n1 PEARL BANK #32-16\nNew Sale\nStrata\n65\n31554\n-\nApartment\n1\n99 yrs from 01/03/2019\nUncompleted\nPrivate\n169016\n03\n16\nCentral Region\nOutram\n\n\nURBAN TREASURES\n1850700\n882.65\n2097\n01 Apr 2023\n205 JALAN EUNOS #05-05\nNew Sale\nStrata\n82\n22570\n-\nCondominium\n1\nFreehold\nUncompleted\nHDB\n419535\n14\n41\nEast Region\nBedok\n\n\nHYLL ON HOLLAND\n2021500\n699.66\n2889\n01 Apr 2023\n97 HOLLAND ROAD #10-25\nNew Sale\nStrata\n65\n31100\n-\nCondominium\n1\nFreehold\nUncompleted\nPrivate\n278541\n10\n27\nCentral Region\nBukit Timah\n\n\nLEEDON GREEN\n1838000\n785.77\n2339\n01 Apr 2023\n34 LEEDON HEIGHTS #12-40\nNew Sale\nStrata\n73\n25178\n-\nCondominium\n1\nFreehold\nUncompleted\nPrivate\n266076\n10\n26\nCentral Region\nBukit Timah\n\n\nKLIMT CAIRNHILL\n7320000\n2055.92\n3560\n01 Apr 2023\n71 CAIRNHILL ROAD #15-01\nNew Sale\nStrata\n191\n38325\n-\nApartment\n1\nFreehold\nUncompleted\nPrivate\n229725\n09\n22\nCentral Region\nNewton\n\n\n\n\n\nThere are 6,125 private residential property sales for 2023 Q2.\n\n\n\nrealis_2023q3 &lt;- read_csv('data/ResidentialTransaction20240308161009.csv') %&gt;%\n                  rename_with(rename_realis_column)\nkable(head(realis_2023q3, n=7))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPROJECT_NAME\nTRANSACTED_PRICE\nAREA_SQFT\nUNIT_PRICE_PSF\nSALE_DATE\nADDRESS\nTYPE_OF_SALE\nTYPE_OF_AREA\nAREA_SQM\nUNIT_PRICE_PSM\nNETT_PRICE\nPROPERTY_TYPE\nNUMBER_OF_UNITS\nTENURE\nCOMPLETION_DATE\nPURCHASER_ADDRESS_INDICATOR\nPOSTAL_CODE\nPOSTAL_DISTRICT\nPOSTAL_SECTOR\nPLANNING_REGION\nPLANNING_AREA\n\n\n\n\nMYRA\n1658000\n667.37\n2484\n01 Jul 2023\n9 MEYAPPA CHETTIAR ROAD #02-07\nNew Sale\nStrata\n62\n26742\n-\nApartment\n1\nFreehold\nUncompleted\nN.A\n358456\n13\n35\nCentral Region\nToa Payoh\n\n\nNORTH GAIA\n1449000\n1076.40\n1346\n01 Jul 2023\n27 YISHUN CLOSE #10-06\nNew Sale\nStrata\n100\n14490\n-\nExecutive Condominium\n1\n99 yrs from 15/02/2021\nUncompleted\nHDB\n769342\n27\n76\nNorth Region\nYishun\n\n\nNORTH GAIA\n1365000\n1076.40\n1268\n01 Jul 2023\n27 YISHUN CLOSE #05-06\nNew Sale\nStrata\n100\n13650\n-\nExecutive Condominium\n1\n99 yrs from 15/02/2021\nUncompleted\nHDB\n769342\n27\n76\nNorth Region\nYishun\n\n\nNORTH GAIA\n1231000\n958.00\n1285\n01 Jul 2023\n35 YISHUN CLOSE #08-25\nNew Sale\nStrata\n89\n13831\n-\nExecutive Condominium\n1\n99 yrs from 15/02/2021\nUncompleted\nHDB\n769299\n27\n76\nNorth Region\nYishun\n\n\nNORTH GAIA\n1272000\n1001.05\n1271\n01 Jul 2023\n45 YISHUN CLOSE #09-45\nNew Sale\nStrata\n93\n13677\n-\nExecutive Condominium\n1\n99 yrs from 15/02/2021\nUncompleted\nHDB\n769294\n27\n76\nNorth Region\nYishun\n\n\nPICCADILLY GRAND\n3462000\n1679.18\n2062\n01 Jul 2023\n3 NORTHUMBERLAND ROAD #14-09\nNew Sale\nStrata\n156\n22192\n-\nApartment\n1\n99 yrs from 02/08/2021\nUncompleted\nPrivate\n219569\n08\n21\nCentral Region\nKallang\n\n\nTENET\n1356000\n925.70\n1465\n01 Jul 2023\n71 TAMPINES STREET 62 #14-02\nNew Sale\nStrata\n86\n15767\n-\nExecutive Condominium\n1\n99 yrs from 01/11/2021\nUncompleted\nHDB\n529699\n18\n52\nEast Region\nTampines\n\n\n\n\n\nThere are 6,206 private residential property sales for 2023 Q3.\n\n\n\nrealis_2023q4 &lt;- read_csv('data/ResidentialTransaction20240308161109.csv') %&gt;%\n                  rename_with(rename_realis_column)\nkable(head(realis_2023q4, n=7))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPROJECT_NAME\nTRANSACTED_PRICE\nAREA_SQFT\nUNIT_PRICE_PSF\nSALE_DATE\nADDRESS\nTYPE_OF_SALE\nTYPE_OF_AREA\nAREA_SQM\nUNIT_PRICE_PSM\nNETT_PRICE\nPROPERTY_TYPE\nNUMBER_OF_UNITS\nTENURE\nCOMPLETION_DATE\nPURCHASER_ADDRESS_INDICATOR\nPOSTAL_CODE\nPOSTAL_DISTRICT\nPOSTAL_SECTOR\nPLANNING_REGION\nPLANNING_AREA\n\n\n\n\nLEEDON GREEN\n1749000\n538.20\n3250\n01 Oct 2023\n26 LEEDON HEIGHTS #11-08\nNew Sale\nStrata\n50\n34980\n-\nCondominium\n1\nFreehold\nUncompleted\nPrivate\n266221\n10\n26\nCentral Region\nBukit Timah\n\n\nLIV @ MB\n3148740\n1453.14\n2167\n01 Oct 2023\n114A ARTHUR ROAD #01-01\nNew Sale\nStrata\n135\n23324\n-\nCondominium\n1\n99 yrs from 23/11/2021\nUncompleted\nPrivate\n439826\n15\n43\nCentral Region\nMarine Parade\n\n\nMORI\n2422337\n1259.39\n1923\n01 Oct 2023\n223 GUILLEMARD ROAD #05-21\nNew Sale\nStrata\n117\n20704\n-\nApartment\n1\nFreehold\nUncompleted\nPrivate\n399738\n14\n39\nCentral Region\nGeylang\n\n\nTHE ARDEN\n1330000\n721.19\n1844\n01 Oct 2023\n6 PHOENIX ROAD #01-18\nNew Sale\nStrata\n67\n19851\n-\nApartment\n1\n99 yrs from 14/07/2023\nUncompleted\nPrivate\n668159\n23\n66\nWest Region\nBukit Batok\n\n\nLENTOR MODERN\n2237000\n1130.22\n1979\n01 Oct 2023\n3 LENTOR CENTRAL #05-03\nNew Sale\nStrata\n105\n21305\n-\nApartment\n1\n99 yrs from 26/10/2021\nUncompleted\nPrivate\n788888\n26\n78\nNorth East Region\nAng Mo Kio\n\n\nTHE LAKEGARDEN RESIDENCES\n1249900\n592.02\n2111\n01 Oct 2023\n82 YUAN CHING ROAD #04-14\nNew Sale\nStrata\n55\n22725\n-\nCondominium\n1\n99 yrs from 31/05/2023\nUncompleted\nHDB\n619614\n22\n61\nWest Region\nJurong East\n\n\nLENTOR HILLS RESIDENCES\n2890000\n1356.26\n2131\n01 Oct 2023\n31 LENTOR HILLS ROAD #15-03\nNew Sale\nStrata\n126\n22937\n-\nApartment\n1\n99 yrs from 25/04/2022\nUncompleted\nHDB\n788881\n26\n78\nNorth East Region\nAng Mo Kio\n\n\n\n\n\nThere are 4,851 private residential property sales for 2023 Q4.\n\n\n\nrealis_2024q1 &lt;- read_csv('data/ResidentialTransaction20240414220633.csv') %&gt;%\n                  rename_with(rename_realis_column)\nkable(head(realis_2024q1, n=7))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPROJECT_NAME\nTRANSACTED_PRICE\nAREA_SQFT\nUNIT_PRICE_PSF\nSALE_DATE\nADDRESS\nTYPE_OF_SALE\nTYPE_OF_AREA\nAREA_SQM\nUNIT_PRICE_PSM\nNETT_PRICE\nPROPERTY_TYPE\nNUMBER_OF_UNITS\nTENURE\nCOMPLETION_DATE\nPURCHASER_ADDRESS_INDICATOR\nPOSTAL_CODE\nPOSTAL_DISTRICT\nPOSTAL_SECTOR\nPLANNING_REGION\nPLANNING_AREA\n\n\n\n\nTHE LANDMARK\n2726888\n1076.40\n2533\n01 Jan 2024\n173 CHIN SWEE ROAD #22-11\nNew Sale\nStrata\n100\n27269\n-\nCondominium\n1\n99 yrs from 28/08/2020\nUncompleted\nPrivate\n169878\n03\n16\nCentral Region\nOutram\n\n\nPOLLEN COLLECTION\n3850000\n1808.35\n2129\n01 Jan 2024\n34 POLLEN PLACE\nNew Sale\nLand\n168\n22917\n-\nTerrace House\n1\n99 yrs from 09/12/2019\nUncompleted\nN.A\n807233\n28\n80\nNorth East Region\nSerangoon\n\n\nSKY EDEN@BEDOK\n2346000\n1087.16\n2158\n01 Jan 2024\n1 BEDOK CENTRAL #09-10\nNew Sale\nStrata\n101\n23228\n-\nApartment\n1\n99 yrs from 05/01/2022\nUncompleted\nHDB\n469657\n16\n46\nEast Region\nBedok\n\n\nTERRA HILL\n2190000\n807.30\n2713\n01 Jan 2024\n18A YEW SIANG ROAD #03-12\nNew Sale\nStrata\n75\n29200\n-\nApartment\n1\nFreehold\nUncompleted\nN.A\n118992\n05\n11\nCentral Region\nQueenstown\n\n\nPINETREE HILL\n1954000\n796.54\n2453\n01 Jan 2024\n36 PINE GROVE #05-18\nNew Sale\nStrata\n74\n26405\n-\nCondominium\n1\n99 yrs from 12/09/2022\nUncompleted\nPrivate\n598444\n21\n59\nCentral Region\nBukit Timah\n\n\nTHE RESERVE RESIDENCES\n3412201\n1323.97\n2577\n01 Jan 2024\n13 JALAN ANAK BUKIT #28-106\nNew Sale\nStrata\n123\n27741\n-\nApartment\n1\n99 yrs from 29/11/2021\nUncompleted\nPrivate\n589605\n21\n58\nCentral Region\nBukit Timah\n\n\nSUMMER VILLAS\n2960000\n3530.59\n838\n02 Jan 2024\n73 GERALD DRIVE #01-06\nResale\nStrata\n328\n9024\n-\nTerrace House\n1\nFreehold\n2004\nPrivate\n797703\n28\n79\nNorth East Region\nHougang\n\n\n\n\n\nThere are 4,902 private residential property sales for 2024 Q1.\n\n\n\n\nglimpse(realis_2023q1)\n\nRows: 4,722\nColumns: 21\n$ PROJECT_NAME                &lt;chr&gt; \"THE REEF AT KING'S DOCK\", \"URBAN TREASURE…\n$ TRANSACTED_PRICE            &lt;dbl&gt; 2317000, 1823500, 1421112, 1258112, 128000…\n$ AREA_SQFT                   &lt;dbl&gt; 882.65, 882.65, 1076.40, 1033.34, 871.88, …\n$ UNIT_PRICE_PSF              &lt;dbl&gt; 2625, 2066, 1320, 1218, 1468, 1767, 1095, …\n$ SALE_DATE                   &lt;chr&gt; \"01 Jan 2023\", \"02 Jan 2023\", \"02 Jan 2023…\n$ ADDRESS                     &lt;chr&gt; \"12 HARBOURFRONT AVENUE #05-32\", \"205 JALA…\n$ TYPE_OF_SALE                &lt;chr&gt; \"New Sale\", \"New Sale\", \"New Sale\", \"New S…\n$ TYPE_OF_AREA                &lt;chr&gt; \"Strata\", \"Strata\", \"Strata\", \"Strata\", \"S…\n$ AREA_SQM                    &lt;dbl&gt; 82.0, 82.0, 100.0, 96.0, 81.0, 308.7, 420.…\n$ UNIT_PRICE_PSM              &lt;dbl&gt; 28256, 22238, 14211, 13105, 15802, 19015, …\n$ NETT_PRICE                  &lt;chr&gt; \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-…\n$ PROPERTY_TYPE               &lt;chr&gt; \"Condominium\", \"Condominium\", \"Executive C…\n$ NUMBER_OF_UNITS             &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ TENURE                      &lt;chr&gt; \"99 yrs from 12/01/2021\", \"Freehold\", \"99 …\n$ COMPLETION_DATE             &lt;chr&gt; \"Uncompleted\", \"Uncompleted\", \"Uncompleted…\n$ PURCHASER_ADDRESS_INDICATOR &lt;chr&gt; \"HDB\", \"Private\", \"HDB\", \"HDB\", \"HDB\", \"Pr…\n$ POSTAL_CODE                 &lt;chr&gt; \"097996\", \"419535\", \"269343\", \"269294\", \"7…\n$ POSTAL_DISTRICT             &lt;chr&gt; \"04\", \"14\", \"27\", \"27\", \"28\", \"19\", \"10\", …\n$ POSTAL_SECTOR               &lt;chr&gt; \"09\", \"41\", \"26\", \"26\", \"79\", \"54\", \"27\", …\n$ PLANNING_REGION             &lt;chr&gt; \"Central Region\", \"East Region\", \"North Re…\n$ PLANNING_AREA               &lt;chr&gt; \"Bukit Merah\", \"Bedok\", \"Yishun\", \"Yishun\"…\n\n\nThe imported dataset has 21 variables."
  },
  {
    "objectID": "Take-home_Exs/Ex1/Take-home_Ex1.html#combining-the-dataframes",
    "href": "Take-home_Exs/Ex1/Take-home_Ex1.html#combining-the-dataframes",
    "title": "Take-home Exercise 1: Singapore Private Residential Property Market for 2024 Q1",
    "section": "3.2 Combining the dataframes",
    "text": "3.2 Combining the dataframes\nNext, we will combine all 5 realis_202*q* dataframes into a single one to simplify aggregation and partitioning of data for analysis.\nThis will also simplify cleanup and transformation as they will be done on a single dataframe instead of 5.\nTo do this, we need to add QUARTER values to each dataframe before merging them to a single one. We will use the format &lt;YEAR&gt;Q&lt;QUARTER&gt;, i.e 2024Q1 for 2024 Q1. This is so we can identify which quarter the sale was made, which we will use for aggregation.\n\n\n\n\n\n\nFunctions used\n\n\n\n\nmutate() for adding new column\nrbind() for combining all dataframes\nseq_len() and nrow() for generating a sequence of IDs\nsprintf() for formatting a string.\n\n\n\n\nAdding QUARTER columnCombining data framesAdding transaction ID’s (TXN_ID)Verifying the result\n\n\n\nrealis_2023q1 &lt;- mutate(realis_2023q1, QUARTER=\"2023Q1\")\nrealis_2023q2 &lt;- mutate(realis_2023q2, QUARTER=\"2023Q2\")\nrealis_2023q3 &lt;- mutate(realis_2023q3, QUARTER=\"2023Q3\")\nrealis_2023q4 &lt;- mutate(realis_2023q4, QUARTER=\"2023Q4\")\nrealis_2024q1 &lt;- mutate(realis_2024q1, QUARTER=\"2024Q1\")\n\n\n\n\nrealis &lt;- realis_2023q1 %&gt;%\n  rbind(realis_2023q2) %&gt;%\n  rbind(realis_2023q3) %&gt;%\n  rbind(realis_2023q4) %&gt;%\n  rbind(realis_2024q1)\nkable(head(realis, n=10))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPROJECT_NAME\nTRANSACTED_PRICE\nAREA_SQFT\nUNIT_PRICE_PSF\nSALE_DATE\nADDRESS\nTYPE_OF_SALE\nTYPE_OF_AREA\nAREA_SQM\nUNIT_PRICE_PSM\nNETT_PRICE\nPROPERTY_TYPE\nNUMBER_OF_UNITS\nTENURE\nCOMPLETION_DATE\nPURCHASER_ADDRESS_INDICATOR\nPOSTAL_CODE\nPOSTAL_DISTRICT\nPOSTAL_SECTOR\nPLANNING_REGION\nPLANNING_AREA\nQUARTER\n\n\n\n\nTHE REEF AT KING’S DOCK\n2317000\n882.65\n2625\n01 Jan 2023\n12 HARBOURFRONT AVENUE #05-32\nNew Sale\nStrata\n82.0\n28256\n-\nCondominium\n1\n99 yrs from 12/01/2021\nUncompleted\nHDB\n097996\n04\n09\nCentral Region\nBukit Merah\n2023Q1\n\n\nURBAN TREASURES\n1823500\n882.65\n2066\n02 Jan 2023\n205 JALAN EUNOS #08-02\nNew Sale\nStrata\n82.0\n22238\n-\nCondominium\n1\nFreehold\nUncompleted\nPrivate\n419535\n14\n41\nEast Region\nBedok\n2023Q1\n\n\nNORTH GAIA\n1421112\n1076.40\n1320\n02 Jan 2023\n29 YISHUN CLOSE #08-10\nNew Sale\nStrata\n100.0\n14211\n-\nExecutive Condominium\n1\n99 yrs from 15/02/2021\nUncompleted\nHDB\n269343\n27\n26\nNorth Region\nYishun\n2023Q1\n\n\nNORTH GAIA\n1258112\n1033.34\n1218\n02 Jan 2023\n45 YISHUN CLOSE #07-42\nNew Sale\nStrata\n96.0\n13105\n-\nExecutive Condominium\n1\n99 yrs from 15/02/2021\nUncompleted\nHDB\n269294\n27\n26\nNorth Region\nYishun\n2023Q1\n\n\nPARC BOTANNIA\n1280000\n871.88\n1468\n03 Jan 2023\n12 FERNVALE STREET #06-16\nResale\nStrata\n81.0\n15802\n-\nCondominium\n1\n99 yrs from 28/12/2016\n2022\nHDB\n797391\n28\n79\nNorth East Region\nSengkang\n2023Q1\n\n\nNANYANG PARK\n5870000\n3322.85\n1767\n03 Jan 2023\n72 JALAN LIMBOK\nResale\nLand\n308.7\n19015\n-\nTerrace House\n1\n999 yrs from 14/02/1881\n-\nPrivate\n548742\n19\n54\nNorth East Region\nHougang\n2023Q1\n\n\nPALMS @ SIXTH AVENUE\n4950000\n4520.88\n1095\n03 Jan 2023\n231 SIXTH AVENUE\nResale\nStrata\n420.0\n11786\n-\nSemi-Detached House\n1\nFreehold\n2015\nPrivate\n275780\n10\n27\nCentral Region\nBukit Timah\n2023Q1\n\n\nN.A.\n3260000\n1555.40\n2096\n03 Jan 2023\n19 TENG TONG ROAD\nResale\nLand\n144.5\n22561\n-\nTerrace House\n1\nFreehold\n1941\nPrivate\n423510\n15\n42\nCentral Region\nMarine Parade\n2023Q1\n\n\nWHISTLER GRAND\n850000\n441.32\n1926\n03 Jan 2023\n107 WEST COAST VALE #30-04\nSub Sale\nStrata\n41.0\n20732\n-\nApartment\n1\n99 yrs from 07/05/2018\n2022\nHDB\n126751\n05\n12\nWest Region\nClementi\n2023Q1\n\n\nNORTHOAKS\n1268000\n1603.84\n791\n03 Jan 2023\n30 WOODLANDS CRESCENT #01-11\nResale\nStrata\n149.0\n8510\n-\nExecutive Condominium\n1\n99 yrs from 16/12/1997\n2000\nHDB\n738086\n25\n73\nNorth Region\nWoodlands\n2023Q1\n\n\n\n\n\n\n\nWe will also add TXN_ID so we can more easily refer to the observations later on. The format is TXN00000.\n\nrealis$TXN_ID &lt;- sprintf(\"TXN%05d\", seq_len(nrow(realis)))\n\n\n\nLet us check if all rows are accounted for by checking if the number of rows in realis is the total number of rows from all dataframes.\n\nnrow(realis) == nrow(realis_2023q1) +\n  nrow(realis_2023q2) +\n  nrow(realis_2023q3) +\n  nrow(realis_2023q4) +\n  nrow(realis_2024q1)\n\n[1] TRUE"
  },
  {
    "objectID": "Take-home_Exs/Ex1/Take-home_Ex1.html#filtering-relevant-columns",
    "href": "Take-home_Exs/Ex1/Take-home_Ex1.html#filtering-relevant-columns",
    "title": "Take-home Exercise 1: Singapore Private Residential Property Market for 2024 Q1",
    "section": "3.3 Filtering relevant columns",
    "text": "3.3 Filtering relevant columns\nAfter adding the QUARTER and TXN_ID columns, there are now 23 variables in the dataframe. However, not all of them are relevant to answer the questions we are asking. The table below summarizes the columns and whether we will keep them or not.\n\nColumns RetainedColumns DroppedFilter code\n\n\n\n\n\n\n\n\n\n\nColumn Name\nDescription\nReason\n\n\n\n\nTXN_ID\nIdentifier for the transaction\nIt is an identifier\n\n\nQUARTER\nQuarter when the property was sold\nCore data for aggregation\n\n\nPROJECT_NAME\nName of the project\nCan be used to pinpoint popular projects\n\n\nTRANSACTED_PRICE\nTransaction price (SGD)\nUseful for deriving insights\n\n\nAREA_SQFT\nArea of the property in sqft\nUseful for deriving insights\n\n\nUNIT_PRICE_PSF\nPrice per sqft\nUseful for price analysis\n\n\nTYPE_OF_SALE\nOne of New Sale, Resale, Subsale\nImportant submarket information\n\n\nTYPE_OF_AREA\nOne of Landed, Strata\nCan be used to partition data\n\n\nPROPERTY_TYPE\nType of Property, e.g. Apartment, Condominium, Executive Condominium, Terrace House, Semi-Detached House, Detached House\nCan be used to partition data\n\n\nNUMBER_OF_UNITS\nNumber of units involved in the transaction\nCore data for analysis\n\n\nPOSTAL_DISTRICT\nDistrict where the property is located\nCan be used to partition data\n\n\nTENURE\nCan be Freehold or Leasehold\nCan be used to partition data\n\n\n\n\n\n\n\n\nColumn Name\nDescription\nReason\n\n\n\n\nSALE_DATE\nDate when the sale was made\nWe will aggregate by quarter, no need to know the specific dates.\n\n\nADDRESS\nProperty Address\nWill use PROJECT_NAME if needed to pinpoint projects\n\n\nAREA_SQM\nPrice per sqm\nAREA_SFT is adequate\n\n\nUNIT_PRICE_PSM\nPrice per sqm\nUNIT_PRICE_PSF is adequate\n\n\nNETT_PRICE\n\nColumn is blank\n\n\nCOMPLETION_DATE\nWhen the property was completed. Some properties are Uncompleted as they will be turned over for the future\nOther attributes (e.g. TYPE_OF_SALE, PROPERTY_TYPE) are more important for checking submarket trends\n\n\nPURCHASER_ADDRESS_INDICATOR\nType of residence of the purchaser\nNo interest in buyer’s current address\n\n\nPOSTAL_CODE\nPostal code of the property\nWill use POSTAL_DISTRICT for location\n\n\nPOSTAL_SECTOR\nSector where the property is located\nWill use POSTAL_DISTRICT for location\n\n\nPLANNING_REGION\nRegion where the property is located\nWill use POSTAL_DISTRICT for location\n\n\nPLANNING_AREA\nArea where the property is located\nWill use POSTAL_DISTRICT for location\n\n\n\n\n\nWe will now use select() to keep only the relevant columns. We will define the function below for filtering the relevant columns. This will also rearrange the columns based on the order in the function call.\n\nrealis &lt;-\n  realis %&gt;% select(\n    c(\n      TXN_ID,\n      QUARTER,\n      PROJECT_NAME,\n      TRANSACTED_PRICE,\n      AREA_SQFT,\n      UNIT_PRICE_PSF,\n      TYPE_OF_SALE,\n      TYPE_OF_AREA,\n      PROPERTY_TYPE,\n      NUMBER_OF_UNITS,\n      POSTAL_DISTRICT,\n      TENURE\n    )\n  )\nglimpse(realis)\n\nRows: 26,806\nColumns: 12\n$ TXN_ID           &lt;chr&gt; \"TXN00001\", \"TXN00002\", \"TXN00003\", \"TXN00004\", \"TXN0…\n$ QUARTER          &lt;chr&gt; \"2023Q1\", \"2023Q1\", \"2023Q1\", \"2023Q1\", \"2023Q1\", \"20…\n$ PROJECT_NAME     &lt;chr&gt; \"THE REEF AT KING'S DOCK\", \"URBAN TREASURES\", \"NORTH …\n$ TRANSACTED_PRICE &lt;dbl&gt; 2317000, 1823500, 1421112, 1258112, 1280000, 5870000,…\n$ AREA_SQFT        &lt;dbl&gt; 882.65, 882.65, 1076.40, 1033.34, 871.88, 3322.85, 45…\n$ UNIT_PRICE_PSF   &lt;dbl&gt; 2625, 2066, 1320, 1218, 1468, 1767, 1095, 2096, 1926,…\n$ TYPE_OF_SALE     &lt;chr&gt; \"New Sale\", \"New Sale\", \"New Sale\", \"New Sale\", \"Resa…\n$ TYPE_OF_AREA     &lt;chr&gt; \"Strata\", \"Strata\", \"Strata\", \"Strata\", \"Strata\", \"La…\n$ PROPERTY_TYPE    &lt;chr&gt; \"Condominium\", \"Condominium\", \"Executive Condominium\"…\n$ NUMBER_OF_UNITS  &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ POSTAL_DISTRICT  &lt;chr&gt; \"04\", \"14\", \"27\", \"27\", \"28\", \"19\", \"10\", \"15\", \"05\",…\n$ TENURE           &lt;chr&gt; \"99 yrs from 12/01/2021\", \"Freehold\", \"99 yrs from 15…\n\n\n\n\n\nAfter this initial cleanup, we are left with 12 variables relevant to our exploration.\n\n\n\n\n\n\nSave point\n\n\n\n\n\nLet us save realis so we do not need to rerun the steps above.\n\nwrite_rds(realis, \"data/rds/realis_cleaned.rds\")\n\n\n\n\n\n\n\n\n\n\nData clear point\n\n\n\n\n\nWe do not need the realis_202*q* dataframes anymore so we can remove them from the RStudio environment.\n\nrm(realis_2023q1)\nrm(realis_2023q2)\nrm(realis_2023q3)\nrm(realis_2023q4)\nrm(realis_2024q1)"
  },
  {
    "objectID": "Take-home_Exs/Ex1/Take-home_Ex1.html#closer-look-at-number_of_units",
    "href": "Take-home_Exs/Ex1/Take-home_Ex1.html#closer-look-at-number_of_units",
    "title": "Take-home Exercise 1: Singapore Private Residential Property Market for 2024 Q1",
    "section": "3.4 Closer look at NUMBER_OF_UNITS",
    "text": "3.4 Closer look at NUMBER_OF_UNITS\n\n\n\n\n\n\nLoad point\n\n\n\n\n\nWe can continue running the document from this point by loading the following prepared data.\n\nrealis &lt;- read_rds(\"data/rds/realis_cleaned.rds\")\n\n\n\n\nTaking a closer look at NUMBER_OF_UNITS columns reveals that 12 out of 26,806 transactions involve multiple units.\n\nrealis[order(-realis$NUMBER_OF_UNITS),] %&gt;% filter(NUMBER_OF_UNITS &gt; 1) %&gt;% kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTXN_ID\nQUARTER\nPROJECT_NAME\nTRANSACTED_PRICE\nAREA_SQFT\nUNIT_PRICE_PSF\nTYPE_OF_SALE\nTYPE_OF_AREA\nPROPERTY_TYPE\nNUMBER_OF_UNITS\nPOSTAL_DISTRICT\nTENURE\n\n\n\n\nTXN01567\n2023Q1\nMEYER PARK\n392180000\n144883.44\n2707\nResale\nStrata\nCondominium\n60\n15\nFreehold\n\n\nTXN00083\n2023Q1\nBAGNALL COURT\n115280000\n68491.33\n1683\nResale\nStrata\nCondominium\n43\n16\nFreehold\n\n\nTXN08370\n2023Q2\nKEW LODGE\n66800000\n25177.00\n2653\nResale\nStrata\nTerrace House\n11\n11\nFreehold\n\n\nTXN17572\n2023Q4\nKARTAR APARTMENTS\n18000000\n6964.31\n2585\nResale\nStrata\nApartment\n7\n11\nFreehold\n\n\nTXN00861\n2023Q1\nMONDO MANSION BUILDING\n6280000\n5489.64\n1144\nResale\nStrata\nApartment\n4\n19\nFreehold\n\n\nTXN10593\n2023Q2\nN.A.\n10600000\n6746.88\n1571\nResale\nStrata\nApartment\n4\n15\nFreehold\n\n\nTXN04100\n2023Q1\nN.A.\n61080008\n32148.84\n1900\nResale\nLand\nDetached House\n3\n11\nFreehold\n\n\nTXN06865\n2023Q2\nN.A.\n32200000\n14123.44\n2280\nResale\nLand\nDetached House\n2\n11\nFreehold\n\n\nTXN10316\n2023Q2\nN.A.\n6150000\n4342.20\n1416\nResale\nLand\nSemi-Detached House\n2\n19\nFreehold\n\n\nTXN12792\n2023Q3\nEAST VIEW GARDEN\n6100000\n8337.79\n732\nResale\nLand\nSemi-Detached House\n2\n16\nFreehold\n\n\nTXN13376\n2023Q3\nN.A.\n8000000\n3658.68\n2187\nResale\nLand\nSemi-Detached House\n2\n14\nFreehold\n\n\nTXN24770\n2024Q1\nCLAYMORE PLAZA\n7000000\n4208.72\n1663\nResale\nStrata\nApartment\n2\n09\nFreehold\n\n\n\n\n\nFurthermore, the TRANSACTED_PRICE for such transactions are hundred million dollar transactions, which can skew the data if we are looking at TRANSACTED_PRICE with the assumption that it is the price per unit.\nFor example TXN01567, is worth $392,180,000, which is much higher that the price of individual units"
  },
  {
    "objectID": "Take-home_Exs/Ex1/Take-home_Ex1.html#handling-the-bulk-transactions",
    "href": "Take-home_Exs/Ex1/Take-home_Ex1.html#handling-the-bulk-transactions",
    "title": "Take-home Exercise 1: Singapore Private Residential Property Market for 2024 Q1",
    "section": "3.5 Handling the bulk transactions",
    "text": "3.5 Handling the bulk transactions\nTo address the 12 bulk transactions in our dataframe, we have 2 possible options:\n\nOption 1: Remove these transactions as these correspond to 0.045% of transactions (EASY)\nOption 2: Create rows for each unit in the transaction (HARD)\n\nAlthough Option 2 is more difficult, it is the better approach as all the transactions are Resale transactions. Simply removing them may remove very important data for the resale submarket.\nFor this solution, we need to do the following:\n\nRepeat all rows by NUMBER_OF_UNITS times.\nSet transacted price to the average price: \\({TRANSACTED\\_PRICE}\\div{NUMBER\\_OF\\_UNITS}\\).\nSet the area (sqft) to the average area: \\({AREA\\_SQFT}\\div{NUMBER\\_OF\\_UNITS}\\).\nSet NUMBER_OF_UNITS to 1.\n\n\nRepeating rowsSetting column values\n\n\nReference: Stackoverflow\n\n\n\n\n\n\nFunctions used\n\n\n\nrep() - to repeat a dataframe\nseq_len(nrow()) - to iterate to each row of the dataframe\n\n\n\nsales_txns &lt;- realis[rep(seq_len(nrow(realis)), realis$NUMBER_OF_UNITS),]\n\nLets’ check if the number of rows correspond to the total number of units sold.\n\nnrow(sales_txns) == sum(realis$NUMBER_OF_UNITS)\n\n[1] TRUE\n\n\n\n\nWe will perform the changes to NUMBER_OF_UNITS, TRANSACTED_PRICE, AREA_SQFT in 1 code chunk so that rerunning the code chunk is idempotent and won’t mutate the variable further\n\nsales_txns &lt;- sales_txns %&gt;%\n  filter(NUMBER_OF_UNITS &gt; 1) %&gt;%\n  mutate(TRANSACTED_PRICE = round(TRANSACTED_PRICE / NUMBER_OF_UNITS, 0)) %&gt;%\n  mutate(AREA_SQFT = round(AREA_SQFT / NUMBER_OF_UNITS, 0)) %&gt;%\n  mutate(NUMBER_OF_UNITS = 1) %&gt;%\n  rbind(sales_txns %&gt;% # Reconnect to the rest of the dataframe\n              filter(NUMBER_OF_UNITS == 1))\n\n\n\n\nLet us verify the result of the transformation.\n\nBeforeAfter\n\n\n\nrealis %&gt;%\n  filter(TXN_ID %in% c(\n    \"TXN00001\", \"TXN00002\", # Single-unit transactions\n    \"TXN10593\", \"TXN13376\" # Bulk transactions\n    )) %&gt;% kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTXN_ID\nQUARTER\nPROJECT_NAME\nTRANSACTED_PRICE\nAREA_SQFT\nUNIT_PRICE_PSF\nTYPE_OF_SALE\nTYPE_OF_AREA\nPROPERTY_TYPE\nNUMBER_OF_UNITS\nPOSTAL_DISTRICT\nTENURE\n\n\n\n\nTXN00001\n2023Q1\nTHE REEF AT KING’S DOCK\n2317000\n882.65\n2625\nNew Sale\nStrata\nCondominium\n1\n04\n99 yrs from 12/01/2021\n\n\nTXN00002\n2023Q1\nURBAN TREASURES\n1823500\n882.65\n2066\nNew Sale\nStrata\nCondominium\n1\n14\nFreehold\n\n\nTXN10593\n2023Q2\nN.A.\n10600000\n6746.88\n1571\nResale\nStrata\nApartment\n4\n15\nFreehold\n\n\nTXN13376\n2023Q3\nN.A.\n8000000\n3658.68\n2187\nResale\nLand\nSemi-Detached House\n2\n14\nFreehold\n\n\n\n\n\n\n\n\nsales_txns %&gt;%\n  filter(TXN_ID %in% c(\n    \"TXN00001\", \"TXN00002\", # Single-unit transactions\n    \"TXN10593\", \"TXN13376\" # Bulk transactions\n    )) %&gt;% kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTXN_ID\nQUARTER\nPROJECT_NAME\nTRANSACTED_PRICE\nAREA_SQFT\nUNIT_PRICE_PSF\nTYPE_OF_SALE\nTYPE_OF_AREA\nPROPERTY_TYPE\nNUMBER_OF_UNITS\nPOSTAL_DISTRICT\nTENURE\n\n\n\n\nTXN10593\n2023Q2\nN.A.\n2650000\n1687.00\n1571\nResale\nStrata\nApartment\n1\n15\nFreehold\n\n\nTXN10593\n2023Q2\nN.A.\n2650000\n1687.00\n1571\nResale\nStrata\nApartment\n1\n15\nFreehold\n\n\nTXN10593\n2023Q2\nN.A.\n2650000\n1687.00\n1571\nResale\nStrata\nApartment\n1\n15\nFreehold\n\n\nTXN10593\n2023Q2\nN.A.\n2650000\n1687.00\n1571\nResale\nStrata\nApartment\n1\n15\nFreehold\n\n\nTXN13376\n2023Q3\nN.A.\n4000000\n1829.00\n2187\nResale\nLand\nSemi-Detached House\n1\n14\nFreehold\n\n\nTXN13376\n2023Q3\nN.A.\n4000000\n1829.00\n2187\nResale\nLand\nSemi-Detached House\n1\n14\nFreehold\n\n\nTXN00001\n2023Q1\nTHE REEF AT KING’S DOCK\n2317000\n882.65\n2625\nNew Sale\nStrata\nCondominium\n1\n04\n99 yrs from 12/01/2021\n\n\nTXN00002\n2023Q1\nURBAN TREASURES\n1823500\n882.65\n2066\nNew Sale\nStrata\nCondominium\n1\n14\nFreehold\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSave point\n\n\n\n\n\nLet us save sales_txns so we do not need to rerun the steps above.\n\nwrite_rds(sales_txns, \"data/rds/sales_txns.rds\")\n\n\n\n\n\n\n\n\n\n\nData clear point\n\n\n\n\n\nWe will use sales_txns from now on so we can remove realis from the environment.\n\nrm(realis)"
  },
  {
    "objectID": "Take-home_Exs/Ex1/Take-home_Ex1.html#defining-the-audience-and-purpose-of-the-visualizations",
    "href": "Take-home_Exs/Ex1/Take-home_Ex1.html#defining-the-audience-and-purpose-of-the-visualizations",
    "title": "Take-home Exercise 1: Singapore Private Residential Property Market for 2024 Q1",
    "section": "4.1 Defining the audience and purpose of the visualizations",
    "text": "4.1 Defining the audience and purpose of the visualizations\n\n4.1.1 Considerations\nIt is important to note that it is quite challenging to present all data available with just 3 visualizations. We cannot cover all ground and visualize the data from all perspectives, and some blind spots and biases are bound occur in the process.\nWith this in mind, it is important that we define the audience and purpose of the visualizations.\nThe audience is a prospective private property buyer that needs help answering these questions in making decisions on buying property:\n\nShould I buy a new property or a resale property?\nShould I buy a condo, apartment, or is it worth it to save more for a landed property?\nWhich districts should I consider when buying a property?\nDo I get a bargain compared to buying a property last year?\n\nTo answer the questions above, we will focus on exploring and visualizing the distribution among the different markets (New Sale, Resale, Sub Sale).\nThe points of interest are:\n\nPrices (unit and total)\nDistribution across different markets\nDistribution by property type\n\n\n\n\n\n\n\nRisks when selecting data to present\n\n\n\nAs we have limited space to present data (within 2-3 visualizations), we cannot include all the data available to us.\nWith this, some perspectives may be missed and we will not be able to dive deep enough all aspects of the data.\n\n\n\n\n4.1.2 Unit Price vs Transacted Price\nGiven AREA_SQFT and UNIT_PRICE_PSF, it is intuitive to expect that: \\[AREA\\_SQFT \\times UNIT\\_PRICE\\_PSF = TRANSACTED\\_PRICE\\]\nHowever, there are only 7 out of 26,936 transactions for which this is true.\n\nsales_txns %&gt;% filter(TRANSACTED_PRICE == AREA_SQFT * UNIT_PRICE_PSF) %&gt;% nrow()\n\n[1] 7\n\n\nThis is because the final transacted price depends on other factors like size of property, floor height, where the property is facing, etc. Most of these factors are not reflected in the dataset we have.\nHence, to have a fairer comparison with what we have, we will use UNIT_PRICE_PSF for price comparisons.\n\n\n4.1.3 Compare all quarters or two quarters\nIn answering the questions we define (and based on the specifications of the exercise), the data partition for the visualization is by TYPE_OF_SALE as we want to look for trends from the different submarkets.\nWe current have 5 quarters in our dataset, 3 submarkets. This means 15 facets, which may be too much for division for visualization. It is also difficult to see at a glance when information we are trying to communicate if there are many very small graphs.\nIn addition, if we want to dive even deeper by PROPERTY_TYPE, which has 6 possible values, that is 90 data subsets we need to present.\nHence to simplify the visualization, we will choose only the 2023Q1 and 2024Q1, which should suffice for our purpose of comparing the state of the market to last year’s as we are comparing the same time of the year.\nHence, we will produce the data frames to contain these data.\n\nsales_txns_q1_2324 &lt;- sales_txns %&gt;% filter(QUARTER %in% c(\"2023Q1\", \"2024Q1\"))\nsales_txns_q1_23 &lt;- sales_txns_q1_2324 %&gt;% filter(QUARTER == \"2023Q1\")\nsales_txns_q1_24 &lt;- sales_txns_q1_2324 %&gt;% filter(QUARTER == \"2024Q1\")"
  },
  {
    "objectID": "Take-home_Exs/Ex1/Take-home_Ex1.html#visualization-1-2023q1-and-2024q1-prices",
    "href": "Take-home_Exs/Ex1/Take-home_Ex1.html#visualization-1-2023q1-and-2024q1-prices",
    "title": "Take-home Exercise 1: Singapore Private Residential Property Market for 2024 Q1",
    "section": "4.2 Visualization 1: 2023Q1 and 2024Q1 prices",
    "text": "4.2 Visualization 1: 2023Q1 and 2024Q1 prices\nFirst we will compare the prices between the First Quarter of 2023 and 2024. This is to compare the prices at the same time of the year.\nFor this visualization, we will use the Unit Price per Sqft (UNIT_PRICE_PSF) instead of the Transaction Price (TRANSACTED_PRICE). This is so we can more fairly compare prices with less variables involved. With Transaction Price, the size of the property needs to be considered.\nWe will use the TYPE_OF_SALE column to partition the data so we can compare the trends across the Resale, New Sale and Sub Sale markets.\n\n4.2.1 Creating the base Visualization\nFor the visualization, we will use a Raincloud Plot so that we can see the patterns in the price trends, and whether there are clusters of interest within the data set.\nWe will also add a boxplot to accompany the half-density plot so that we can see the quantiles more clearly.\nTo compare the different quarters, we will use both left side and right side visualization to compare the quarters side by side. This is inspired by a senior’s work.\nTo visualize the volumes, the 2 options are using stat_dots() or geom_jitter().\n\nRaincloud Plot w/ volume plot (chosen)Raincloud Plot w/ jitter plot (alternative)\n\n\n\n\nShow ggplot2 code\nplot_q1_yoy_psf_price &lt;- function() {\n  ggplot(\n    sales_txns_q1_2324,\n    aes(\n      x = QUARTER,\n      y = UNIT_PRICE_PSF,\n      fill = QUARTER,\n      color = QUARTER\n    )\n  ) +\n    \n    # Generate half-density plot\n    stat_halfeye(\n      aes(\n        justification = ifelse(QUARTER == \"2023Q1\", 1.20, 0.02),\n        side = ifelse(QUARTER == \"2023Q1\", \"left\", \"right\")\n      ),\n      position = position_nudge(x = 0.1, y = 0),\n      .width = 0,\n      alpha = 0.8,\n      point_color = NA,\n      show.legend = FALSE\n    ) +\n    \n    # Generate boxplot along edge of half-density plot\n    geom_boxplot(\n      outlier.shape = NA,\n      alpha = 0.8,\n      width = .1,\n      color = \"black\",\n      show.legend = FALSE\n    ) +\n    \n    # Generate volume plots, adjusting sizing so as to not overflow into the other half\n    stat_dots(\n      aes(\n        side = ifelse(QUARTER == \"2024Q1\", \"left\", \"right\"),\n        justification = ifelse(QUARTER == \"2024Q1\", 1.10,-0.1)\n      ),\n      binwidth = 100,\n      dotsize = 0.005,\n      alpha = 0.2,\n      show.legend = FALSE\n    ) +\n    \n    # Add text about the median price\n    stat_summary(\n      aes(label = paste0(\"S$\", after_stat(y))),\n      geom = \"text\",\n      fun = \"median\",\n      position = position_nudge(y = 2500),\n      family = \"Roboto Condensed\",\n      size = 3,\n      show.legend = FALSE\n    ) +\n    \n    # Set colors and fill\n    # Keep it simple, and use bright color for 20424Q1 it is the focus of visualization\n    scale_color_manual(values = c(\"grey45\", \"blue\")) +\n    scale_fill_manual(values = c(\"grey45\", \"blue\")) +\n    labs(y = \"Unit Price Per Sqft ($)\") +\n    # Next steps will take care of theme enhancements\n    theme_minimal()\n}\n\nplot_q1_yoy_psf_price()\n\n\n\n\n\n\n\n\n\nShow ggplot2 code\nplot_q1_yoy_psf_price_alt &lt;- function() {\n  ggplot(\n    sales_txns_q1_2324,\n    aes(\n      x = QUARTER,\n      y = UNIT_PRICE_PSF,\n      fill = QUARTER,\n      color = QUARTER\n    )\n  ) +\n    \n    # Generate half-density plot\n    stat_halfeye(\n      aes(\n        fill = QUARTER,\n        justification = ifelse(QUARTER == \"2023Q1\", 1.22, 0),\n        side = ifelse(QUARTER == \"2023Q1\", \"left\", \"right\")\n      ),\n      position = position_nudge(x = 0.1, y = 0),\n      .width = 0,\n      alpha = 0.8,\n      point_color = NA,\n      show.legend = FALSE\n    ) +\n    \n    # Generate jitter plot under the geom plot so the dots don't overpower the boxplot\n    geom_jitter(\n      width = 0.08,\n      size = 0.01,\n      alpha = 0.2,\n      show.legend = FALSE\n    ) +\n    \n    # Generate boxplot along edge of half-density plot\n    geom_boxplot(\n      outlier.shape = NA,\n      alpha = 0,\n      width = 0.1,\n      color = \"black\",\n      show.legend = FALSE\n    ) +\n    \n    # Add text about the median price\n    stat_summary(\n      aes(label = paste0(\"S$\", after_stat(y))),\n      geom = \"text\",\n      fun = \"median\",\n      position = position_nudge(y = 2500),\n      family = \"Roboto Condensed\",\n      size = 3,\n      show.legend = FALSE\n    )+\n    \n    # Set colors and fill\n    # Keep it simple, and use bright color for 20424Q1 it is the focus of visualization\n    scale_fill_manual(values = c(\"grey50\", \"blue\")) +\n    scale_color_manual(values = c(\"grey50\", \"blue\")) +\n    labs(y = \"Unit Price Per Sqft ($)\") +\n    # Next steps will take care of theme enhancements\n    theme_minimal()\n}\n\nplot_q1_yoy_psf_price_alt()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDecision: stat_dots()\n\n\n\nUsing stat_dots() is better than geom_jitter() as the purpose of providing volume information here is to accompany the half-density plot and provide a tool to compare the volume of each submarket.\nComparing the length of each horizontal line is much easier to do than comparing how dark each area is in a jitter plot.\n\n\nNow that we have the base visualization, we will generate the final visualization.\n\n\n4.2.2 Adding the % change\nWhen generating the facet name, we also can add the % change so that it is clear for the audience how much the prices change.\nWe will use the following function to render the % change, which will show as +x.x% when there is an increase, and -x.x% when there is a decrease.\n\nshow_price_pc_change &lt;- function(market = \"1\") {\n  data2023 = sales_txns_q1_23\n  data2024 = sales_txns_q1_24\n  \n  # 1 is the facet name for All markets\n  if (market != \"1\") {\n    data2023 = data2023 %&gt;% filter(TYPE_OF_SALE == market)\n    data2024 = data2024 %&gt;% filter(TYPE_OF_SALE == market)\n  } else {\n    market = \"All Markets\"\n  }\n  \n  median2023 = data2023$UNIT_PRICE_PSF %&gt;% median()\n  median2024 = data2024$UNIT_PRICE_PSF %&gt;% median()\n  \n  sprintf(\n    \"%s (&lt;span style='color:%s;'&gt;**%s%0.1f%%**&lt;/span&gt;)\",\n    market,\n    ifelse(median2024 &lt; median2023, \"brown\", \"darkgreen\"),\n    ifelse(median2024 &lt; median2023, \"-\", \"+\"),\n    (median2024 - median2023) * 100 / median2023\n  )\n}\n\n\n\n4.2.3 Generating the visualization\nWe want to compare the 2023 and 2024 Q1 sales for different submarkets. To do this, we will use facet_wrap() on TYPE_OF_SALE.\nIn addition, we will add another facet for All Markets for the overall comparison.\nThese 2 plots will be shown side by side using patchwork.\n\n\n\n\n\n\nfacet_grid(margin = TRUE) as alternative\n\n\n\n\n\nWe can also use facet_grid(margin = TRUE) to generate a facet with all the data, instead of generating 2 separate plots.\nHowever, I would like to change the panel color for the overall plot to highlight it but I couldn’t find a way to do it within facet_grid().\n\n\n\n\n\nShow ggplot2 code\nq1_yoy_psf_price_submarkets_graph &lt;- plot_q1_yoy_psf_price() +\n  facet_wrap( ~ TYPE_OF_SALE,\n              strip.position = \"bottom\",\n              labeller = labeller(\n                TYPE_OF_SALE = c(\n                  \"New Sale\" = show_price_pc_change(\"New Sale\"),\n                  \"Sub Sale\" = show_price_pc_change(\"Sub Sale\"),\n                  \"Resale\" = show_price_pc_change(\"Resale\")\n                )\n              )) +\n  theme_minimal() +\n  theme(axis.title.y = element_blank(),\n        axis.text.y = element_blank())\n\nq1_yoy_psf_price_all_markets_graph &lt;- plot_q1_yoy_psf_price() +\n  facet_wrap(\n    ~ NUMBER_OF_UNITS,\n    strip.position = \"bottom\",\n    labeller = as_labeller(show_price_pc_change)\n  ) +\n  labs(x = \"Transaction Price (,000 SGD)\") +\n  theme(panel.background = element_rect(fill = \"aliceblue\", linewidth =\n                                          0))\n\n# As much as we want the plot annotations to be dynamic, the subtitle is depending on the actual data\n# Only this part is hardcoded\nviz1 &lt;- (q1_yoy_psf_price_all_markets_graph |\n           q1_yoy_psf_price_submarkets_graph) +\n  plot_layout(widths = c(1, 3)) +\n  plot_annotation(title = \"Singapore Private Property Prices by Sales Market\",\n                  subtitle = \"Overall prices slightly increased by &lt;span style='color:darkgreen;'&gt;**1.2%**&lt;/span&gt; but the New Sales market experienced &lt;span style='color:brown;'&gt;**7.6%**&lt;/span&gt; decrease.\") &\n  theme(\n    text = element_text(family = \"Roboto Condensed\"),\n    axis.line.x = element_line(),\n    axis.title.x = element_blank(),\n    axis.ticks.y = element_blank(),\n    plot.title = element_text(face = \"bold\"),\n    plot.subtitle = element_markdown(color = \"grey50\", size = rel(0.9)),\n    strip.placement = \"outside\",\n    strip.text = element_markdown(size = rel(1))\n  )\nviz1\n\n\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\nWhile the market generally saw a slight increase in unit prices from Q1 2023, the New Sale market experienced a decline. Notable clusters in the graph suggest concentrated sales around specific price points, likely influenced by factors such as developer pricing and the location of New Launches. According to data from 99.co, there are fewer than 10 New Launches in 2024.\nNew Launched projects, particularly big ones, resulted in clusters on certain price points as they introduce fresh supply in the districts they are located in. The demand for these properties also contributed to the trend as transactions are completed by buyers.\n\nIn contrast, the Resale Market, which is comprised of properties already turned over by developers, shows a smoother distribution of prices. This is attributed to the wider variation in prices negotiated between buyers and sellers on available properties all over Singapore, which is not constrained by the parameters of specific projects.\n\n\nHowever, it is important to note that visualization can be very misleading especially on the New Sale Market. Generalizing that the trends when there are notable cluster may not be representative of the real state of the market.\nHence, we need to look more deeply into these groups and present it as a visualizations so it can be better understood why there are groups that formed."
  },
  {
    "objectID": "Take-home_Exs/Ex1/Take-home_Ex1.html#visualization-2-2023q1-and-2024q1-sales-volume",
    "href": "Take-home_Exs/Ex1/Take-home_Ex1.html#visualization-2-2023q1-and-2024q1-sales-volume",
    "title": "Take-home Exercise 1: Singapore Private Residential Property Market for 2024 Q1",
    "section": "4.3 Visualization 2: 2023Q1 and 2024Q1 Sales Volume",
    "text": "4.3 Visualization 2: 2023Q1 and 2024Q1 Sales Volume\n\n4.3.1 Understanding the groups in New Sales Market\nWe hypothesized that the groups that are present in the New Sales plot is due to the sales of newly-launched projects.\nWe will check the aggregated data by PROJECT_NAME and POSTAL_DISTRICT to verify our hypothesis that the sales are clustered by newly launched projects and their respective districts\n\nBy Project NameBy District\n\n\nWe will aggregate the number of sales and median unit price by projects. We will also add POSTAL_DISTRICT to the aggregation group as property prices depend on which district a property is in.\n\nsales_txns_q1_24 %&gt;% filter(TYPE_OF_SALE == \"New Sale\") %&gt;% \n  group_by(POSTAL_DISTRICT, PROJECT_NAME) %&gt;%\n  summarize(\n    MEDIAN_PRICE_PSF = median(UNIT_PRICE_PSF),\n    NUMBER_OF_SALES = n()\n  ) %&gt;%\n  arrange(desc(NUMBER_OF_SALES)) %&gt;%\n  head(10) %&gt;% kable(row.name = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\nPOSTAL_DISTRICT\nPROJECT_NAME\nMEDIAN_PRICE_PSF\nNUMBER_OF_SALES\n\n\n\n\n1\n26\nLENTOR MANSION\n2269.0\n409\n\n\n2\n23\nLUMINA GRAND\n1525.0\n370\n\n\n3\n23\nHILLHAVEN\n2067.0\n79\n\n\n4\n26\nLENTORIA\n2129.0\n60\n\n\n5\n23\nTHE BOTANY AT DAIRY FARM\n2019.0\n59\n\n\n6\n27\nNORTH GAIA\n1326.5\n54\n\n\n7\n12\nTHE ARCADY AT BOON KENG\n2573.5\n50\n\n\n8\n26\nLENTOR HILLS RESIDENCES\n2109.0\n49\n\n\n9\n26\nHILLOCK GREEN\n2169.0\n43\n\n\n10\n23\nTHE MYST\n2160.5\n42\n\n\n\n\n\nWe can see that 8 out of 10 projects with highest number of sales are in Districts 23 and 26. This is consistent with our previous observation that there are 2 groups in the New Sales density graph.\nFurthermore, in 99.co’s New Launches page, Lentor Mansion (D26) and Lumina Grand (D23) are the biggest projects with the highest number of units sold.\nHence, the density graph could reflected the groups that formed from the sales of properties within these 2 projects.\n\n\n\nsales_txns_q1_24 %&gt;% filter(TYPE_OF_SALE == \"New Sale\") %&gt;% \n  group_by(POSTAL_DISTRICT) %&gt;%\n  summarize(\n    MEDIAN_PRICE_PSF = median(UNIT_PRICE_PSF),\n    NUMBER_OF_SALES = n()\n  ) %&gt;%\n  arrange(desc(NUMBER_OF_SALES)) %&gt;%\n  kable(row.names = TRUE)\n\n\n\n\n\nPOSTAL_DISTRICT\nMEDIAN_PRICE_PSF\nNUMBER_OF_SALES\n\n\n\n\n1\n23\n1542.0\n576\n\n\n2\n26\n2253.0\n571\n\n\n3\n15\n2615.5\n72\n\n\n4\n21\n2453.0\n57\n\n\n5\n27\n1328.0\n56\n\n\n6\n12\n2573.0\n51\n\n\n7\n11\n3189.0\n40\n\n\n8\n10\n3307.0\n37\n\n\n9\n03\n2807.0\n31\n\n\n10\n05\n2607.5\n20\n\n\n11\n28\n2254.0\n20\n\n\n12\n16\n2091.0\n19\n\n\n13\n22\n2215.0\n17\n\n\n14\n09\n3437.5\n14\n\n\n15\n02\n2567.0\n13\n\n\n16\n07\n3234.0\n8\n\n\n17\n19\n1966.0\n7\n\n\n18\n14\n2168.0\n5\n\n\n19\n18\n1754.0\n3\n\n\n20\n04\n2548.5\n2\n\n\n21\n17\n1895.0\n2\n\n\n\n\n\nAlthough there are new units across all districts, the big, newly launched projects contributed the most to the New Sales Market.\nThis is hinted by the fact that after aggregating all property sales by district, D23 and D26 where Lumina Grand and Lentor Mansion stand out. More than 60% of sales from each of these district also come from these 2 projects.\n\n\n\nBased on the findings from this deep dive, we will visualize the sales volume by district.\n\n\n4.3.2. Creating the base visualization\nSome of the options we have to visualize the sales by district are:\n\nBar graph of number of sales for all districts, or\nBar graph of number of sales for most popular districts\n\n\nAll districtsMost popular districts (chosen)\n\n\n\nplot_q1_yoy_sale_vol &lt;- function() {\nggplot(\n  sales_txns_q1_2324,\n  aes(x = POSTAL_DISTRICT, fill = QUARTER)\n) +\n  geom_bar(position=\"dodge\", show.legend = FALSE) +\n  coord_flip() +\n  scale_fill_manual(values = c(\"grey45\", \"blue\")) +\n  theme_minimal()\n}\n\nplot_q1_yoy_sale_vol()\n\n\n\n\n\n\nThis visualization needs some pre-processing so we can determine the Top 5 most popular districts in each submarket.\n\npopular_districts &lt;- sales_txns_q1_2324 %&gt;% \n  group_by(QUARTER, POSTAL_DISTRICT, TYPE_OF_SALE) %&gt;%\n  summarize(\n    MEDIAN_PRICE_PSF = median(UNIT_PRICE_PSF),\n    NUMBER_OF_SALES = n()\n  ) %&gt;%\n  group_by(QUARTER, TYPE_OF_SALE) %&gt;%\n  arrange(desc(NUMBER_OF_SALES)) %&gt;%\n  mutate(RANK = order(NUMBER_OF_SALES, decreasing=TRUE)) %&gt;%\n  filter(RANK &lt;= 5) %&gt;%\n  select(c(QUARTER, TYPE_OF_SALE, RANK, POSTAL_DISTRICT, NUMBER_OF_SALES, MEDIAN_PRICE_PSF)) %&gt;%\n  arrange(QUARTER)\n\nkable(popular_districts, row.names = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nQUARTER\nTYPE_OF_SALE\nRANK\nPOSTAL_DISTRICT\nNUMBER_OF_SALES\nMEDIAN_PRICE_PSF\n\n\n\n\n1\n2023Q1\nResale\n1\n19\n401\n1337.0\n\n\n2\n2023Q1\nResale\n2\n15\n260\n1830.0\n\n\n3\n2023Q1\nResale\n3\n10\n251\n2162.0\n\n\n4\n2023Q1\nResale\n4\n16\n210\n1410.5\n\n\n5\n2023Q1\nResale\n5\n23\n208\n1258.5\n\n\n6\n2023Q1\nNew Sale\n1\n10\n202\n2942.5\n\n\n7\n2023Q1\nNew Sale\n2\n23\n178\n2071.5\n\n\n8\n2023Q1\nNew Sale\n3\n18\n168\n1390.0\n\n\n9\n2023Q1\nNew Sale\n4\n16\n165\n2084.0\n\n\n10\n2023Q1\nNew Sale\n5\n09\n150\n2846.0\n\n\n11\n2023Q1\nSub Sale\n1\n19\n54\n1635.5\n\n\n12\n2023Q1\nSub Sale\n2\n14\n34\n2096.5\n\n\n13\n2023Q1\nSub Sale\n3\n13\n27\n1913.0\n\n\n14\n2023Q1\nSub Sale\n4\n18\n24\n1598.0\n\n\n15\n2023Q1\nSub Sale\n5\n05\n19\n1912.0\n\n\n16\n2024Q1\nNew Sale\n1\n23\n576\n1542.0\n\n\n17\n2024Q1\nNew Sale\n2\n26\n571\n2253.0\n\n\n18\n2024Q1\nResale\n1\n19\n429\n1448.0\n\n\n19\n2024Q1\nResale\n2\n15\n243\n1719.0\n\n\n20\n2024Q1\nResale\n3\n10\n236\n2171.5\n\n\n21\n2024Q1\nResale\n4\n23\n209\n1361.0\n\n\n22\n2024Q1\nResale\n5\n18\n182\n1350.0\n\n\n23\n2024Q1\nSub Sale\n1\n19\n94\n1771.5\n\n\n24\n2024Q1\nNew Sale\n3\n15\n72\n2615.5\n\n\n25\n2024Q1\nNew Sale\n4\n21\n57\n2453.0\n\n\n26\n2024Q1\nNew Sale\n5\n27\n56\n1328.0\n\n\n27\n2024Q1\nSub Sale\n2\n05\n53\n2061.0\n\n\n28\n2024Q1\nSub Sale\n3\n18\n49\n1694.0\n\n\n29\n2024Q1\nSub Sale\n4\n13\n20\n2044.0\n\n\n30\n2024Q1\nSub Sale\n5\n14\n14\n2051.5\n\n\n\n\n\nNow that we have this aggregated dataset, we can use this to plot the ranked data. For example, we can plot the most popular districts in the New Sales Market.\n\nggplot(popular_districts %&gt;% filter(TYPE_OF_SALE ==\"New Sale\"),\n       aes(x = reorder(RANK, -RANK), y = NUMBER_OF_SALES, fill = QUARTER))+\n  geom_bar(stat=\"identity\", position = \"dodge\", show.legend = FALSE, alpha =0.8) +\n  geom_text(aes(y = 10, hjust=0, label=paste0(\"D\", POSTAL_DISTRICT, \": \", NUMBER_OF_SALES))) +\n  coord_flip(ylim= c(0, 600)) +\n  scale_fill_manual(values = c(\"grey45\", \"blue\")) +\n  facet_wrap(~QUARTER)\n\n\n\n\nWith this visualization, we can compare the top districts from 2 quarters side by side.\n\n\n\nFrom the 2 options, plotting the Most Popular Districts is more appropriate for our use case. This is because we would like the user to recognize which districts are driving the price trends.\nWhen we plot all the districts, it is more difficult to identify by sight which districts are popular in a quarter and the other. This is because this plot has a lot of noise, which may not be that relevant to connect to the previous visualization.\n\n\n4.3.3 Generating the visualization\nWe will generate the visualization such that QUARTER is in column and TYPE_OF_SALE is in rows.\nWe will using facet_grid() to generate the visualization and adjust the theme elements as needed to make the plot more presentable.\n\n\nShow ggplot2 code\nviz2 &lt;- ggplot(popular_districts,\n       aes(\n         # Order the axis elements by rank\n         x = reorder(RANK,-RANK),\n         y = NUMBER_OF_SALES,\n         fill = QUARTER\n       )) +\n  \n  # Generate bar graph based on number of sales\n  geom_bar(\n    stat = \"identity\",\n    position = \"dodge\",\n    show.legend = FALSE,\n    alpha = 0.8\n  ) +\n  \n  # Add descriptive label\n  geom_text(aes(\n    y = 10,\n    hjust = 0,\n    label = sprintf(\n      \"D%s: %d units sold at S$%0.2f psf\",\n      POSTAL_DISTRICT,\n      NUMBER_OF_SALES,\n      MEDIAN_PRICE_PSF\n    )\n  ), family = \"Roboto Condensed\") +\n  \n  # Generate horizontal bar\n  coord_flip(ylim = c(0, 600)) +\n  \n  # Set colors consistent with previous visualization\n  scale_fill_manual(values = c(\"grey45\", \"blue\")) +\n  \n  # Generate facets, with labels to the left and at the bottom\n  facet_grid(TYPE_OF_SALE ~ QUARTER, switch = \"both\") +\n  \n  # Set plot texts\n  plot_annotation(title = \"Districts With Highest Units Sold for Each Submarket\",\n                  subtitle = \"New Sale Market is heavily influenced by the newly-launched projects in **D23** (Lumina Grand) and **D26** (Lentor Mansion).\",\n                  caption = \"Prices shown are **median unit price** per sqft\") &\n  # Set theme\n  theme_minimal() +\n  theme(\n    text = element_text(family = \"Roboto Condensed\"),\n    axis.line.x = element_line(),\n    axis.title.x = element_blank(),\n    axis.title.y = element_blank(),\n    axis.text.y = element_blank(),\n    plot.title = element_text(face = \"bold\"),\n    # Use element_markdown so we can style the text\n    plot.subtitle = element_markdown(color = \"grey50\", size = rel(0.9)),\n    plot.caption = element_markdown(color = \"grey50\"),\n    strip.placement = \"outside\",\n    strip.text = element_text(size = rel(1))\n  )\nviz2\n\n\n\n\n\n\n\n\n\n\n\nAbout the texts in the visualization\n\n\n\n\n\nTexts such as xx units sold at $xxxx.xx were added in the plot so the information is easily digestible.\nHowever, it made the plot messy, and not aesthetically pleasing. Ideally, the full text should be rendered when interacting with the graph. I do not know how to do that right now, but it will be how I will present this visualization in the future.\nGiven this limit in my present abilities, I prioritized clarity of information over aesthetic considerations.\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\nPlotting the most popular districts for each submarket reveals that the Top 5 districts in the New Sale market, differs for the 2 quarters.\nIn 2023Q1, the distribution is more balanced and there were a lot of units sold in expensive districts like Districts 9 and 10. However, In 2024Q1, the number of units sold were skewed towards cheaper districts like Districts 23 and 26 where big projects like Lumina Grand and Lentor Mansion, respectively, were launched.\nThis is why the overall prices in the New Sale market appear to be much cheaper than the previous year, when in fact the new projects that launched are in cheaper districts.\nOn the contrary, the top districts in the Resale and Sub Sale markets have much less difference. This smaller change also resulted in a smaller impact on the overall median price in these markets."
  },
  {
    "objectID": "Take-home_Exs/Ex1/Take-home_Ex1.html#visualization-3-2024-q1-market-by-property-type",
    "href": "Take-home_Exs/Ex1/Take-home_Ex1.html#visualization-3-2024-q1-market-by-property-type",
    "title": "Take-home Exercise 1: Singapore Private Residential Property Market for 2024 Q1",
    "section": "4.4 Visualization 3: 2024 Q1 Market by Property Type",
    "text": "4.4 Visualization 3: 2024 Q1 Market by Property Type\n\n4.4.1 Checking price trends by property type\nPrevious visualizations focused on comparisons between the Q1 of 2023 and 2024, and based on the different markets.\nFor the next visualization, we will first explore the data with 2024Q1, based on the property type.\nLet us group the data by TYPE_OF_SALE and PROPERTY_TYPE if we can gain new insights based on the size of property. We will get the aggregated median values for price and area columns.\n\nsales_txns_q1_24 %&gt;%\n  group_by(TYPE_OF_SALE, PROPERTY_TYPE) %&gt;%\n  summarize(\n    UNIT_PRICE_PSF = median(UNIT_PRICE_PSF),\n    TRANSACTED_PRICE = median(TRANSACTED_PRICE),\n    AREA_SQFT = median(AREA_SQFT),\n    UNITS_SOLD = n()\n  ) %&gt;% arrange(desc(UNITS_SOLD), .by_group = TRUE) %&gt;%\n  kable\n\n\n\n\n\n\n\n\n\n\n\n\nTYPE_OF_SALE\nPROPERTY_TYPE\nUNIT_PRICE_PSF\nTRANSACTED_PRICE\nAREA_SQFT\nUNITS_SOLD\n\n\n\n\nNew Sale\nApartment\n2277.0\n1908500\n796.540\n864\n\n\nNew Sale\nExecutive Condominium\n1516.0\n1515000\n995.670\n448\n\n\nNew Sale\nCondominium\n2204.0\n2083000\n990.290\n290\n\n\nNew Sale\nTerrace House\n2254.0\n3655000\n1614.600\n17\n\n\nNew Sale\nDetached House\n1790.0\n11690000\n6607.855\n2\n\n\nResale\nCondominium\n1580.5\n1660000\n1119.460\n1480\n\n\nResale\nApartment\n1718.5\n1460000\n893.410\n796\n\n\nResale\nExecutive Condominium\n1305.0\n1375000\n1076.400\n395\n\n\nResale\nTerrace House\n1751.0\n3750000\n2055.920\n197\n\n\nResale\nSemi-Detached House\n1665.0\n5642500\n3459.010\n92\n\n\nResale\nDetached House\n1503.0\n10940000\n7004.130\n38\n\n\nSub Sale\nApartment\n1914.0\n1473000\n721.190\n193\n\n\nSub Sale\nCondominium\n1772.5\n1525000\n742.720\n88\n\n\nSub Sale\nTerrace House\n1482.5\n3229000\n2195.855\n2\n\n\nSub Sale\nSemi-Detached House\n1171.0\n4750000\n4058.030\n1\n\n\n\n\n\nFrom this aggregated data, we can see that Executive Condominiums are relatively cheaper than Condominiums and Apartments, which are of similar area. From my research, Executive Condominiums are under HDB, but are built and sold by property developers. This is why it is much cheaper.\nWe can also notice that there are much lower sales for some property types, like Terrace House, Semi-Detached House, and Detached House. These are landed properties, which are quite rare in Singapore so it is logical to see much fewer sales of these properties.\n\n\n4.4.2 Creating base visualizations\nFrom the insights gained from our initial exploration, we observed that prices differ by property types and that there are less sales on some property prices.\n\nUnit PriceVolume\n\n\nFor the unit price, we will use boxplot instead of density plots as we can see the distribution for different markets. If we use density plots, it is harder to present partitioned data in an easy to understand way.\nLastly, we will generate some reference lines for statistics (mean and median).\n\n\nShow ggplot2 code\n# Calculate stats for reference lines\nmedian_q1 &lt;- median(sales_txns_q1_24$UNIT_PRICE_PSF)\nmean_q1 &lt;- mean(sales_txns_q1_24$UNIT_PRICE_PSF)\n\nunit_price_by_prop_type &lt;- ggplot(sales_txns_q1_24,\n                                  aes(x = PROPERTY_TYPE, y = UNIT_PRICE_PSF, fill = TYPE_OF_SALE)) +\n  \n  # Generate different boxplots for each market and property type\n  geom_boxplot(outliers = FALSE,\n               width = 0.4,\n               alpha = 0.8) +\n  \n  # Render median reference line\n  geom_hline(aes(yintercept = median_q1, color = \"Median\"),\n             linetype = \"dashed\",\n             alpha = 0.8) +\n  annotate(\n    geom = \"text\",\n    x = 6.6,\n    y = ifelse(median_q1 &lt; mean_q1, median_q1 - 200, median_q1 + 250),\n    label = paste0(\"Median =\\n$\", median_q1),\n    family = \"Roboto Condensed\",\n    color = \"brown\",\n    size = 3,\n    alpha = 0.8\n  ) +\n  \n  # Render mean reference line\n  geom_hline(aes(yintercept = mean_q1, color = \"Mean\"),\n             linetype = \"dashed\",\n             alpha = 0.8) +\n  annotate(\n    geom = \"text\",\n    x = 6.6,\n    y = ifelse(mean_q1 &lt; median_q1, mean_q1 - 200, mean_q1 + 250),\n    label = paste0(\"Mean =\\n$\", round(mean_q1, 0)),\n    family = \"Roboto Condensed\",\n    color = \"darkgreen\",\n    size = 3,\n    alpha = 0.8\n  ) +\n  \n  # Set labels\n  labs(x = \"Property Type\",\n       y = \"Unit Price Per Sqft ($)\",\n       fill = \"Market\",\n       color = \"Statistics\") +\n  \n  # Wrap long labels using `wrap_format()` from `scale` package\n  # Add some space to the right for Statistics annotations\n  scale_x_discrete(labels = wrap_format(10), expand = expansion(add = c(0.6, 1))) +\n  \n  # Set colors\n  scale_fill_manual(values = c(\"darkorange\", \"blue\", \"gold3\")) +\n  scale_color_manual(values = c(\"darkgreen\", \"brown\")) +\n  theme_minimal() +\n  theme(\n    # Remove axis text. Combining this with the price visualization will stack the 2 graphs\n    axis.text.x = element_blank()\n  )\n\nunit_price_by_prop_type\n\n\n\n\n\nWe can see from the graph that some box plots are very short, which is especially true for Landed properties as there are few units sold for these property types.\n\n\nAs companion to the unit price graph, we will also generate a simple bar graph for the volume.\n\n\nShow ggplot2 code\nsales_volume_by_prop_type &lt;-\n  ggplot(\n    sales_txns_q1_24,\n    aes(x = PROPERTY_TYPE, fill = TYPE_OF_SALE)\n  ) +\n  \n  # Generate stacked bar graph by TYPE_OF_SALE\n  # Do not show label as the price graph will show it\n  geom_bar(alpha = 0.8, width = 0.5, show.legend = FALSE) +\n  \n  # Generate labels for stacked bar areas\n  # Do not show label as the price graph will show it\n  # Use ggrepel as some areas in the bar graph are too small to render th text inside\n  geom_label_repel(\n    aes(label = after_stat(count)),\n    stat = \"count\",\n    position = \"stack\",\n    family = \"Roboto Condensed\",\n    size = 2.5,\n    alpha = 0.8,\n    color = \"white\",\n    show.legend = FALSE\n  ) +\n  \n  # Apply colors\n  scale_fill_manual(values = c(\"darkorange\", \"blue\", \"gold3\")) +\n  labs(y = \"Units Sold\") +\n  \n  # Wrap long titles\n  # Apply same \"expand\" so axes align\n  scale_x_discrete(labels = wrap_format(10), expand = expansion(add = c(0.6, 1))) +\n  \n  # Appply theme\n  theme_minimal() +\n  theme()\n\nsales_volume_by_prop_type\n\n\n\n\n\nThe volume graph provides additional information about sales by property type. Some property types with lower sales volume may show a longer boxplot, which may be interpreted as more units sold.\nWith this companion graph, it is easier to cross-reference the price with the volume to better judge how representative of the market the unit prices are.\n\n\n\n\n\n4.4.3 Generating the visualization\nFinally, we will generate the visualization by stacking the 2 graphs and doing final touches on the styling and texts.\n\n\nShow ggplot2 code\nviz3 &lt;- (unit_price_by_prop_type / sales_volume_by_prop_type ) +\n  plot_layout(heights = c(5,1)) +\n  plot_annotation(title = \"Singapore Private Property Sales by Property Type for 2024 Q1\",\n                  subtitle = \"**Executive Condiminiums** sold at the lowest unit prices, while **Apartments** and **Condominiums** sold at the highest unit prices.\") &\n  theme(\n    text = element_text(family = \"Roboto Condensed\"),\n    axis.title.x = element_blank(),\n    legend.position = \"top\",\n    legend.justification = \"left\",\n    legend.location = \"plot\",\n    plot.title = element_text(face = \"bold\"),\n    plot.subtitle = element_markdown(color = \"grey50\", size = rel(0.9)),\n  )\nviz3\n\n\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\nFrom our initial exploration, we have already established that Executive Condominiums are cheapest in terms of unit price.\nAnother surprising observation is that despite having more Executive Condominiums sold, its boxplot is notably shorter compared to Detached and Semi-Detached Houses, in both the New Sale and Resale Markets. This disparity may be attributed to HDB’s price regulation on Executive Condominiums, resulting in reduced price variability compared to other property types.\nIt can also be observed that there are much fewer sales in the New Sales market of landed properties. It could be due to the fact that compared to Strata developments, Landed properties are usually bespoke to their owner’s use. In addition to the fact that landed properties are rare in Singapore, is it expected to see less New Sales in this category.\nLastly, the mean is higher than the median price which means that the unit prices are skewed towards the higher end of the scale. What this means it that prices tend to be more expensive than cheaper."
  },
  {
    "objectID": "Take-home_Exs/Ex1/Take-home_Ex1.html#visualizations",
    "href": "Take-home_Exs/Ex1/Take-home_Ex1.html#visualizations",
    "title": "Take-home Exercise 1: Singapore Private Residential Property Market for 2024 Q1",
    "section": "5.1 Visualizations",
    "text": "5.1 Visualizations\nFor this exercise, we generated 3 visualizations, show below.\n\n5.1.1 Singapore Private Property Prices by Sales Market\n\n\n\n\n\n\n\n5.1.2 Districts with Highest Units Sold for Each Submarket\n\n\n\n\n\n\n\n5.1.3 Singapore Private Property Sales by Property Type for 2024 Q1"
  },
  {
    "objectID": "Take-home_Exs/Ex1/Take-home_Ex1.html#overall-insights",
    "href": "Take-home_Exs/Ex1/Take-home_Ex1.html#overall-insights",
    "title": "Take-home Exercise 1: Singapore Private Residential Property Market for 2024 Q1",
    "section": "5.2 Overall Insights",
    "text": "5.2 Overall Insights\nWe found that the 2024 New Sales market experienced an sizable decrease is overall prices (7.6%) compared to the same period last year. However, it should be noted that this is due to New Launches located in cheaper districts, compared to the same period last year where that launches where in central districts like 9 and 10.\nAnother very interesting insight is that different property prices experience big variations in prices, while Executive Condominiums have smaller variations. This is because of the more controlled and regulated environment as these properties are under the jurisdiction of HDB. This is why although median prices are at S$1736 in 2024Q1, it is possible to find a more affordable property when looking at Executive Condominiums.\nHence, a prospective buyer must take generalizations in the housing market with the grain of salt as overall market trends may not reflect the situation in the market they are interested in. This is why when thinking of buying a property, it is important to be more specific on the kind of property you are looking for (e.g. which district, property type, new or resale, etc) and narrow down on the trends for each of those. They must do their own due diligence in researching the market they are interested in to make a sound decision on their purchase."
  },
  {
    "objectID": "Take-home_Exs/Ex1/Take-home_Ex1.html#reflections",
    "href": "Take-home_Exs/Ex1/Take-home_Ex1.html#reflections",
    "title": "Take-home Exercise 1: Singapore Private Residential Property Market for 2024 Q1",
    "section": "5.3 Reflections",
    "text": "5.3 Reflections\nWhen choosing how to visualize the data, I had to make hard decisions on what data subsets to select. At first I was wary that I will be presenting misleading data. My own bias and limitations also reflect the output as I had to limit myself to looking at 2 quarters as I cannot imagine how to present data from all 5 quarters effectively with the level of detail in the different submarkets and property type.\nHowever, I realized that with the details available to us, it is impossible to cover everything. It is more important to tailor the visualization to our target audience, and even then we may not be able to provide everything they need.\nI am now more aware that as a data visualization consumer, I must do my on due diligence to dive deep into the details as the visualizations may be too general or too detailed for our own needs. Some data may be omitted or data due to various limitations.\nAs a student, there were also some frustrating moments as I wanted to present data in a certain way but my current abilities limit me from presenting data in such a way (especially on Visualization 2). As I progress in this course, I will challenge myself to implement those ideas as I expand my own learning."
  },
  {
    "objectID": "Take-home_Exs/Ex2/Take-home_Ex2.html",
    "href": "Take-home_Exs/Ex2/Take-home_Ex2.html",
    "title": "Take-home Exercise 2: DataVis Makeover",
    "section": "",
    "text": "For this exercise, we will revisit Take-home Exercise 1, where we visualized the trends in the Private Real Estate Market of Q1 2024.\nWe will critique a visualization from our classmates in terms of clarity and aesthetics and improve the visualization using the best practices for visualizing data."
  },
  {
    "objectID": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html",
    "href": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html",
    "title": "Hands-on Exercise 4A: Visualizing Statistical Analysis",
    "section": "",
    "text": "This hands-on exercise covers Chapter 10: Visual Statistical Analysis.\nI learned about the following:\n\ncreating visual graphics with rich statistical information"
  },
  {
    "objectID": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#loading-the-required-packages",
    "href": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#loading-the-required-packages",
    "title": "Hands-on Exercise 4A: Visualizing Statistical Analysis",
    "section": "2.1 Loading the required packages",
    "text": "2.1 Loading the required packages\nFor this exercise we will use the following R packages:\n\ntidyverse, a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\nggstatsplot, extension of ggplot2 package for creating graphics with details from statistical tests included in the information-rich plots themselves.\nrstantools, interfaces with Stan for statistical modeling and high-performance statistical computation\n\n\npacman::p_load(tidyverse, ggstatsplot, rstantools)\n# Set seed\nset.seed(1234)"
  },
  {
    "objectID": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#loading-the-data",
    "href": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#loading-the-data",
    "title": "Hands-on Exercise 4A: Visualizing Statistical Analysis",
    "section": "2.2 Loading the data",
    "text": "2.2 Loading the data\nWe will use the same exam_data dataset from Hands-on Ex 1 and load it into the RStudio environment using read_csv().\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\nglimpse(exam_data)\n\nRows: 322\nColumns: 7\n$ ID      &lt;chr&gt; \"Student321\", \"Student305\", \"Student289\", \"Student227\", \"Stude…\n$ CLASS   &lt;chr&gt; \"3I\", \"3I\", \"3H\", \"3F\", \"3I\", \"3I\", \"3I\", \"3I\", \"3I\", \"3H\", \"3…\n$ GENDER  &lt;chr&gt; \"Male\", \"Female\", \"Male\", \"Male\", \"Male\", \"Female\", \"Male\", \"M…\n$ RACE    &lt;chr&gt; \"Malay\", \"Malay\", \"Chinese\", \"Chinese\", \"Malay\", \"Malay\", \"Chi…\n$ ENGLISH &lt;dbl&gt; 21, 24, 26, 27, 27, 31, 31, 31, 33, 34, 34, 36, 36, 36, 37, 38…\n$ MATHS   &lt;dbl&gt; 9, 22, 16, 77, 11, 16, 21, 18, 19, 49, 39, 35, 23, 36, 49, 30,…\n$ SCIENCE &lt;dbl&gt; 15, 16, 16, 31, 25, 16, 25, 27, 15, 37, 42, 22, 32, 36, 35, 45…\n\n\nThere are a total of seven attributes in the exam_data tibble data frame. Four of them are categorical data type and the other three are in continuous data type.\n\nThe categorical attributes are: ID, CLASS, GENDER and RACE.\nThe continuous attributes are: MATHS, ENGLISH and SCIENCE."
  },
  {
    "objectID": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#tooltips",
    "href": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#tooltips",
    "title": "Hands-on Exercise 4A: Visualizing Distribution",
    "section": "3.1 Tooltips",
    "text": "3.1 Tooltips\n\n3.1.2 Adding tooltips\nInstead of geom_dotplot() provided by ggplot2, we will use ggiraph’s geom_dotplot_interactive() with the tooltip aesthetic to add the label in the content.\nAfter defining the plot, we will pass this to girafe() to generate the interactive element in our webpage.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\nHovering on a dot in a plot shows the ID, which we set as the tooltip content.\n\n\n3.1.2 Adding multiple information in tooltip\nOne way we can add multiple information in tooltip is by setting tooltip value in dataframe with the data to be presented.\n\nexam_data$tooltip &lt;- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)\n\n\n\n\n\nThe tooltip now has the student Name and Class when hovering on the dots.\n\n\n3.1.3 Styling the tooltip\nThe tooltip can be styled using CSS as the rendering is done on the webpage, and no processing of style by ggplot2. This style is passed to the girafe() function.\nFor example, we can change the background to white, instead of the default black. We will also change the font to Arial.\n\ntooltip_css &lt;- \"background-color:white; #&lt;&lt;\nfont-style:bold; color:black; font-family: Arial\" #&lt;&lt;\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = ID),                   \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(    #&lt;&lt;\n    opts_tooltip(    #&lt;&lt;\n      css = tooltip_css)) #&lt;&lt;\n)"
  },
  {
    "objectID": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#hover",
    "href": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#hover",
    "title": "Hands-on Exercise 4A: Visualizing Distribution",
    "section": "3.2 Hover",
    "text": "3.2 Hover\n\n3.2.1 Adding hover effect\nWe can add hover effect by adding data_id aesthetic to geom_dotplot_interactive().\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)\n\n\n\n\n\nHovering on a dot show the other dots with the same value in CLASS. This is useful for highlight plot elements related to the data.\n\n\n3.2.2 Styling hover effect\nWe can also use CSS to style the hover effect. The styles are passed to the girafe() function.\nopts_hover - style of the hovered and related data\nopts_hover_inv - style of unrelated data\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: blue;\"),  \n    opts_hover_inv(css = \"opacity:0.4;\") \n  )                                        \n)\n\n\n\n\n\n\n\n3.2.3 Combining tooltip and hover\nWe can also combine both tooltips and hover effect to highlight related data and provide guiding text on the tootltip.\nThis can be done by setting both tooltip and data_id aesthetics on geom_dotplot_interactive().\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = paste(\"Class:\", CLASS), \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_tooltip(css = \"background-color:white; font-style:bold; color:black; font-family: Arial\"),\n    opts_hover(css = \"fill: blue;\"),  \n    opts_hover_inv(css = \"opacity:0.4;\") \n  )                                        \n)\n\n\n\n\n\nWith this, the tooltip shows the class and highlights the other dots associated with the class."
  },
  {
    "objectID": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#onclick-effect",
    "href": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#onclick-effect",
    "title": "Hands-on Exercise 4A: Visualizing Distribution",
    "section": "3.3 onclick() effect",
    "text": "3.3 onclick() effect\nThis provides functionality to run Javascript code when clicking on a plot element.\n\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)\n\n\n\n\n\nIn this example, clicking a dot opens MOE page of the student. This is triggered by the window.open() javascript.\n\n\n\n\n\n\nPreventing XSS attacks\n\n\n\nWhen running javascript functions, using data not generated by our system, it is important to escape the data for Javascript safety to prevent Cross-Site Scripting attacks.\nOne example is if CLASS has some values such as ;stealYoInfo();, it can potentially make users vulnerable. Even if there is no malicious intent, if some values have text that can affect Javascript parsing, the interactive plot may not work as expected.\nThis particular dataset and Singapore Open Data datasets are trusted so there is less concern for this happening. However, some caution is needed when using untrusted sources.\nI will do some tests at a later time to check if ggiraph is vulnerable to such attacks so that I can apply measures to prevent XSS."
  },
  {
    "objectID": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#coordinating-multiple-views",
    "href": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#coordinating-multiple-views",
    "title": "Hands-on Exercise 4A: Visualizing Distribution",
    "section": "3.4 Coordinating multiple views",
    "text": "3.4 Coordinating multiple views\nWe can pass the patchwork plot to girafe() to coordinate the interactions of the two plots.\n\np1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 &lt;- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       )\n\n\n\n\n\nIn the example above, hovering a dot in the Maths plot, highlights the corresponding dot in English.\nThis is useful for seeing how the student scored in both subjects."
  },
  {
    "objectID": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#creating-an-interactive-scatterplot",
    "href": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#creating-an-interactive-scatterplot",
    "title": "Hands-on Exercise 4A: Visualizing Distribution",
    "section": "4.1 Creating an interactive scatterplot",
    "text": "4.1 Creating an interactive scatterplot\n\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)\n\n\n\n\n\nWith a few lines of code, it generated an interactive plot with tooltips and with varioous functions like zoom and pan."
  },
  {
    "objectID": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#adding-color-to-plotly-visualization",
    "href": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#adding-color-to-plotly-visualization",
    "title": "Hands-on Exercise 4A: Visualizing Distribution",
    "section": "4.2 Adding color to plotly visualization",
    "text": "4.2 Adding color to plotly visualization\n\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH,\n             color = ~RACE)\n\n\n\n\n\nAdding the color also added an interactive legend, and each race can clicked to hide and unhide dots from the plot."
  },
  {
    "objectID": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#creating-an-interactive-scatetrplot-using-ggplotly",
    "href": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#creating-an-interactive-scatetrplot-using-ggplotly",
    "title": "Hands-on Exercise 4A: Visualizing Distribution",
    "section": "4.3 Creating an interactive scatetrplot using ggplotly",
    "text": "4.3 Creating an interactive scatetrplot using ggplotly\nWe can make an existing ggplot visualization interactive by passing the plot using ggplotly()\n\np &lt;- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)"
  },
  {
    "objectID": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#coordinating-multiple-views-1",
    "href": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#coordinating-multiple-views-1",
    "title": "Hands-on Exercise 4A: Visualizing Distribution",
    "section": "4.4 Coordinating multiple views",
    "text": "4.4 Coordinating multiple views\nCoordinating views is done by the following:\n\nhighlight_key() of plotly package is used as shared data.\ntwo scatterplots will be created by using ggplot2 functions.\nlastly, subplot() of plotly package is used to place them next to each other side-by-side. (similar to patchwork)\n\n\nd &lt;- highlight_key(exam_data)\np1 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nsubplot(ggplotly(p1),\n        ggplotly(p2))"
  },
  {
    "objectID": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#interactive-data-table-dt-package",
    "href": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#interactive-data-table-dt-package",
    "title": "Hands-on Exercise 4A: Visualizing Distribution",
    "section": "5.1 Interactive Data Table: DT Package",
    "text": "5.1 Interactive Data Table: DT Package\nIt is a wrapper of DataTables Javascript library. Data objects in R can be rendered as HTML tables using the JavaScript library ‘DataTables’ (typically via R Markdown or Shiny).\n\nDT::datatable(exam_data, class= \"compact\")\n\n\n\n\n\n\nThis provides interactive elements like pagination, search and sort with just 1 line of code!"
  },
  {
    "objectID": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#rendering-plots-with-data-table",
    "href": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#rendering-plots-with-data-table",
    "title": "Hands-on Exercise 4A: Visualizing Distribution",
    "section": "5.2 Rendering plots with data table",
    "text": "5.2 Rendering plots with data table\n\nd &lt;- highlight_key(exam_data) \np &lt;- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg &lt;- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe scatterplot is rendered beside datatable."
  },
  {
    "objectID": "Take-home_Exs/Ex2/Take-home_Ex2.html#critique",
    "href": "Take-home_Exs/Ex2/Take-home_Ex2.html#critique",
    "title": "Take-home Exercise 2: DataVis Makeover",
    "section": "2.1 Critique",
    "text": "2.1 Critique\n\nClarityAesthetics\n\n\n\nGood Points\n\nPurpose of the visualization is very easy at a glance. The purpose is to compare Q1 Transacted Prices between 2023 and 2024.\nPlots are shown side by side, with same range in the y-axis, which makes it easy to compare the values between the 2 plots.\nUse of median reference line for each year to see how the prices for each property time compare with the overall median.\n\n\n\nPoints of Improvement\n\nDetails are lost in the scale. Most of the values are less than $10M but it is hard to see the price distribution lower than this value.\n\nDue to this, even if there is a median reference line, it is hard to see compare Apartment, Condominium, or Executive condo prices with this trend.\n\nNo enlightening title to tell the story of the visualization.\n\n\n\n\n\nGood Points\n\nY-axis labels are easy to read, instead of the raw numbers, e.g. 40M vs 40000000.\nNo ticks on categorical axis (Property Type)\nEffort in using a theme for more professional look\n\n\n\nPoints of Improvement\n\nMedian labels cover the box plot.\nX-axis labels are vertical, which make them hard to read\nAxis texts are very close to the axis labels, making the plot look messy\nDifficult to compare the price difference for each property type\n\nThe reader needs context switching from the left to right graph to compare"
  },
  {
    "objectID": "Take-home_Exs/Ex2/Take-home_Ex2.html#designing-the-makeover",
    "href": "Take-home_Exs/Ex2/Take-home_Ex2.html#designing-the-makeover",
    "title": "Take-home Exercise 2: DataVis Makeover",
    "section": "2.2 Designing the Makeover",
    "text": "2.2 Designing the Makeover\nThe sketch below shows illustrates the idea on how we can improve the visualization.\n\nNote: The y-axis will label the axis in millions, like the original plot.\nThis design improves the visualization by:\n\nClarityAesthetics\n\n\n\nAdding enlightening title and subtitle to the plot makes is easier for the reader to understand what is presented to them.\nUsing log10 scale on the y-axis to show a wider range of values.\n\n\n\n\nPlotting the 2023 and 2024 boxplots side by side to more easily compare prices for each property type. Muted and bright colors will be used for 2023 and 2024, respectively, to emphasize the 2024 plots.\nThe previous point also provides more space to accommodate the x-axis labels. For longer titles, we will wrap them to the next line so they do not overlap with other labels.\nPlace more focus on styling the plots so the texts are using readable fonts and important details do not overlap each other."
  },
  {
    "objectID": "Take-home_Exs/Ex2/Take-home_Ex2.html#loading-the-r-packages",
    "href": "Take-home_Exs/Ex2/Take-home_Ex2.html#loading-the-r-packages",
    "title": "Take-home Exercise 2: DataVis Makeover",
    "section": "3.1 Loading the R packages",
    "text": "3.1 Loading the R packages\nWe will use the following packages for the makeover:\n\n\n\ntidyverse\nA collection of R packages used in data science, which includes ggplot2, tibble, readr, among others.\n\n\nggtext\nEnhances text rendering for ggplot2. element_markdown() is most notable function used for markdown rendering so we can highlight important information in text.\n\n\npatchwork\nAllows composition of multiple graphs into a single plot.\n\n\nscales\nExtends functions to operate on ggplot2 scales. Useful for wrapping text and formatting numbers in axes.\n\n\nDT\nWrapper for datatable.js, used for presenting tabular data\n\n\n\n\npacman::p_load(tidyverse, scales, patchwork, ggtext, DT)"
  },
  {
    "objectID": "Take-home_Exs/Ex2/Take-home_Ex2.html#importing-the-datases",
    "href": "Take-home_Exs/Ex2/Take-home_Ex2.html#importing-the-datases",
    "title": "Take-home Exercise 2: DataVis Makeover",
    "section": "3.2 Importing the datases",
    "text": "3.2 Importing the datases\nWe will import only the 2023Q1 and 2024Q1 datasets as the visualization only involves those quarters.\nWhen loading the datasets, we will also rename the columns to R-friendly format. For this purpose, we will reuse the rename_realis_column function from Take-home Exercise 1.\nFor each dataset, we will also align the corresponding quarter in the QUARTER column.\n\nrename_realis_column &lt;- function(orig_name) {\n  # Add underscores to spaces\n  gsub(\" +\", \"_\",\n       # Remove special characters\n       gsub(\"[^A-Z ]\", \"\",\n            # Convert to upper case and remove trailing spaces\n            toupper(orig_name)) %&gt;% trimws())\n}\n\n\n2023Q12024Q1\n\n\n\nrealis_2023q1 &lt;-\n  read_csv('data/ResidentialTransaction20240308160536.csv') %&gt;%\n  rename_with(rename_realis_column)\ndatatable(head(realis_2023q1, n = 20))\n\n\n\n\n\n\n\n\nrealis_2024q1 &lt;-\n  read_csv('data/ResidentialTransaction20240414220633.csv') %&gt;%\n  rename_with(rename_realis_column)\ndatatable(head(realis_2024q1, n = 20))"
  },
  {
    "objectID": "Take-home_Exs/Ex2/Take-home_Ex2.html#data-wrangling",
    "href": "Take-home_Exs/Ex2/Take-home_Ex2.html#data-wrangling",
    "title": "Take-home Exercise 2: DataVis Makeover",
    "section": "3.3 Data Wrangling",
    "text": "3.3 Data Wrangling\nNow that we have realis_2023q1 and realis_2024q1, we will combine them into a form that is usable for the make over.\n\n3.3.1 Adding QUARTER columns\nWe will use mutate() to assign the corresponding quater to each dataset.\n\nrealis_2023q1$QUARTER &lt;- \"2023Q1\"\nrealis_2024q1$QUARTER &lt;- \"2024Q1\"\n\n\n\n3.3.2 Combining the dataframes\nWe will combine the dataframes to a single one using rbind(), so that we only need to work with a single dataframe for the makeover.\n\nrealis &lt;- rbind(realis_2023q1, realis_2024q1)\n\n\n\n3.3.3 Selecting relevant columns\nLastly, we will select only the columns relevant to the visualization (QUARTER, PROPERTY_TYPE, TRANSACTED_PRICE) to make our dataframe more lightweight.\n\nrealis &lt;- realis %&gt;% select(c(QUARTER,\n                              PROPERTY_TYPE,\n                              TRANSACTED_PRICE))\ndatatable(head(realis, 20))\n\n\n\n\n\nWe now have all the data we need in realis."
  },
  {
    "objectID": "Take-home_Exs/Ex2/Take-home_Ex2.html#implementing-the-design",
    "href": "Take-home_Exs/Ex2/Take-home_Ex2.html#implementing-the-design",
    "title": "Take-home Exercise 2: DataVis Makeover",
    "section": "4.1 Implementing the design",
    "text": "4.1 Implementing the design\nIn 2.2 Designing the Makeover, we came up with a design to improve the original visualization. We will use this as a starting point for the makeover.\nWe are getting the plot title and subtitle by extracting from the write-up in the original visualization.\nWe also need to calculate the medians for the reference lines:\n\nmedian2023 = median(realis_2023q1$TRANSACTED_PRICE)\nmedian2024 = median(realis_2024q1$TRANSACTED_PRICE)\n\n\n\nShow the code\nggplot(realis,\n       aes(\n         y = TRANSACTED_PRICE,\n         x = PROPERTY_TYPE,\n         fill = QUARTER,\n         color = QUARTER\n       )) +\n  \n  # Renders colored outliers and box border\n  geom_boxplot(\n    aes(fill = NULL),\n    outlier.alpha = 0.8,\n    outlier.size = 0.2,\n    show.legend = FALSE\n  ) +\n  # Renders without outliers to override the colored borders from previous box plot\n  # Staples are rendered so it is clearer where the outliers start\n  geom_boxplot(\n    alpha = 0.8,\n    staplewidth = 0.2,\n    outliers = FALSE,\n    color = \"black\"\n  ) +\n  \n  # 2023 Median reference line\n  geom_hline(yintercept = median2023,\n             color = \"grey60\",\n             linetype = \"dashed\") +\n  annotate(\n    \"text\",\n    label = paste0(\"Median =\\n$\", round(median2023 / 1e6, 2), \"M\"),\n    y = median2023 * 0.7,\n    x = 6.75,\n    color = \"grey50\",\n    size = 3,\n    family = \"Roboto Condensed\"\n  ) +\n  \n  # 2024 Median reference line\n  geom_hline(yintercept = median2024,\n             color = \"blue\",\n             linetype = \"dashed\") +\n  annotate(\n    \"text\",\n    label = paste0(\"Median =\\n$\", round(median2024 / 1e6, 2), \"M\"),\n    y = median2024 * 1.4,\n    x = 6.75,\n    color = \"blue\",\n    size = 3,\n    family = \"Roboto Condensed\"\n  ) +\n  \n  # Set colors\n  scale_fill_manual(values = c(\"grey60\", \"blue\")) +\n  scale_color_manual(values = c(\"grey60\", \"blue\")) +\n  \n  # Format axes\n  scale_y_log10(limits = c(0.5e6, 70e6),\n                labels = number_format(scale = 1e-6, suffix = \"M\")) +\n  scale_x_discrete(labels = wrap_format(10), expand = expansion(add = c(0.6, 1))) +\n  labs(x = \"Property Type\",\n       y = \"Transacted Price ($)\",\n       fill = \"Quarter\") +\n  \n  # Plot styles\n  theme_minimal() +\n  plot_annotation(title = \"Transaction Prices by Property Type for 2023Q1 & 2024Q1\",\n                  subtitle = \"Overall prices have increased by **3.7%** from $1.63M to $1.69M. However, the price variability for all property types&lt;br/&gt;have decreased, with fewer outliers present.\") &\n  theme(\n    text = element_text(family = \"Roboto Condensed\"),\n    plot.title = element_text(face = \"bold\"),\n    plot.subtitle = element_markdown(color = \"grey50\", size = rel(0.9)),\n    axis.line.x = element_line()\n  )\n\n\n\n\n\n\n\n\n\n\nGainsPoints for improvement\n\n\nPlotting the boxplots in pairs improved the clarity of the visualization as it makes it easier to compare prices within each property type. Using a bright color like blue for the 2024 plot and a muted color like gray for the 2023 plot places the focus towards the 2024 data during the comparison.\nThe theme and the styles applied greatly improved the readability, especially as the x-axis labels are now rendered horizontally. This also provided a bigger space for the plot itself.\nLastly, the title and subtitle provides a story for the visualization to help the reader understand what is presented to them.\n\n\nWhile the makeover made the visualization more aesthetic, further improvements can be made:\n\nFree up more space on the right by moving the legend to inside the plot. This will help expand the plot horizontally.\nAdjust the x-axis texts. The labels are small and may be challenging for readers to read. As Property Type is a core part of the visualization, the legibility must be improved.\nReference lines are hard to see when overlapping with boxplots. It is hard to compare with the reference lines especially for Apartment and Condominium as the color of the reference lines are the same as the fill. Consider changing the color of the reference lines.\nAdd axis line and ticks to y-axis as it is a continuous value\nIf possible, add more values in y-axis labels as log scale is more difficult to judge than a linear scale. For example, we cannot see the values above $30M."
  },
  {
    "objectID": "Take-home_Exs/Ex2/Take-home_Ex2.html#nd-makeover",
    "href": "Take-home_Exs/Ex2/Take-home_Ex2.html#nd-makeover",
    "title": "Take-home Exercise 2: DataVis Makeover",
    "section": "4.2 2nd Makeover",
    "text": "4.2 2nd Makeover\nFrom the points of improvement of the initial makeover, we will do the following:\n\nMove the legend to inside the plot\nIncrease size of x-axis labels\nAdjust y-axis style and labels\nTweak the presentation of the reference lines\n\n\nggplot(realis,\n       aes(\n         y = TRANSACTED_PRICE,\n         x = PROPERTY_TYPE,\n         fill = QUARTER,\n         color = QUARTER\n       )) +\n  \n  # Renders colored outliers and box border\n  geom_boxplot(\n    aes(fill = NULL),\n    outlier.alpha = 0.8,\n    outlier.size = 0.3,\n    show.legend = FALSE\n  ) +\n  # Renders without outliers to override the colored borders from previous box plot\n  # Staples are rendered so it is clearer where the outliers start\n  geom_boxplot(\n    alpha = 0.8,\n    staplewidth = 0.2,\n    outliers = FALSE,\n    color = \"black\"\n  ) +\n  \n  # 2023 Median reference line\n  geom_hline(yintercept = median2023,\n             color = \"darkgoldenrod4\",\n             linetype = \"dashed\") +\n  annotate(\n    \"richtext\",\n    label = paste0(\"2023Q1 Median&lt;br/&gt;**$\", round(median2023 / 1e6, 2), \"M**\"),\n    y = median2023 * 0.65,\n    x = 6.9,\n    color = \"darkgoldenrod4\",\n    size = 3,\n    family = \"Roboto Condensed\"\n  ) +\n  \n  # 2024 Median reference line\n  geom_hline(yintercept = median2024,\n             color = \"brown\",\n             linetype = \"dashed\") +\n  annotate(\n    \"richtext\",\n    label = paste0(\"2024Q1 Median&lt;br/&gt;**$\", round(median2024 / 1e6, 2), \"M**\"),\n    y = median2024 * 1.55,\n    x = 6.9,\n    color = \"brown\",\n    size = 3,\n    family = \"Roboto Condensed\"\n  ) +\n  \n  # Set colors\n  scale_fill_manual(values = c(\"grey60\", \"blue\")) +\n  scale_color_manual(values = c(\"grey60\", \"blue\")) +\n  \n  # Format axes\n  scale_y_log10(limits = c(0.5e6, 100e6),\n                labels = number_format(scale = 1e-6, suffix = \"M\"),\n                n.breaks = 9) +\n  # Add more space to the right side for the reference line annotations and legend\n  scale_x_discrete(labels = wrap_format(10), expand = expansion(add = c(0.6, 1.4))) +\n  labs(x = \"Property Type\",\n       y = \"Transacted Price ($)\",\n       fill = \"Quarter\") +\n  \n  # Plot styles\n  theme_minimal() +\n  plot_annotation(title = \"Transaction Prices by Property Type for 2023Q1 & 2024Q1\",\n                  subtitle = \"Overall prices have increased by **3.7%** from $1.63M to $1.69M. However, the price variability for all property types&lt;br/&gt;have decreased, with fewer outliers present.\") &\n  theme(\n    text = element_text(family = \"Roboto Condensed\"),\n    plot.title = element_text(face = \"bold\"),\n    plot.subtitle = element_markdown(color = \"grey50\", size = rel(0.9)),\n    axis.line.x = element_line(),\n    axis.title.x = element_blank(),\n    axis.text.x = element_text(size = rel(1.2)),\n    axis.line.y = element_line(),\n    axis.ticks.y = element_line(),\n    # Render legend inside the plot\n    legend.position = \"inside\",\n    legend.position.inside = c(1, 0.85),\n    legend.justification = \"right\",\n    legend.location = \"plot\",\n    legend.box.background = element_rect(fill=\"aliceblue\")\n  )\n\n\n\n\n\nggplot(realis,\n       aes(\n         y = TRANSACTED_PRICE,\n         x = PROPERTY_TYPE,\n         fill = QUARTER,\n         color = QUARTER\n       )) +\n  \n  # Renders colored outliers and box border\n  geom_boxplot(\n    aes(fill = NULL),\n    outlier.alpha = 0.8,\n    outlier.size = 0.3,\n    show.legend = FALSE\n  ) +\n  # Renders without outliers to override the colored borders from previous box plot\n  # Staples are rendered so it is clearer where the outliers start\n  geom_boxplot(\n    alpha = 0.8,\n    staplewidth = 0.2,\n    outliers = FALSE,\n    color = \"black\"\n  ) +\n  \n  # 2023 Median reference line\n  geom_hline(yintercept = median2023,\n             color = \"darkgoldenrod4\",\n             linetype = \"dashed\") +\n  annotate(\n    \"richtext\",\n    label = paste0(\"2023Q1 Median&lt;br/&gt;**$\", round(median2023 / 1e6, 2), \"M**\"),\n    y = median2023 * 0.65,\n    x = 6.9,\n    color = \"darkgoldenrod4\",\n    size = 3,\n    family = \"Roboto Condensed\"\n  ) +\n  \n  # 2024 Median reference line\n  geom_hline(yintercept = median2024,\n             color = \"brown\",\n             linetype = \"dashed\") +\n  annotate(\n    \"richtext\",\n    label = paste0(\"2024Q1 Median&lt;br/&gt;**$\", round(median2024 / 1e6, 2), \"M**\"),\n    y = median2024 * 1.55,\n    x = 6.9,\n    color = \"brown\",\n    size = 3,\n    family = \"Roboto Condensed\"\n  ) +\n  \n  # Set colors\n  scale_fill_manual(values = c(\"grey60\", \"blue\")) +\n  scale_color_manual(values = c(\"grey60\", \"blue\")) +\n  \n  # Format axes\n  scale_y_log10(limits = c(0.5e6, 70e6),\n                labels = number_format(scale = 1e-6, suffix = \"M\"),\n                n.breaks = 7) +\n  # Add more space to the right side for the reference line annotations and legend\n  scale_x_discrete(labels = wrap_format(10), expand = expansion(add = c(0.6, 1.4))) +\n  labs(x = \"Property Type\",\n       y = \"Transacted Price ($)\",\n       fill = \"Quarter\") +\n  \n  # Plot styles\n  theme_minimal() +\n  plot_annotation(title = \"Transaction Prices by Property Type for 2023Q1 & 2024Q1\",\n                  subtitle = \"Overall prices have increased by &lt;span style='color:darkgreen;'&gt;**3.7%**&lt;/span&gt; from **$1.63M** to **1.69M**. Landed properties consistently sell higher than&lt;br /&gt;market median, with **Detached Houses** being the most expensive.\") &\n  theme(\n    text = element_text(family = \"Roboto Condensed\"),\n    plot.title = element_text(face = \"bold\"),\n    plot.subtitle = element_markdown(color = \"grey50\", size = rel(0.9)),\n    axis.line.x = element_line(),\n    axis.title.x = element_blank(),\n    axis.text.x = element_text(size = rel(1.2)),\n    axis.line.y = element_line(),\n    axis.ticks.y = element_line(),\n    # Render legend inside the plot\n    legend.position = \"inside\",\n    legend.position.inside = c(1, 0.85),\n    legend.justification = \"right\",\n    legend.location = \"plot\",\n    legend.box.background = element_rect(fill=\"aliceblue\")\n  )"
  },
  {
    "objectID": "Take-home_Exs/Ex2/Take-home_Ex2.html#nd-iteration",
    "href": "Take-home_Exs/Ex2/Take-home_Ex2.html#nd-iteration",
    "title": "Take-home Exercise 2: DataVis Makeover",
    "section": "4.2 2nd Iteration",
    "text": "4.2 2nd Iteration\nFrom the points of improvement of the initial makeover, we will do the following:\n\nMove the legend to inside the plot\nAdjust axis styles and labels\nTweak the presentation of the reference lines\n\n\n\nShow the code\nggplot(realis,\n       aes(\n         y = TRANSACTED_PRICE,\n         x = PROPERTY_TYPE,\n         fill = QUARTER,\n         color = QUARTER\n       )) +\n  \n  # Renders colored outliers and box border\n  geom_boxplot(\n    aes(fill = NULL),\n    outlier.alpha = 0.8,\n    outlier.size = 0.3,\n    show.legend = FALSE\n  ) +\n  # Renders without outliers to override the colored borders from previous box plot\n  # Staples are rendered so it is clearer where the outliers start\n  geom_boxplot(\n    alpha = 0.8,\n    staplewidth = 0.2,\n    outliers = FALSE,\n    color = \"black\"\n  ) +\n  \n  # 2023 Median reference line\n  geom_hline(yintercept = median2023,\n             color = \"darkgoldenrod4\",\n             linetype = \"dashed\") +\n  annotate(\n    \"richtext\",\n    label = paste0(\"2023Q1 Median&lt;br/&gt;**$\", round(median2023 / 1e6, 2), \"M**\"),\n    y = median2023 * 0.65,\n    x = 6.9,\n    color = \"darkgoldenrod4\",\n    size = 3,\n    family = \"Roboto Condensed\"\n  ) +\n  \n  # 2024 Median reference line\n  geom_hline(yintercept = median2024,\n             color = \"brown\",\n             linetype = \"dashed\") +\n  annotate(\n    \"richtext\",\n    label = paste0(\"2024Q1 Median&lt;br/&gt;**$\", round(median2024 / 1e6, 2), \"M**\"),\n    y = median2024 * 1.55,\n    x = 6.9,\n    color = \"brown\",\n    size = 3,\n    family = \"Roboto Condensed\"\n  ) +\n  \n  # Set colors\n  scale_fill_manual(values = c(\"grey60\", \"blue\")) +\n  scale_color_manual(values = c(\"grey60\", \"blue\")) +\n  \n  # Format axes\n  scale_y_log10(limits = c(0.5e6, 100e6),\n                labels = number_format(scale = 1e-6, suffix = \"M\"),\n                n.breaks = 9) +\n  # Add more space to the right side for the reference line annotations and legend\n  scale_x_discrete(labels = wrap_format(10), expand = expansion(add = c(0.6, 1.4))) +\n  labs(x = \"Property Type\",\n       y = \"Transacted Price ($)\",\n       fill = \"Quarter\") +\n  \n  # Plot styles\n  theme_minimal() +\n  plot_annotation(title = \"Transaction Prices by Property Type for 2023Q1 & 2024Q1\",\n                  subtitle = \"Overall prices have increased by **3.7%** from $1.63M to $1.69M. However, the price variability for all property types&lt;br/&gt;have decreased, with fewer outliers present.\") &\n  theme(\n    text = element_text(family = \"Roboto Condensed\"),\n    plot.title = element_text(face = \"bold\"),\n    plot.subtitle = element_markdown(color = \"grey50\", size = rel(0.9)),\n    axis.line = element_line(),\n    axis.title = element_text(face = \"bold\", size=rel(1.1)),\n    axis.text = element_text(size = rel(0.9)),\n    axis.ticks.y = element_line(),\n    # Render legend inside the plot\n    legend.position = \"inside\",\n    legend.position.inside = c(1, 0.85),\n    legend.justification = \"right\",\n    legend.location = \"plot\",\n    legend.box.background = element_rect()\n  )\n\n\n\n\n\n\n\n\n\n\nGainsPoints for improvement\n\n\nIn this iteration, we maximized the available space by expanding the right side of the x-axis further, which now holds the legend and annotations for the reference lines. Doing this also ensures that no important information get covered by the annotations.\nNext, the colors of the reference lines were changed to a different color than the fills, with labels added to the end of the line so readers won’t need to refer to the legend to identify what the line is for.\nLastly, we did tweaks on the axis to improve legibility by increasing the font size. The y-axis now has smaller breaks to help readers gauge the log scale better. Aesthetically, this is worse as the axis labels do not look equidistant. However, this helps a lot in clarity.\n\n\nIn our subtitle, we have this excerpt from the original write-up:\n\nOverall prices have increased by 3.7% from $1.63M to $1.69M. However, the price variability for all property types have decreased, with fewer outliers present.\n\nNow that we expanded the y-axis, we can see that this is not necessarily true. The box and whiskers are longer in 2024 than 2023 for Condominium and Semi-Detached House. Hence, we must update this to prevent confusion.\nInstead, we can emphasize the observation that Landed properties all sold above the market median.\nLastly, the text size of our plot title and subtitles must be increased as well for legibility and make adjustments accordingly after we increased the font sizes in other parts of the plot."
  },
  {
    "objectID": "Take-home_Exs/Ex2/Take-home_Ex2.html#final-iteration",
    "href": "Take-home_Exs/Ex2/Take-home_Ex2.html#final-iteration",
    "title": "Take-home Exercise 2: DataVis Makeover",
    "section": "4.3 Final Iteration",
    "text": "4.3 Final Iteration\nTo emphasize that Landed properties sell above the the median price, we will do the following:\n\nRearrange x-axis to put landed property types to 1 side of the plot\nAdd annotation that landed property types sold above market median.\nAdjust text for legibility\n\n\n\nShow the code\nfinal_viz &lt;- ggplot(realis,\n                    aes(\n                      y = TRANSACTED_PRICE,\n                      x = factor(\n                        PROPERTY_TYPE,\n                        levels = c(\n                          \"Detached House\",\n                          \"Semi-Detached House\",\n                          \"Terrace House\",\n                          \"Condominium\",\n                          \"Apartment\",\n                          \"Executive Condominium\"\n                        )\n                      ),\n                      fill = QUARTER,\n                      color = QUARTER\n                    )) +\n  \n  # Annotate that all landed properties sold above market median\n  annotate(\n    \"rect\",\n    xmin = 0.5,\n    xmax = 3.5,\n    ymin = 0.5e6,\n    ymax = 100e6,\n    alpha = 0.1,\n    fill = \"blue\"\n  ) +\n  annotate(\n    \"richtext\",\n    label = \"Landed properties sold for&lt;br/&gt;above market median&lt;br/&gt;prices in 2024Q1.\",\n    y = 55e6,\n    x = 2.6,\n    size = 3,\n    family = \"Roboto Condensed\"\n  ) +\n  \n  # Renders colored outliers and box border\n  geom_boxplot(\n    aes(fill = NULL),\n    outlier.alpha = 0.8,\n    outlier.size = 0.3,\n    show.legend = FALSE\n  ) +\n  # Renders without outliers to override the colored borders from previous box plot\n  # Staples are rendered so it is clearer where the outliers start\n  geom_boxplot(\n    alpha = 0.8,\n    staplewidth = 0.2,\n    outliers = FALSE,\n    color = \"black\"\n  ) +\n  \n  # 2023 Median reference line\n  geom_hline(\n    yintercept = median2023,\n    color = \"darkgoldenrod4\",\n    linetype = \"dashed\"\n  ) +\n  annotate(\n    \"richtext\",\n    label = paste0(\"2023Q1 Median&lt;br/&gt;**$\", round(median2023 / 1e6, 2), \"M**\"),\n    y = median2023 * 0.65,\n    x = 6.9,\n    color = \"darkgoldenrod4\",\n    size = 3,\n    family = \"Roboto Condensed\"\n  ) +\n  \n  # 2024 Median reference line\n  geom_hline(yintercept = median2024,\n             color = \"brown\",\n             linetype = \"dashed\") +\n  annotate(\n    \"richtext\",\n    label = paste0(\"2024Q1 Median&lt;br/&gt;**$\", round(median2024 / 1e6, 2), \"M**\"),\n    y = median2024 * 1.55,\n    x = 6.9,\n    color = \"brown\",\n    size = 3,\n    family = \"Roboto Condensed\"\n  ) +\n  \n  # Set colors\n  scale_fill_manual(values = c(\"grey60\", \"blue\")) +\n  scale_color_manual(values = c(\"grey60\", \"blue\")) +\n  \n  # Format axes\n  scale_y_log10(\n    limits = c(0.5e6, 100e6),\n    labels = number_format(scale = 1e-6, suffix = \"M\"),\n    n.breaks = 9\n  ) +\n  # Add more space to the right side for the reference line annotations and legend\n  scale_x_discrete(labels = wrap_format(10), expand = expansion(add = c(0.6, 1.4))) +\n  labs(x = \"Property Type\",\n       y = \"Transacted Price ($)\",\n       fill = \"Quarter\") +\n  \n  # Plot styles\n  theme_minimal() +\n  plot_annotation(title = \"Transaction Prices by Property Type for 2023Q1 & 2024Q1\",\n                  subtitle = \"Overall prices have increased by &lt;span style='color:darkgreen;'&gt;**3.7%**&lt;/span&gt; from **$1.63M** to **1.69M**. **Detached Houses** remain the most&lt;br /&gt;expensive property type, while **Executive Condominiums** are still the cheapest.\") &\n  theme(\n    text = element_text(family = \"Roboto Condensed\"),\n    plot.title = element_text(face = \"bold\", size = rel(1.4)),\n    plot.subtitle = element_markdown(color = \"grey50\"),\n    axis.line = element_line(),\n    axis.title = element_text(face = \"bold\", size = rel(1.1)),\n    axis.text = element_text(size = rel(0.9)),\n    axis.ticks.y = element_line(),\n    # Render legend inside the plot\n    legend.position = \"inside\",\n    legend.position.inside = c(1, 0.85),\n    legend.justification = \"right\",\n    legend.location = \"plot\",\n    legend.box.background = element_rect(),\n    legend.title = element_text(face = \"bold\", size = rel(1.1)),\n    legend.text = element_text(size = rel(0.9))\n  )\n\nfinal_viz\n\n\n\n\n\n\n\n\n\nWe adjusted the texts for the core visualization elements so that they are more legible.\nThe landed property types were clustered in one side of the map, with annotation added so the observation that they sold above market median is can easily be seen and interpreted. Another added benefit of this is that property types whose prices are closer to the median are closer to the reference line labels, which makes it easier to do a closer comparison and referencing.\nWe also changed the focus of the subtitle from price variability, which was found to be misleading once we could see the price ranges more clearly.\nThis ends the makeover as we have already greatly improved the clarity and aesthetics."
  },
  {
    "objectID": "Take-home_Exs/Ex2/Take-home_Ex2.html#makeover-results",
    "href": "Take-home_Exs/Ex2/Take-home_Ex2.html#makeover-results",
    "title": "Take-home Exercise 2: DataVis Makeover",
    "section": "5.1 Makeover results",
    "text": "5.1 Makeover results\n\nBeforeAfter\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\nThe makeover significantly enhanced the visualization’s effectiveness in comparing prices by property type between 2023Q1 and 2024Q1. With adjacent box plots, price comparisons from one year to the other became much easier.\nAdditionally, scaling the y-axis from linear to log improved clarity, especially as properties sold for a wide range of prices. We can observe that Semi-Detached Houses and Condominiums show increased variability in 2024Q1, as indicated by longer box and whiskers. This is contrary to the insights from the original visualization, which indicated that prices are less variable for all property types.\nFurthermore, annotations highlighted notable observations, such as all landed properties sold in 2024Q1 for higher than the market median. Additionally, the switch to a white background enhanced the overall aesthetic of the visualization. This allowed for more flexible styling compared to the original’s light blue economist theme, providing a more visually appealing and informative representation of the data."
  },
  {
    "objectID": "Take-home_Exs/Ex2/Take-home_Ex2.html#reflections",
    "href": "Take-home_Exs/Ex2/Take-home_Ex2.html#reflections",
    "title": "Take-home Exercise 2: DataVis Makeover",
    "section": "5.2 Reflections",
    "text": "5.2 Reflections\nDoing this exercise helped me become more critical when viewing data visualizations. With the learning from this course, I was able to know what to look out for when looking at data presented (e.g. what’s missing, what it really means, etc.)\nI also realized that although I was very detailed in my work for Take-home Exercise 1, I focused more on the aesthetics of the visualization more than the clarity as I enjoyed playing around with ggplot themes.\nThis exercise reminded me to balance the clarity with aesthetics and that data visualizations are for enlightenment, not entertaining."
  },
  {
    "objectID": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#one-sample-test-gghistostats-method",
    "href": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#one-sample-test-gghistostats-method",
    "title": "Hands-on Exercise 4A: Visualizing Statistical Analysis",
    "section": "3.1 One-sample test: gghistostats() method",
    "text": "3.1 One-sample test: gghistostats() method\nIn the code chunk below, gghistostats() is used to to build an visual of one-sample test on English scores.\n\ngghistostats(\n  data = exam_data,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\"\n)\n\n\n\n\n\n\n\n\nThe default information included are: - statistical details - Bayes Factor - sample sizes - distribution summary."
  },
  {
    "objectID": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#unpacking-the-bayes-factor",
    "href": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#unpacking-the-bayes-factor",
    "title": "Hands-on Exercise 4A: Visualizing Statistical Analysis",
    "section": "3.2 Unpacking the Bayes Factor",
    "text": "3.2 Unpacking the Bayes Factor\n\nA Bayes factor is the ratio of the likelihood of one particular hypothesis to the likelihood of another. It can be interpreted as a measure of the strength of evidence in favor of one theory among two competing theories.\nThat’s because the Bayes factor gives us a way to evaluate the data in favor of a null hypothesis, and to use external information to do so. It tells us what the weight of the evidence is in favor of a given hypothesis.\nWhen we are comparing two hypotheses, H1 (the alternate hypothesis) and H0 (the null hypothesis), the Bayes Factor is often written as B10. It can be defined mathematically as\n\n\\[\n\\frac{likelihood\\ of\\ data\\ given H_1}{likelihood\\ of\\ data\\ given H_0} = \\frac{P(D|H_1)}{P(D|H_0)}\n\\]\n\nThe Schwarz criterion is one of the easiest ways to calculate rough approximation of the Bayes Factor."
  },
  {
    "objectID": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#how-to-interpret-bayes-factor",
    "href": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#how-to-interpret-bayes-factor",
    "title": "Hands-on Exercise 4A: Visualizing Statistical Analysis",
    "section": "3.3 How to interpret Bayes Factor",
    "text": "3.3 How to interpret Bayes Factor\nA Bayes Factor can be any positive number. One of the most common interpretations is this one—first proposed by Harold Jeffereys (1961) and slightly modified by Lee and Wagenmakers in 2013:"
  },
  {
    "objectID": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#two-sample-mean-test-ggbetweenstats",
    "href": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#two-sample-mean-test-ggbetweenstats",
    "title": "Hands-on Exercise 4A: Visualizing Statistical Analysis",
    "section": "3.4 Two-sample mean test: ggbetweenstats()",
    "text": "3.4 Two-sample mean test: ggbetweenstats()\nIn the code chunk below, ggbetweenstats() is used to build a visual for two-sample mean test of Maths scores by gender.\n\nggbetweenstats(\n  data = exam_data,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\n\nThe default information included are: - statistical details - Bayes Factor - sample sizes - distribution summary"
  },
  {
    "objectID": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#oneway-anova-test-ggbetweenstats-method",
    "href": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#oneway-anova-test-ggbetweenstats-method",
    "title": "Hands-on Exercise 4A: Visualizing Statistical Analysis",
    "section": "3.5 Oneway ANOVA Test: ggbetweenstats() method",
    "text": "3.5 Oneway ANOVA Test: ggbetweenstats() method\nIn the code chunk below, ggbetweenstats() is used to build a visual for One-way ANOVA test on English score by race.\n\nggbetweenstats(\n  data = exam_data,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\n\n\n“ns” → only non-significant\n“s” → only significant\n“all” → everything\n\n\n3.5.1 Summary of tests"
  },
  {
    "objectID": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#significant-test-of-correlation-ggscatterstats",
    "href": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#significant-test-of-correlation-ggscatterstats",
    "title": "Hands-on Exercise 4A: Visualizing Statistical Analysis",
    "section": "3.6 Significant Test of Correlation: ggscatterstats()",
    "text": "3.6 Significant Test of Correlation: ggscatterstats()\nIn the code chunk below, ggscatterstats() is used to build a visual for Significant Test of Correlation between Maths scores and English scores.\n\nggscatterstats(\n  data = exam_data,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = FALSE,\n  )"
  },
  {
    "objectID": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#significant-test-of-association-depedence-ggbarstats-methods",
    "href": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#significant-test-of-association-depedence-ggbarstats-methods",
    "title": "Hands-on Exercise 4A: Visualizing Statistical Analysis",
    "section": "3.7 Significant Test of Association (Depedence) : ggbarstats() methods",
    "text": "3.7 Significant Test of Association (Depedence) : ggbarstats() methods\nIn the code chunk below, the Maths scores is binned into a 4-class variable by using cut().\n\nexam_binned &lt;- exam_data %&gt;% \n  mutate(MATHS_bins = \n           cut(MATHS, \n               breaks = c(0,60,75,85,100))\n)\n\nIn this code chunk below ggbarstats() is used to build a visual for Significant Test of Association.\n\nggbarstats(exam_binned, \n           x = MATHS_bins, \n           y = GENDER)"
  },
  {
    "objectID": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#loading-the-required-packages-1",
    "href": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#loading-the-required-packages-1",
    "title": "Hands-on Exercise 4A: Visualizing Statistical Analysis",
    "section": "4.1 Loading the required packages",
    "text": "4.1 Loading the required packages\nWe will load additional packages:\n\npacman::p_load(readxl, performance, parameters, see)"
  },
  {
    "objectID": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#importing-excel-file-readxl-methods",
    "href": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#importing-excel-file-readxl-methods",
    "title": "Hands-on Exercise 4A: Visualizing Statistical Analysis",
    "section": "4.2 Importing Excel file: readxl methods",
    "text": "4.2 Importing Excel file: readxl methods\nIn the code chunk below, read_xls() of readxl package is used to import the data worksheet of ToyotaCorolla.xls workbook into R.\n\ncar_resale &lt;- read_xls(\"data/ToyotaCorolla.xls\", \n                       \"data\")\nglimpse(car_resale)\n\nRows: 1,436\nColumns: 38\n$ Id               &lt;dbl&gt; 81, 1, 2, 3, 4, 5, 6, 7, 8, 44, 45, 46, 47, 49, 51, 6…\n$ Model            &lt;chr&gt; \"TOYOTA Corolla 1.6 5drs 1 4/5-Doors\", \"TOYOTA Coroll…\n$ Price            &lt;dbl&gt; 18950, 13500, 13750, 13950, 14950, 13750, 12950, 1690…\n$ Age_08_04        &lt;dbl&gt; 25, 23, 23, 24, 26, 30, 32, 27, 30, 27, 22, 23, 27, 2…\n$ Mfg_Month        &lt;dbl&gt; 8, 10, 10, 9, 7, 3, 1, 6, 3, 6, 11, 10, 6, 11, 11, 11…\n$ Mfg_Year         &lt;dbl&gt; 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,…\n$ KM               &lt;dbl&gt; 20019, 46986, 72937, 41711, 48000, 38500, 61000, 9461…\n$ Quarterly_Tax    &lt;dbl&gt; 100, 210, 210, 210, 210, 210, 210, 210, 210, 234, 234…\n$ Weight           &lt;dbl&gt; 1180, 1165, 1165, 1165, 1165, 1170, 1170, 1245, 1245,…\n$ Guarantee_Period &lt;dbl&gt; 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,…\n$ HP_Bin           &lt;chr&gt; \"100-120\", \"&lt; 100\", \"&lt; 100\", \"&lt; 100\", \"&lt; 100\", \"&lt; 100…\n$ CC_bin           &lt;chr&gt; \"1600\", \"&gt;1600\", \"&gt;1600\", \"&gt;1600\", \"&gt;1600\", \"&gt;1600\", …\n$ Doors            &lt;dbl&gt; 5, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 3, 3,…\n$ Gears            &lt;dbl&gt; 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,…\n$ Cylinders        &lt;dbl&gt; 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,…\n$ Fuel_Type        &lt;chr&gt; \"Petrol\", \"Diesel\", \"Diesel\", \"Diesel\", \"Diesel\", \"Di…\n$ Color            &lt;chr&gt; \"Blue\", \"Blue\", \"Silver\", \"Blue\", \"Black\", \"Black\", \"…\n$ Met_Color        &lt;dbl&gt; 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1,…\n$ Automatic        &lt;dbl&gt; 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ Mfr_Guarantee    &lt;dbl&gt; 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1,…\n$ BOVAG_Guarantee  &lt;dbl&gt; 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ ABS              &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ Airbag_1         &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ Airbag_2         &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ Airco            &lt;dbl&gt; 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ Automatic_airco  &lt;dbl&gt; 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1,…\n$ Boardcomputer    &lt;dbl&gt; 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ CD_Player        &lt;dbl&gt; 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1,…\n$ Central_Lock     &lt;dbl&gt; 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ Powered_Windows  &lt;dbl&gt; 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ Power_Steering   &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ Radio            &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ Mistlamps        &lt;dbl&gt; 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ Sport_Model      &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1,…\n$ Backseat_Divider &lt;dbl&gt; 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ Metallic_Rim     &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ Radio_cassette   &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ Tow_Bar          &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…"
  },
  {
    "objectID": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#multiple-regression-model-using-lm",
    "href": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#multiple-regression-model-using-lm",
    "title": "Hands-on Exercise 4A: Visualizing Statistical Analysis",
    "section": "5.1 Multiple Regression Model using lm()",
    "text": "5.1 Multiple Regression Model using lm()\nThe code chunk below is used to calibrate a multiple linear regression model by using lm() of Base Stats of R.\n\nmodel &lt;- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01"
  },
  {
    "objectID": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#model-diagnostic-checking-for-multicolinearity",
    "href": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#model-diagnostic-checking-for-multicolinearity",
    "title": "Hands-on Exercise 4A: Visualizing Statistical Analysis",
    "section": "5.2 Model Diagnostic: checking for multicolinearity",
    "text": "5.2 Model Diagnostic: checking for multicolinearity\nIn the code chunk, check_collinearity() of performance package.\n\ncheck_collinearity(model)\n\n# Check for Multicollinearity\n\nLow Correlation\n\n             Term  VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n               KM 1.46 [ 1.37,  1.57]         1.21      0.68     [0.64, 0.73]\n           Weight 1.41 [ 1.32,  1.51]         1.19      0.71     [0.66, 0.76]\n Guarantee_Period 1.04 [ 1.01,  1.17]         1.02      0.97     [0.86, 0.99]\n\nHigh Correlation\n\n      Term   VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n Age_08_04 31.07 [28.08, 34.38]         5.57      0.03     [0.03, 0.04]\n  Mfg_Year 31.16 [28.16, 34.48]         5.58      0.03     [0.03, 0.04]\n\n\nWe can also plot the function result\n\ncheck_c &lt;- check_collinearity(model)\nplot(check_c)"
  },
  {
    "objectID": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#model-diagnostic-checking-normality-assumption",
    "href": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#model-diagnostic-checking-normality-assumption",
    "title": "Hands-on Exercise 4A: Visualizing Statistical Analysis",
    "section": "5.3 Model Diagnostic: checking normality assumption",
    "text": "5.3 Model Diagnostic: checking normality assumption\nIn the code chunk, check_normality() of performance package.\n\nmodel1 &lt;- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period, data = car_resale)\n\n\ncheck_n &lt;- check_normality(model1)\n\n\nplot(check_n)"
  },
  {
    "objectID": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#model-diagnostic-check-model-for-homogeneity-of-variances",
    "href": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#model-diagnostic-check-model-for-homogeneity-of-variances",
    "title": "Hands-on Exercise 4A: Visualizing Statistical Analysis",
    "section": "5.4 Model Diagnostic: Check model for homogeneity of variances",
    "text": "5.4 Model Diagnostic: Check model for homogeneity of variances\nIn the code chunk, check_heteroscedasticity() of performance package.\n\ncheck_h &lt;- check_heteroscedasticity(model1)\n\n\nplot(check_h)"
  },
  {
    "objectID": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#model-diagnostic-complete-check",
    "href": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#model-diagnostic-complete-check",
    "title": "Hands-on Exercise 4A: Visualizing Statistical Analysis",
    "section": "5.5 Model Diagnostic: Complete check",
    "text": "5.5 Model Diagnostic: Complete check\nWe can also perform the complete by using check_model().\n\ncheck_model(model1)"
  },
  {
    "objectID": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#visualising-regression-parameters-see-methods",
    "href": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#visualising-regression-parameters-see-methods",
    "title": "Hands-on Exercise 4A: Visualizing Statistical Analysis",
    "section": "5.6 Visualising Regression Parameters: see methods",
    "text": "5.6 Visualising Regression Parameters: see methods\n\nplot(parameters(model1))"
  },
  {
    "objectID": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#visualising-regression-parameters-ggcoefstats-methods",
    "href": "Hands-on_Exs/Ex4A/Hands-on_Ex4A.html#visualising-regression-parameters-ggcoefstats-methods",
    "title": "Hands-on Exercise 4A: Visualizing Statistical Analysis",
    "section": "5.7 Visualising Regression Parameters: ggcoefstats() methods",
    "text": "5.7 Visualising Regression Parameters: ggcoefstats() methods\nIn the code below, ggcoefstats() of ggstatsplot package to visualise the parameters of a regression model.\n\nggcoefstats(model1, \n            output = \"plot\")"
  },
  {
    "objectID": "Hands-on_Exs/Ex4B/Hands-on_Ex4B.html",
    "href": "Hands-on_Exs/Ex4B/Hands-on_Ex4B.html",
    "title": "Hands-on Exercise 4B: Visualizing Uncertainty",
    "section": "",
    "text": "This hands-on exercise covers Chapter 11: Visual Uncertainty.\nI learned about the following:\n\nplotting uncertainty through error bars\ncreating hypothetical outcome plots (HOPs) by using ungeviz package"
  },
  {
    "objectID": "Hands-on_Exs/Ex4B/Hands-on_Ex4B.html#loading-the-required-packages",
    "href": "Hands-on_Exs/Ex4B/Hands-on_Ex4B.html#loading-the-required-packages",
    "title": "Hands-on Exercise 4B: Visualizing Uncertainty",
    "section": "2.1 Loading the required packages",
    "text": "2.1 Loading the required packages\nFor this exercise we will use the following R packages:\n\ntidyverse, a family of R packages for data science process,\nplotly for creating interactive plot,\ngganimate for creating animation plot,\ngifski for gganimate to generate gif animations\nDT for displaying interactive html table,\ncrosstalk for for implementing cross-widget interactions (currently, linked brushing and filtering), and\nggdist for visualising distribution and uncertainty.\nungeviz for visualizing uncertainty\nknitr for rendering a simple table\n\n\n\n\n\n\n\nI needed to install devtools first by Tools &gt; Install Packages.\nAdded the following libraries from the ones of the chapter as they are also necessary to be install individually:\n\ngifski\nknitr\n\n\n\n\n\npacman::p_load(tidyverse, plotly, gifski, gganimate, DT, crosstalk, ggdist, knitr)\ndevtools::install_github(\"wilkelab/ungeviz\")\nlibrary(ungeviz)"
  },
  {
    "objectID": "Hands-on_Exs/Ex4B/Hands-on_Ex4B.html#loading-the-data",
    "href": "Hands-on_Exs/Ex4B/Hands-on_Ex4B.html#loading-the-data",
    "title": "Hands-on Exercise 4B: Visualizing Uncertainty",
    "section": "2.2 Loading the data",
    "text": "2.2 Loading the data\nWe will use the same exam_data dataset from Hands-on Ex 1 and load it into the RStudio environment using read_csv().\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\nglimpse(exam_data)\n\nRows: 322\nColumns: 7\n$ ID      &lt;chr&gt; \"Student321\", \"Student305\", \"Student289\", \"Student227\", \"Stude…\n$ CLASS   &lt;chr&gt; \"3I\", \"3I\", \"3H\", \"3F\", \"3I\", \"3I\", \"3I\", \"3I\", \"3I\", \"3H\", \"3…\n$ GENDER  &lt;chr&gt; \"Male\", \"Female\", \"Male\", \"Male\", \"Male\", \"Female\", \"Male\", \"M…\n$ RACE    &lt;chr&gt; \"Malay\", \"Malay\", \"Chinese\", \"Chinese\", \"Malay\", \"Malay\", \"Chi…\n$ ENGLISH &lt;dbl&gt; 21, 24, 26, 27, 27, 31, 31, 31, 33, 34, 34, 36, 36, 36, 37, 38…\n$ MATHS   &lt;dbl&gt; 9, 22, 16, 77, 11, 16, 21, 18, 19, 49, 39, 35, 23, 36, 49, 30,…\n$ SCIENCE &lt;dbl&gt; 15, 16, 16, 31, 25, 16, 25, 27, 15, 37, 42, 22, 32, 36, 35, 45…\n\n\nThere are a total of seven attributes in the exam_data tibble data frame. Four of them are categorical data type and the other three are in continuous data type.\n\nThe categorical attributes are: ID, CLASS, GENDER and RACE.\nThe continuous attributes are: MATHS, ENGLISH and SCIENCE."
  },
  {
    "objectID": "Hands-on_Exs/Ex4B/Hands-on_Ex4B.html#plotting-standard-error-bars-of-point-estimates",
    "href": "Hands-on_Exs/Ex4B/Hands-on_Ex4B.html#plotting-standard-error-bars-of-point-estimates",
    "title": "Hands-on Exercise 4B: Visualizing Uncertainty",
    "section": "3.1 Plotting standard error bars of point estimates",
    "text": "3.1 Plotting standard error bars of point estimates\nNow we are ready to plot the standard error bars of mean maths score by race as shown below.\n\n\nShow the code\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard error of mean maths score by rac\")"
  },
  {
    "objectID": "Hands-on_Exs/Ex4B/Hands-on_Ex4B.html#plotting-confidence-interval-of-point-estimates",
    "href": "Hands-on_Exs/Ex4B/Hands-on_Ex4B.html#plotting-confidence-interval-of-point-estimates",
    "title": "Hands-on Exercise 4B: Visualizing Uncertainty",
    "section": "3.2 Plotting confidence interval of point estimates",
    "text": "3.2 Plotting confidence interval of point estimates\nInstead of plotting the standard error bar of point estimates, we can also plot the confidence intervals of mean maths score by race.\n\n\nShow the code\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=reorder(RACE, -mean), \n        ymin=mean-1.96*se, \n        ymax=mean+1.96*se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  labs(x = \"Maths score\",\n       title = \"95% confidence interval of mean maths score by race\")"
  },
  {
    "objectID": "Hands-on_Exs/Ex4B/Hands-on_Ex4B.html#visualizing-the-uncertainty-of-point-estimates-with-interactive-error-bars",
    "href": "Hands-on_Exs/Ex4B/Hands-on_Ex4B.html#visualizing-the-uncertainty-of-point-estimates-with-interactive-error-bars",
    "title": "Hands-on Exercise 4B: Visualizing Uncertainty",
    "section": "3.3 Visualizing the uncertainty of point estimates with interactive error bars",
    "text": "3.3 Visualizing the uncertainty of point estimates with interactive error bars\nWe will now plot interactive error bars for the 99% confidence interval of mean maths score by race as shown in the figure below.\n\n\nShow the code\nshared_df = SharedData$new(my_sum)\n\nbscols(widths = c(4,8),\n       ggplotly((ggplot(shared_df) +\n                   geom_errorbar(aes(\n                     x=reorder(RACE, -mean),\n                     ymin=mean-2.58*se, \n                     ymax=mean+2.58*se), \n                     width=0.2, \n                     colour=\"black\", \n                     alpha=0.9, \n                     size=0.5) +\n                   geom_point(aes(\n                     x=RACE, \n                     y=mean, \n                     text = paste(\"Race:\", `RACE`, \n                                  \"&lt;br&gt;N:\", `n`,\n                                  \"&lt;br&gt;Avg. Scores:\", round(mean, digits = 2),\n                                  \"&lt;br&gt;95% CI:[\", \n                                  round((mean-2.58*se), digits = 2), \",\",\n                                  round((mean+2.58*se), digits = 2),\"]\")),\n                     stat=\"identity\", \n                     color=\"red\", \n                     size = 1.5, \n                     alpha=1) + \n                   xlab(\"Race\") + \n                   ylab(\"Average Scores\") + \n                   theme_minimal() + \n                   theme(axis.text.x = element_text(\n                     angle = 45, vjust = 0.5, hjust=1)) +\n                   ggtitle(\"99% Confidence interval of average /&lt;br&gt;maths scores by race\")), \n                tooltip = \"text\"), \n       DT::datatable(shared_df, \n                     rownames = FALSE, \n                     class=\"compact\", \n                     width=\"100%\", \n                     options = list(pageLength = 10,\n                                    scrollX=T), \n                     colnames = c(\"No. of pupils\", \n                                  \"Avg Scores\",\n                                  \"Std Dev\",\n                                  \"Std Error\")) %&gt;%\n         formatRound(columns=c('mean', 'sd', 'se'),\n                     digits=2))"
  },
  {
    "objectID": "Hands-on_Exs/Ex4B/Hands-on_Ex4B.html#using-stat_pointinterval",
    "href": "Hands-on_Exs/Ex4B/Hands-on_Ex4B.html#using-stat_pointinterval",
    "title": "Hands-on Exercise 4B: Visualizing Uncertainty",
    "section": "4.1 Using stat_pointinterval()",
    "text": "4.1 Using stat_pointinterval()\nWe will build a visual for displaying distribution of maths scores by race.\n\nexam_data %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval() +\n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n\n\n\n\n\n\n\n\nstat_pointinterval() can also be called with extra arguments\n\nexam_data %&gt;%\n  ggplot(aes(x = RACE, y = MATHS)) +\n  stat_pointinterval(.width = 0.95,\n  .point = median,\n  .interval = qi) +\n  labs(\n    title = \"Visualising confidence intervals of median math score\",\n    subtitle = \"Median Point + Multiple-interval plot\")"
  },
  {
    "objectID": "Hands-on_Exs/Ex4B/Hands-on_Ex4B.html#using-stat_pointinterval-makeover",
    "href": "Hands-on_Exs/Ex4B/Hands-on_Ex4B.html#using-stat_pointinterval-makeover",
    "title": "Hands-on Exercise 4B: Visualizing Uncertainty",
    "section": "4.2 Using stat_pointinterval() (makeover)",
    "text": "4.2 Using stat_pointinterval() (makeover)\nThe previous plot shows the 95% confidence interval. This plot below will show the 95% (thick line) to 99% (thin line) confidence interval.\n\n\n\n\n\n\nThe default for .width seems to be .width = c(0.66, 0.95) from the docs.\n\n\n\n\nexam_data %&gt;%\n  ggplot(aes(x = RACE, y = MATHS)) +\n  stat_pointinterval(.width = c(0.95, 0.99),\n  .point = median,\n  .interval = qi) +\n  labs(\n    title = \"Visualising confidence intervals of median math score\",\n    subtitle = \"Median Point + Multiple-interval plot\")"
  },
  {
    "objectID": "Hands-on_Exs/Ex4B/Hands-on_Ex4B.html#using-stat_gradientinterval",
    "href": "Hands-on_Exs/Ex4B/Hands-on_Ex4B.html#using-stat_gradientinterval",
    "title": "Hands-on Exercise 4B: Visualizing Uncertainty",
    "section": "4.3 Using stat_gradientinterval()",
    "text": "4.3 Using stat_gradientinterval()\nIn the code chunk below, stat_gradientinterval() of ggdist is used to build a visual for displaying distribution of maths scores by race.\n\nexam_data %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_gradientinterval(   \n    fill = \"skyblue\",      \n    show.legend = TRUE     \n  ) +                        \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Gradient + interval plot\")\n\n\n\n\n\n\n\n\nThis plots gradients based on distribution. The darker color, the more observations with that value."
  },
  {
    "objectID": "Hands-on_Exs/Ex4C/Hands-on_Ex4C.html",
    "href": "Hands-on_Exs/Ex4C/Hands-on_Ex4C.html",
    "title": "Hands-on Exercise 4C: Building Funnel Plot with R",
    "section": "",
    "text": "This hands-on exercise covers Chapter 12: Funnel Plots for Fair Comparisons.\nI learned about the following:\n\ngenerating funnel plots"
  },
  {
    "objectID": "Hands-on_Exs/Ex4C/Hands-on_Ex4C.html#loading-the-required-packages",
    "href": "Hands-on_Exs/Ex4C/Hands-on_Ex4C.html#loading-the-required-packages",
    "title": "Hands-on Exercise 4C: Building Funnel Plot with R",
    "section": "2.1 Loading the required packages",
    "text": "2.1 Loading the required packages\nFor this exercise we will use the following R packages:\n\nreadr for importing csv into R.\nFunnelPlotR for creating funnel plot.\nggplot2 for creating funnel plot manually.\nknitr for building static html table.\nplotly for creating interactive funnel plot.\n\n\npacman::p_load(tidyverse, FunnelPlotR, plotly, knitr)"
  },
  {
    "objectID": "Hands-on_Exs/Ex4C/Hands-on_Ex4C.html#loading-the-data",
    "href": "Hands-on_Exs/Ex4C/Hands-on_Ex4C.html#loading-the-data",
    "title": "Hands-on Exercise 4C: Building Funnel Plot with R",
    "section": "2.2 Loading the data",
    "text": "2.2 Loading the data\nIn this section, COVID-19_DKI_Jakarta will be used. The data was downloaded from Open Data Covid-19 Provinsi DKI Jakarta portal. For this hands-on exercise, we are going to compare the cumulative COVID-19 cases and death by sub-district (i.e. kelurahan) as at 31st July 2021, DKI Jakarta.\nThe code chunk below imports the data into R and save it into a tibble data frame object called covid19.\n\ncovid19 &lt;- read_csv(\"data/COVID-19_DKI_Jakarta.csv\") %&gt;%\n  mutate_if(is.character, as.factor)\n\nkable(head(covid19, 10))\n\n\n\n\n\n\n\n\n\n\n\n\n\nSub-district ID\nCity\nDistrict\nSub-district\nPositive\nRecovered\nDeath\n\n\n\n\n3172051003\nJAKARTA UTARA\nPADEMANGAN\nANCOL\n1776\n1691\n26\n\n\n3173041007\nJAKARTA BARAT\nTAMBORA\nANGKE\n1783\n1720\n29\n\n\n3175041005\nJAKARTA TIMUR\nKRAMAT JATI\nBALE KAMBANG\n2049\n1964\n31\n\n\n3175031003\nJAKARTA TIMUR\nJATINEGARA\nBALI MESTER\n827\n797\n13\n\n\n3175101006\nJAKARTA TIMUR\nCIPAYUNG\nBAMBU APUS\n2866\n2792\n27\n\n\n3174031002\nJAKARTA SELATAN\nMAMPANG PRAPATAN\nBANGKA\n1828\n1757\n26\n\n\n3175051002\nJAKARTA TIMUR\nPASAR REBO\nBARU\n2541\n2433\n37\n\n\n3175041004\nJAKARTA TIMUR\nKRAMAT JATI\nBATU AMPAR\n3608\n3445\n68\n\n\n3171071002\nJAKARTA PUSAT\nTANAH ABANG\nBENDUNGAN HILIR\n2012\n1937\n38\n\n\n3175031002\nJAKARTA TIMUR\nJATINEGARA\nBIDARA CINA\n2900\n2773\n52"
  },
  {
    "objectID": "Hands-on_Exs/Ex4C/Hands-on_Ex4C.html#basic-plot",
    "href": "Hands-on_Exs/Ex4C/Hands-on_Ex4C.html#basic-plot",
    "title": "Hands-on Exercise 4C: Building Funnel Plot with R",
    "section": "3.1 Basic Plot",
    "text": "3.1 Basic Plot\nThe code chunk below plots a funnel plot.\n\nfunnel_plot(\n  .data = covid19,\n  numerator = Positive,\n  denominator = Death,\n  group = `Sub-district`\n)\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 0 are outliers. \nPlot is adjusted for overdispersion. \n\n\nThings to learn from the code chunk above.\n\ngroup in this function is different from the scatterplot. Here, it defines the level of the points to be plotted i.e. Sub-district, District or City. If Cityc is chosen, there are only six data points.\nBy default, data_typeargument is “SR”.\nlimit: Plot limits, accepted values are: 95 or 99, corresponding to 95% or 99.8% quantiles of the distribution."
  },
  {
    "objectID": "Hands-on_Exs/Ex4C/Hands-on_Ex4C.html#makeover-1",
    "href": "Hands-on_Exs/Ex4C/Hands-on_Ex4C.html#makeover-1",
    "title": "Hands-on Exercise 4C: Building Funnel Plot with R",
    "section": "3.2 Makeover 1",
    "text": "3.2 Makeover 1\nFrom the plot above, the values are really low so we will adjust the range of y-axis, along with changing the data_type from the default “SR” (indirectly standardised ratios) to “PR” (proportions).\n\nfunnel_plot(\n  .data = covid19,\n  numerator = Death,\n  denominator = Positive,\n  group = `Sub-district`,\n  data_type = \"PR\",\n  x_range = c(0, 6500),\n  y_range = c(0, 0.05)\n)"
  },
  {
    "objectID": "Hands-on_Exs/Ex4C/Hands-on_Ex4C.html#makeover-3",
    "href": "Hands-on_Exs/Ex4C/Hands-on_Ex4C.html#makeover-3",
    "title": "Hands-on Exercise 4C: Building Funnel Plot with R",
    "section": "3.3 Makeover 3",
    "text": "3.3 Makeover 3\n\nfunnel_plot(\n  .data = covid19,\n  numerator = Death,\n  denominator = Positive,\n  group = `Sub-district`,\n  data_type = \"PR\",   \n  xrange = c(0, 6500),  \n  yrange = c(0, 0.05),\n  label = NA,\n  title = \"Cumulative COVID-19 Fatality Rate by Cumulative Total Number of COVID-19 Positive Cases\", #&lt;&lt;           \n  x_label = \"Cumulative COVID-19 Positive Cases\", #&lt;&lt;\n  y_label = \"Cumulative Fatality Rate\"  #&lt;&lt;\n)\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n\n\nThings to learn from the code chunk above.\n\nlabel = NA argument is to remove the default label outliers feature.\ntitle argument is used to add plot title.\nx_label and y_label arguments are used to add/edit x-axis and y-axis titles."
  },
  {
    "objectID": "Hands-on_Exs/Ex4C/Hands-on_Ex4C.html#computing-the-basic-derived-fields",
    "href": "Hands-on_Exs/Ex4C/Hands-on_Ex4C.html#computing-the-basic-derived-fields",
    "title": "Hands-on Exercise 4C: Building Funnel Plot with R",
    "section": "4.1 Computing the basic derived fields",
    "text": "4.1 Computing the basic derived fields\nTo plot the funnel plot from scratch, we need to derive cumulative death rate and standard error of cumulative death rate.\n\ndf &lt;- covid19 %&gt;%\n  mutate(rate = Death / Positive) %&gt;%\n  mutate(rate.se = sqrt((rate*(1-rate)) / (Positive))) %&gt;%\n  filter(rate &gt; 0)\n\n\n\n\n\n\n\nIn this code, we supply the numerator and denominator in rate corresponding to the ones supplies in funnel_plot().\n\n\n\nNext, the fit.mean is computed by using the code chunk below.\n\nfit.mean &lt;- weighted.mean(df$rate, 1/df$rate.se^2)"
  },
  {
    "objectID": "Hands-on_Exs/Ex4C/Hands-on_Ex4C.html#calculate-lower-and-upper-limits-for-95-and-99.9-ci",
    "href": "Hands-on_Exs/Ex4C/Hands-on_Ex4C.html#calculate-lower-and-upper-limits-for-95-and-99.9-ci",
    "title": "Hands-on Exercise 4C: Building Funnel Plot with R",
    "section": "4.2 Calculate lower and upper limits for 95% and 99.9% CI",
    "text": "4.2 Calculate lower and upper limits for 95% and 99.9% CI\nThe code chunk below is used to compute the lower and upper limits for 95% confidence interval.\n\nnumber.seq &lt;- seq(1, max(df$Positive), 1)\nnumber.ll95 &lt;- fit.mean - 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul95 &lt;- fit.mean + 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ll999 &lt;- fit.mean - 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul999 &lt;- fit.mean + 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \ndfCI &lt;- data.frame(number.ll95, number.ul95, number.ll999, \n                   number.ul999, number.seq, fit.mean)"
  },
  {
    "objectID": "Hands-on_Exs/Ex4C/Hands-on_Ex4C.html#plotting-a-static-funnel-plot",
    "href": "Hands-on_Exs/Ex4C/Hands-on_Ex4C.html#plotting-a-static-funnel-plot",
    "title": "Hands-on Exercise 4C: Building Funnel Plot with R",
    "section": "4.3 Plotting a static funnel plot",
    "text": "4.3 Plotting a static funnel plot\n\n\nShow the code\np &lt;- ggplot(df, aes(x = Positive, y = rate)) +\n  geom_point(aes(label=`Sub-district`), \n             alpha=0.4) +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_hline(data = dfCI, \n             aes(yintercept = fit.mean), \n             size = 0.4, \n             colour = \"grey40\") +\n  coord_cartesian(ylim=c(0,0.05)) +\n  annotate(\"text\", x = 1, y = -0.13, label = \"95%\", size = 3, colour = \"grey40\") + \n  annotate(\"text\", x = 4.5, y = -0.18, label = \"99%\", size = 3, colour = \"grey40\") + \n  ggtitle(\"Cumulative Fatality Rate by Cumulative Number of COVID-19 Cases\") +\n  xlab(\"Cumulative Number of COVID-19 Cases\") + \n  ylab(\"Cumulative Fatality Rate\") +\n  theme_light() +\n  theme(plot.title = element_text(size=12),\n        legend.position = c(0.91,0.85), \n        legend.title = element_text(size=7),\n        legend.text = element_text(size=7),\n        legend.background = element_rect(colour = \"grey60\", linetype = \"dotted\"),\n        legend.key.height = unit(0.3, \"cm\"))\np"
  },
  {
    "objectID": "Hands-on_Exs/Ex4C/Hands-on_Ex4C.html#interactive-plot-with-plotly",
    "href": "Hands-on_Exs/Ex4C/Hands-on_Ex4C.html#interactive-plot-with-plotly",
    "title": "Hands-on Exercise 4C: Building Funnel Plot with R",
    "section": "4.4 Interactive plot with plotly",
    "text": "4.4 Interactive plot with plotly\nThe funnel plot created using ggplot2 functions can be made interactive with ggplotly() of plotly r package.\n\nfp_ggplotly &lt;- ggplotly(p,\n  tooltip = c(\"label\", \n              \"x\", \n              \"y\"))\nfp_ggplotly"
  }
]
{
  "hash": "a82d123fb91beb1bbcd448c76d0d48d8",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take Home Ex3: VAST Challenge 2024 Mini-Challenge 3 [WIP]\"\nauthor: \"Kristine Joy Paas\"\ndate: \"22 May 2024\"\ndate-modified: \"last-modified\"\nformat: html\nexecute: \n  echo: true\n  eval: false\n  warning: false\n  freeze: true\n---\n\n\n# 1 Overview\n\n# 2 Setup\n\n## 2.1 Loading Packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(\n  jsonlite,\n  tidyverse,\n  ggraph,\n  tidygraph,\n  visNetwork,\n  patchwork,\n  ggtext,\n  knitr,\n  igraph,\n  ggiraph\n)\n```\n:::\n\n\nWe will also set some values to have consistency throughout all graphs. This is also so that we don't have to search and replace all instances of these\n\n\n::: {.cell}\n\n```{.r .cell-code}\nFONT_FAMILY = \"Roboto Condensed\"\nPRIMARY_COLOR = \"blue\"\nMUTED_COLOR = \"grey50\"\n```\n:::\n\n\n## 2.2 Loading Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc3_data <- fromJSON(\"data/mc3.json\")\nglimpse(mc3_data)\n```\n:::\n\n\nIt contains graph data, where nodes can be accessed via `nodes` and edges via `links`. This dataset has a lot of columns but we will only filter the relevant data during wrangling..\n\n# 3 Data Wrangling\n\n## 3.1 Extracting Graph Elements\n\nFor simplicity, we will only extract the columns that are needed to do graph analysis. We will also *ignore* the time elements for now so we will not be including them in the analysis.\n\n::: panel-tabset\n### Nodes\n\nThe nodes represent the entities in the network. They can be people or companies.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc3_nodes_raw <- as_tibble(mc3_data$nodes)\nglimpse(mc3_nodes_raw)\n```\n:::\n\n\nWe will only retain the following columns:\n\n-   `id` - to serve as the identifier for the node\n\n-   `type` - to differentiate people from companies in the graph.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc3_nodes_lite <- mc3_nodes_raw %>% select(id, type)\n```\n:::\n\n\n### Edges\n\nThe edges represent the relationship between different nodes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc3_edges_raw <- as_tibble(mc3_data$links)\nglimpse(mc3_edges_raw)\n```\n:::\n\n\nWe will only retain the following columns:\n\n-   `source` - to identify the *actor* of the relationship, corresponds to `id` in nodes.\n\n-   `target` - to identify the *receiver* of the relationship, corresponds to `id` in nodes.\n\n-   `type` - to identify the type of the relationship\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc3_edges_lite <- mc3_edges_raw %>% select(source, target, type)\n```\n:::\n\n:::\n\n## 3.2 Closer look at *type*\n\nBoth the `nodes` and `edges` have `type` which contains the type of the nodes and edges. We will assign a `supertype` and a `subtype` from `type`.\n\n::: panel-tabset\n### Nodes\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(mc3_nodes_lite$type) %>% unique()\n```\n:::\n\n\n`supertype` - type of entity, either *Person* or *Organization*\n\n`subtype` - subcategory of *supertype*, e.g., *Company, FishingCompany, CEO*\n\n### Edges\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(mc3_edges_lite$type) %>% unique()\n```\n:::\n\n\n`supertype` - type of relationship, either *Ownership*, *Employment, Relationship.*\n\n`subtype` - subcategory of *supertype*, e.g., *Shareholdership, BeneficialOwnership, FamilyRelationship*\n:::\n\n## 3.3 Preparing the data\n\nWith the considerations above, we will shape the data needed for our graph visualization.\n\n::: panel-tabset\n### Nodes\n\nFor nodes, we will also assign a shape for visualization depending on *supertype.* For people, we will use üìê, while we use üî¥ for organizations.\n\nLastly, we will assign numbers to each node as an alternative label to the ids (as they are long).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nPERSON_SHAPE = \"triangle\"\nORGANIZATION_SHAPE = \"circle\"\n\nmc3_nodes_clean <- mc3_nodes_lite %>%\n  mutate(\n    supertype = strsplit(type, \".\", fixed=TRUE) %>% sapply('[', 2),\n    # Get the last type as subtype. In the case of Entity.Person,\n    # both supertype and subtype are \"Person\".\n    subtype = strsplit(type, \".\", fixed=TRUE) %>% sapply(tail, n=1),\n    num = row_number(),\n    shape = ifelse(supertype == \"Person\", PERSON_SHAPE, ORGANIZATION_SHAPE)\n  ) %>%\n  select(id, num, supertype, subtype, shape)\n\nkable(head(mc3_nodes_clean))\n```\n:::\n\n\nLet's also check if `supertype`, `subtype`, and `shape` have been mapped correctly.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc3_nodes_clean %>%\n  group_by(supertype, subtype, shape) %>%\n  summarize(count = n()) %>%\n  arrange(-count) %>%\n  kable()\n```\n:::\n\n\n### Edges\n\nFor `ggraph` to plot the edges correctly, we need to assigns weights to the edges. For simplicity, let us assign the number of edges with the same `source`, `target` and `type`.\n\nLastly, we will change `source` and `target` to `from` and `to`, respectively for compatibility with network functions we will use.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc3_edges_clean <- mc3_edges_lite %>%\n  rename(from = source, to = target, ) %>%\n  mutate(\n    supertype = ifelse(\n      grepl(\"Event.Owns\", type),\n      \"Ownership\",\n      ifelse(grepl(\"Relationship\", type), \"Relationship\", \"Employment\")\n    ),\n    subtype = strsplit(type, \".\", fixed = TRUE) %>% sapply(tail, n = 1)\n  ) %>%\n  filter(from != to) %>%\n  group_by(from, to, supertype, subtype) %>%\n  summarize(weight = n())\n\nkable(head(mc3_edges_clean))\n```\n:::\n\n\nLastly, let's check if `type` has been mapped correctly to `supertype` and `subtype`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc3_edges_clean %>%\n  group_by(supertype, subtype) %>%\n  summarize(count = n()) %>%\n  arrange(-count) %>%\n  kable()\n```\n:::\n\n:::\n\n## 3.4 Preparing the supernetwork\n\nWe will prepare the supernetwork from the nodes and edges we prepared.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsupernetwork = tbl_graph(edges = mc3_edges_clean,\n                         nodes = mc3_nodes_clean,\n                         directed = TRUE)\n```\n:::\n\n\nWe call this a supernetwork as this is a collection of smaller, unconnected networks.\n\n\n::: {.cell}\n\n:::\n\n\n# 4 Investigating *SouthSeafood Express Corp*\n\nFrom VAST Challenge 2024 [Mini-case 3](https://vast-challenge.github.io/2024/MC3.html):\n\n> Identify the network associated with SouthSeafood Express Corp and visualize how this network and competing businesses change as a result of their illegal fishing behavior. Which companies benefited from SouthSeafood Express Corp legal troubles? Are there other suspicious transactions that may be related to illegal fishing? Provide visual evidence for your conclusions.\n\n::: callout-tip\n## Solving the smaller problem first\n\nAlthough the question about *SouthSeafood Express Corp* is the last question, we will start with investigating its relationships so we can generalize to make inferences to the rest of the network, for Question 3.\n:::\n\nTo do the investigation, our strategy is to start with the smallest network first to the biggest. We will be looking at:\n\n1.  Direct neighbors - They have the strongest influence on and can be influenced the most by *SouthSeafood Express Corp.*\n2.  Sphere of influence - Based on Nicholas A. Christakis and James H. Fowler's theory of [**Three Degrees of Influence**](https://www.strategy-business.com/article/10218), which states that that influence gradually dissipates and eventually cease to be notable beyond the **3rd degree of separation**.\n3.  Full connected network - We will look at the entire network containing the nodes that have paths to *SouthSeafood Express Corp.*\n\nIn order to do this, we need to identify the *SouthSeafood Express Corp* node first.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nssfec_node <- which(V(supernetwork)$id == \"SouthSeafood Express Corp\")\n```\n:::\n\n\nWe will use `ego()` and `induced_graph()` functions from `igraph` to generate the subnetworks related to this node.\n\nWe will use the function below to get the subgraphs:\n\n::: {.callout-important collapse=\"true\"}\n## RStudio breaks when defining functions in Quarto doc\n\nRstudio breaks as soon as I type `function(){}` in a code chunk in a Quarto document.\n\nThis results in not being able to save the file and not being able to run any code chunk. Hence, the function is defined in a separate R file and included in this doc.\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nextract_subnetwork <- function(graph, node_name, distance=NULL) {\n  node <- which(V(supernetwork)$name == node_name)\n  distance <- ifelse(is.null(distance), length(graph), distance)\n  vertices <- ego(graph, nodes = node, order = distance)[[1]]\n  igraph_subgraph <- induced_subgraph(graph, vids = vertices)\n  nodes_df <- as_data_frame(igraph_subgraph, what = \"vertices\")\n  edges_sf <- as_data_frame(igraph_subgraph, what = \"edges\")\n  tbl_graph(nodes=nodes_df, edges=edges_sf, directed=is_directed(graph))\n}\n```\n:::\n\n\n\n\n## 4.1 Direct Neighbors\n\n### 4.1.1 Extracting the subgraph\n\nWe will first extract the direct neighbors for *SouthSeafood Express Corp*.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nssfec_direct_neighbors <- extract_subgraph(supernetwork, ssfec_node, distance = 1)\n```\n:::\n\n\nWe will also add focus on the *SouthSeafood Express Corp* node to emphasize it in the plot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nssfec_direct_neighbors <- ssfec_direct_neighbors %>%\n  mutate(focus = (id == \"SouthSeafood Express Corp\"))\n```\n:::\n\n\n### 4.1.2 Plotting the graph\n\nFinally, we can plot the graph of *SouthSeafood Express Corp* direct neighbors.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show ggraph code\"}\nggraph(ssfec_direct_neighbors, layout = \"linear\", circular = TRUE) +\n  # Render nodes\n  geom_node_point(aes(color = focus, shape = shape), show.legend = FALSE, size = 30) +\n  geom_node_text(\n    aes(label = str_wrap(id, width = -1)),\n    family = FONT_FAMILY,\n    size = 3,\n    color = \"white\"\n  ) +\n  scale_color_manual(values = c(MUTED_COLOR, PRIMARY_COLOR)) +\n  \n  # Render edges\n  geom_edge_link(\n    aes(label = subtype),\n    # Control arrow\n    arrow = arrow(type = \"closed\", length = unit(0.025, \"npc\")),\n    end_cap = circle(12, \"mm\"),\n    start_cap = circle(12, \"mm\"),\n    # Format labels\n    angle_calc = \"along\",\n    label_dodge = unit(0.04, \"npc\"),\n    family = FONT_FAMILY,\n    show.legend = FALSE\n  ) +\n  \n  # Hack to reduce distance between nodes\n  # This is to not clip the nodes in the edge of the plot\n  # ref: https://stackoverflow.com/a/66991383\n  ylim(-1.3, 0.8) +\n  xlim(-1, 1) +\n  \n  # Style graph\n  unset_graph_style() +\n  theme_graph(base_family = FONT_FAMILY, plot_margin = margin(0)) +\n  plot_annotation(\n    title = \"SouthSeafood Express Corp's Shareholders\",\n    subtitle = \"Two other fishing companies, <span style='color:blue;'>**AguaLeska Transit N.V.**</span> and <span style='color:blue;'>**Tainamarine Fishing Co**</span> hold shares in<br />SouthSeafood Express Corp. They are posed to benefit the most from the company's illegal fishing activities.\") &\n  theme(\n    text = element_text(family = FONT_FAMILY),\n    plot.title = element_text(face = \"bold\", size = rel(1.2)),\n    plot.subtitle = element_markdown(color = \"grey50\", , size = rel(0.9))\n  )\n```\n:::\n\n\n::: callout-tip\n#### Insights\n\nAs shareholders, **AguaLeska Transit N.V.** and **Tainamarine Fishing Co** have big influence on where the resources of *SouthSeafood Express Corp* go.\n\nIn this case, most of it will most likely opposite of the arrow direction, i.e. benefitting the shareholders.\n:::\n\n## 4.2 Sphere of influence\n\n### 4.2.1 Extracting the subgraph\n\nWe will first extract the direct neighbors for *SouthSeafood Express Corp.* We will use `distance=3`, based on [**Three Degrees of Influence**](https://www.strategy-business.com/article/10218).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nssfec_sphere_of_influence <- extract_subgraph(supernetwork, ssfec_node, distance = 3)\n```\n:::\n\n\nWe will also add focus on the *SouthSeafood Express Corp* node to emphasize it.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nssfec_sphere_of_influence <- ssfec_sphere_of_influence %>%\n  mutate(focus = (id == \"SouthSeafood Express Corp\"))\n```\n:::\n\n\n### 4.2.2 Plotting the graph\n\nFinally, we can plot the graph of *SouthSeafood Express Corp's* sphere of influence.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show ggraph code\"}\nset.seed(911)\ng <- ggraph(ssfec_sphere_of_influence, layout = \"nicely\") +\n  geom_point_interactive(\n    aes(\n      x = x, y = y, data_id = id,\n      tooltip = paste0(id, \" (\", num, \")\"),\n      color = focus, shape = shape\n    ),\n    size = 7.5,\n    show.legend = FALSE\n    )+\n  geom_node_text(\n    aes(label = num),\n    family = FONT_FAMILY,\n    size = 2,\n    color = 'white'\n  ) +\n  geom_edge_link(\n    aes(label = subtype),\n    arrow = arrow(type = \"closed\", length = unit(0.01, \"npc\")),\n    end_cap = circle(4, \"mm\"),\n    start_cap = circle(4, \"mm\"),\n    angle_calc = \"along\",\n    label_dodge = unit(0.02, \"npc\"),\n    label_size = 2,\n    family = FONT_FAMILY\n  ) +\n  scale_color_manual(values = c(MUTED_COLOR, PRIMARY_COLOR)) +\n  \n  # Style graph\n  unset_graph_style() +\n  theme_graph(base_family = FONT_FAMILY, plot_margin = margin(0)) +\n  plot_annotation(title = \"SouthSeafood Express Corp's Sphere of Influence\",\n                  subtitle = \"Entities with 3 degrees of separation from SouthSeafood Express Corp\",\n                  caption = \"*Hover on the nodes to see their names*\") &\n  theme(\n    text = element_text(family = FONT_FAMILY),\n    plot.title = element_text(face = \"bold\", size = rel(1.2)),\n    plot.subtitle = element_markdown(color = \"grey50\", size = rel(0.9)),\n    plot.caption = element_markdown(color = \"grey50\", size = rel(0.75))\n  )\n\n# Add interactive elements\ntooltip_css = paste0(\n  \"background-color:black;color:white;font-family:\",\n  FONT_FAMILY,\n  \";padding:4px;\"\n)\n\ngirafe(                                  \n  ggobj = g,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(\n    opts_tooltip(css = tooltip_css)\n  )\n)\n```\n:::\n\n\n::: callout-tip\n#### Insights\n\nThe network map is comprised mostly of *Shareholderships* and *BenificialOwnerships.*\n\n*SouthSeafood Express Corp's (60464)* shareholders, **AguaLeska Transit N.V. (60429)** and **Tainamarine Fishing Co (60468)** have other shareholders.\n\n**StichtingMarine Shipping Company (60466)** holds shares of these companies (through other companies). **SavanetaCreek Solutions NV (60461)**, a Logistics Company holds shareholdership on this Fishing Company as well. These 2 nodes **collect the resources** from the other companies they hold shares in, which their owners and shareholders ultimately benefit in.\n\nFurthermore, **Liam Conti (60477)** and **Fintan Park (60479)** are the beneficial owners of these companies so they have the final decision-making power and **benefit the most** from the resources in the network. Lastly, as Liam Conti's family member, **Nadia Conti (60478)** may also benefit from Liam's ownership of companies.\n\nFrom our intuition, these 5 nodes are candidates to be the influential nodes in the network.\n:::\n\n## 4.3 Getting the best-fit centrality measure\n\nNext, we will get the best centrality metric that can match our intuition. To better see the fit, we will focus on the candidate influential nodes we have identified.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nssfec_influential_candidates <- ssfec_sphere_of_influence %>%\n  mutate(focus = (id %in% c(\n    \"StichtingMarine Shipping Company\", # Collector of resources\n    \"SavanetaCreek Solutions NV\", # Collector of resources\n    \"Liam Conti\", # Beneficiary\n    \"Nadia Conti\", # Beneficiary\n    \"Fintan Park\" # Beneficiary\n  )))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show ggraph code\"}\nset.seed(911)\ng <- ggraph(ssfec_influential_candidates, layout = \"nicely\") +\n  geom_point_interactive(\n    aes(\n      x = x, y = y, data_id = id,\n      tooltip = paste0(id, \" (\", num, \")\"),\n      color = focus, shape = shape\n    ),\n    size = 7.5,\n    show.legend = FALSE\n    )+\n  geom_node_text(\n    aes(label = num),\n    family = FONT_FAMILY,\n    size = 2,\n    color = 'white'\n  ) +\n  geom_edge_link(\n    aes(label = subtype),\n    arrow = arrow(type = \"closed\", length = unit(0.01, \"npc\")),\n    end_cap = circle(4, \"mm\"),\n    start_cap = circle(4, \"mm\"),\n    angle_calc = \"along\",\n    label_dodge = unit(0.02, \"npc\"),\n    label_size = 2,\n    family = FONT_FAMILY\n  ) +\n  scale_color_manual(values = c(MUTED_COLOR, PRIMARY_COLOR)) +\n  \n  # Style graph\n  unset_graph_style() +\n  theme_graph(base_family = FONT_FAMILY, plot_margin = margin(0)) +\n  plot_annotation(title = \"SouthSeafood Express Corp's Sphere of Influence\",\n                  subtitle = \"Highlighted are the candidates for influential nodes in the network\",\n                  caption = \"*Hover on the nodes to see their names*\") &\n  theme(\n    text = element_text(family = FONT_FAMILY),\n    plot.title = element_text(face = \"bold\", size = rel(1.2)),\n    plot.subtitle = element_markdown(color = \"grey50\", size = rel(0.9)),\n    plot.caption = element_markdown(color = \"grey50\", size = rel(0.75))\n  )\n\n# Add interactive elements\ntooltip_css = paste0(\n  \"background-color:black;color:white;font-family:\",\n  FONT_FAMILY,\n  \";padding:4px;\"\n)\n\ngirafe(                                  \n  ggobj = g,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(\n    opts_tooltip(css = tooltip_css)\n  )\n)\n```\n:::\n\n\n### 4.3.1 Candidate Centralities\n\nAfter reading on the different centralities, the potential candidates are [**eigenvector centrality**](https://vod.video.cornell.edu/media/32+-+Introduction+to+Eigenvalues+and+Eigenvectors+Session+32/1_fi5tfhbm/114208531) and HITS algorithm or [**hubs and authority centrality**](https://pi.math.cornell.edu/~mec/Winter2009/RalucaRemus/Lecture4/lecture4.html)**.**\n\n::: panel-tabset\n#### Eigenvector\n\nThe principle of eigenvector centrality is *the more important your neighbors are, the more important you are.*\n\nAs seen in the graph, the candidate nodes are close to each other and therefore are neighbors to important nodes.\n\n#### Hubs and Authorities\n\nAuthorities are where the nodes that other nodes point to, while hubs are nodes that point towards authorities.\n\nThis seems to be the **most fit** for our context. However, we have to reverse the arrows for most cases as the resource flow is opposite the majority of the arrows we have, i.e. company benefits the shareholders and owners.\n:::\n\n### 4.3.2 Initial look at centralities\n\nIn the graphs below, the bigger the node, the higher their centrality score. The bigger the node is, the more important they are.\n\n#### 4.3.2.1 Hub and Authority\n\nWe will not look at this for now as we will look at it in the context of resource flow.\n\n#### 4.3.2.2 Eigenvector\n\nLet us first calculate the centrality scores.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nssfec_influential_init_centralities <- ssfec_influential_candidates %>%\n  mutate(eigen_score = centrality_eigen())\n```\n:::\n\n\n::: panel-tabset\n##### Graph\n\nThen, let us plot with the consideration of the eigen scores.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show ggraph code\"}\nset.seed(911)\ng <- ggraph(ssfec_influential_init_centralities, layout = \"nicely\") +\n  geom_point_interactive(\n    aes(\n      x = x, y = y, data_id = id,\n      tooltip = paste0(id, \" (\", num, \")\"),\n      color = focus, shape = shape,\n      size = eigen_score\n    ),\n    show.legend = FALSE\n    )+\n  geom_node_text(\n    aes(label = num),\n    family = FONT_FAMILY,\n    size = 2,\n    color = 'white'\n  ) +\n  geom_edge_link(\n    aes(label = subtype),\n    arrow = arrow(type = \"closed\", length = unit(0.01, \"npc\")),\n    end_cap = circle(4, \"mm\"),\n    start_cap = circle(4, \"mm\"),\n    angle_calc = \"along\",\n    label_dodge = unit(0.02, \"npc\"),\n    label_size = 2,\n    family = FONT_FAMILY\n  ) +\n  scale_color_manual(values = c(MUTED_COLOR, PRIMARY_COLOR)) +\n  scale_size_continuous(range=c(5, 15)) +\n  \n  # Style graph\n  unset_graph_style() +\n  theme_graph(base_family = FONT_FAMILY, plot_margin = margin(0)) +\n  plot_annotation(title = \"SouthSeafood Express Corp's Sphere of Influence\",\n                  subtitle = \"Highlighted are the candidates for influential nodes in the network\",\n                  caption = \"*Hover on the nodes to see their names*\") &\n  theme(\n    text = element_text(family = FONT_FAMILY),\n    plot.title = element_text(face = \"bold\", size = rel(1.2)),\n    plot.subtitle = element_markdown(color = \"grey50\", size = rel(0.9)),\n    plot.caption = element_markdown(color = \"grey50\", size = rel(0.75))\n  )\n\n# Add interactive elements\ntooltip_css = paste0(\n  \"background-color:black;color:white;font-family:\",\n  FONT_FAMILY,\n  \";padding:4px;\"\n)\n\ngirafe(                                  \n  ggobj = g,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(\n    opts_tooltip(css = tooltip_css)\n  )\n)\n```\n:::\n\n\n##### Centrality Table\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show table code\"}\nssfec_influential_init_centralities %>%\n  activate(nodes) %>%\n  arrange(-eigen_score) %>%\n  select(id, num, supertype, subtype, eigen_score) %>%\n  kable()\n```\n:::\n\n:::\n\n**4 out of 5** of are candidate nodes have the highest eigenvector centrality values in our network. Because of this, there is a high likelihood that this metric fits our context.\n\nHowever, as we are looking to answer *\"which companies benefited from SouthSeafood Express Corp legal troubles\"*, the result of this metric is contradicting as **Tainamarine Fishing Co** has lower score than **SouthSeafood Express Corp**, while **AguaLeska Transit N.V.** has a higher score.\n\nThese 2 companies should be benefiting from **SouthSeafood Express Corp.**\n\nWe will compare this result after we build the resource flow.\n\n### 4.3.3 Building the resource flow edges\n\n#### 4.3.3.1 Where do resources flow in each relationship type?\n\nTo model the resource flow, we need to set the following:\n\n-   Arrow direction - direction of the resource flow\n\n-   Weight - The higher this is, more the resource flow\n\nTake note that the models are **subjective** and we can adjust the values accordingly.\n\n::: panel-tabset\n##### Shareholdership\n\n**Current**: Shareholder -\\> Company, weight: 1\n\n**Proposed**: Shareholder \\<- Company, weight: 2\n\n**Rationale**: Although shareholders in a company may not necessarily benefit from the resources of a company (the Benificial Owner does), they are important decision makers in the company so they have some form of control over the company resources.\n\n##### BeneficialOwnership\n\n**Current**: BeneficialOwner -\\> Company, weight: 1\n\n**Proposed**: BeneficialOwner \\<- Company, weight: 3\n\n**Rationale**: BeneficialOwners are the ultimate decision makers and the main beneficiary of their company. Hence, they have higher control of the resources over Shareholders.\n\n##### FamilyRelationship\n\n**Current**: Person1 -\\> Person2, weight: 1\n\n**Proposed**: Person1 \\<-\\> Person2, weight: 1\n\n**Rationale**: Assuming the family has a good relationship, they share resources so they benefit from each others' resources. The influence of a family member on another member can be an important factor in the network as they may influence the decision-making for the companies their family own. For simplicity, let's assume that family members only share resources.\n\n##### WorksFor\n\n**Current**: Employee -\\> Employer, weight: 1\n\n**Proposed**: Employee -\\> Employer, weight: 2\n\n**Rationale**: Employee answers to the employer and work on the instruction of the employer.\n:::\n\n#### 4.3.3.2 Generating resource flow\n\nBased on the considerations above, we will generate edges representing the resource flow from the edges dataframes. We will define functions for this.\n\n::: panel-tabset\n##### Convert edges\n\n\n::: {.cell}\n\n```{.r .cell-code}\nconvert_edges_to_resource_flow <- function(edges) {\n  # Employee -> Employer, weight: 2\n  works_for <- edges %>% filter(subtype == \"WorksFor\") %>% mutate(weight = 2)\n  \n  # Person1 <-> Person2, weight: 1\n  family <- edges %>% filter(subtype == \"FamilyRelationship\")\n  family_rev <- family %>%\n    mutate(temp = from, from = to, to = temp) %>%\n    select(from, to, supertype, subtype, weight)\n  \n  # Shareholder <- Company, weight: 2\n  shareholder <- edges %>% filter(subtype == \"Shareholdership\") %>%\n    mutate(temp = from, from = to, to = temp, weight = 2) %>%\n    select(from, to, supertype, subtype, weight)\n  \n  # BeneficialOwner <- Company, weight: 3\n  owner <- edges %>% filter(subtype == \"BeneficialOwnership\") %>%\n    mutate(temp = from, from = to, to = temp, weight = 3) %>%\n    select(from, to, supertype, subtype, weight)\n  \n  works_for %>%\n    rbind(family) %>%\n    rbind(family_rev) %>%\n    rbind(shareholder) %>%\n    rbind(owner)\n}\n```\n:::\n\n\n\n\n##### Convert graph\n\n\n::: {.cell}\n\n```{.r .cell-code}\nconvert_graph_to_resource_flow <- function(graph) {\n  nodes_df <- as_data_frame(graph, what = \"vertices\")\n  edges_sf <- as_data_frame(graph, what = \"edges\")\n  \n  resource_edges <- convert_edges_to_resource_flow(edges_sf)\n  tbl_graph(nodes=nodes_df, edges=resource_edges, directed=TRUE)\n}\n```\n:::\n\n\n\n:::\n\n#### 4.3.3.3 Plotting the resource graph\n\n\n::: {.cell}\n\n```{.r .cell-code}\nssfec_influence_resource <- convert_graph_to_resource_flow(ssfec_influential_init_centralities)\n```\n:::\n\n\n::: panel-tabset\n##### Resource Graph\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show ggraph code\"}\nset.seed(911)\ng <- ggraph(ssfec_influence_resource, layout = \"nicely\") +\n  geom_point_interactive(\n    aes(\n      x = x, y = y, data_id = id,\n      tooltip = paste0(id, \" (\", num, \")\"),\n      color = focus, shape = shape\n    ),\n    size = 7.5,\n    show.legend = FALSE\n    )+\n  geom_node_text(\n    aes(label = num),\n    family = FONT_FAMILY,\n    size = 2,\n    color = 'white'\n  ) +\n  geom_edge_link(\n    aes(label = subtype),\n    arrow = arrow(type = \"closed\", length = unit(0.01, \"npc\")),\n    end_cap = circle(4, \"mm\"),\n    start_cap = circle(4, \"mm\"),\n    angle_calc = \"along\",\n    label_dodge = unit(0.02, \"npc\"),\n    label_size = 2,\n    family = FONT_FAMILY\n  ) +\n  scale_color_manual(values = c(MUTED_COLOR, PRIMARY_COLOR)) +\n  \n  # Style graph\n  unset_graph_style() +\n  theme_graph(base_family = FONT_FAMILY, plot_margin = margin(0)) +\n  plot_annotation(title = \"SouthSeafood Express Corp's Sphere of Influence\",\n                  subtitle = \"Entities with 3 degrees of separation from SouthSeafood Express Corp\",\n                  caption = \"*Hover on the nodes to see their names*\") &\n  theme(\n    text = element_text(family = FONT_FAMILY),\n    plot.title = element_text(face = \"bold\", size = rel(1.2)),\n    plot.subtitle = element_markdown(color = \"grey50\", size = rel(0.9)),\n    plot.caption = element_markdown(color = \"grey50\", size = rel(0.75))\n  )\n\n# Add interactive elements\ntooltip_css = paste0(\n  \"background-color:black;color:white;font-family:\",\n  FONT_FAMILY,\n  \";padding:4px;\"\n)\n\ngirafe(                                  \n  ggobj = g,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(\n    opts_tooltip(css = tooltip_css)\n  )\n)\n```\n:::\n\n\n##### Original Graph\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show ggraph code\"}\nset.seed(911)\ng <- ggraph(ssfec_influential_init_centralities, layout = \"nicely\") +\n  geom_point_interactive(\n    aes(\n      x = x, y = y, data_id = id,\n      tooltip = paste0(id, \" (\", num, \")\"),\n      color = focus, shape = shape\n    ),\n    size = 7.5,\n    show.legend = FALSE\n    )+\n  geom_node_text(\n    aes(label = num),\n    family = FONT_FAMILY,\n    size = 2,\n    color = 'white'\n  ) +\n  geom_edge_link(\n    aes(label = subtype),\n    arrow = arrow(type = \"closed\", length = unit(0.01, \"npc\")),\n    end_cap = circle(4, \"mm\"),\n    start_cap = circle(4, \"mm\"),\n    angle_calc = \"along\",\n    label_dodge = unit(0.02, \"npc\"),\n    label_size = 2,\n    family = FONT_FAMILY\n  ) +\n  scale_color_manual(values = c(MUTED_COLOR, PRIMARY_COLOR)) +\n  \n  # Style graph\n  unset_graph_style() +\n  theme_graph(base_family = FONT_FAMILY, plot_margin = margin(0)) +\n  plot_annotation(title = \"SouthSeafood Express Corp's Sphere of Influence\",\n                  subtitle = \"Entities with 3 degrees of separation from SouthSeafood Express Corp\",\n                  caption = \"*Hover on the nodes to see their names*\") &\n  theme(\n    text = element_text(family = FONT_FAMILY),\n    plot.title = element_text(face = \"bold\", size = rel(1.2)),\n    plot.subtitle = element_markdown(color = \"grey50\", size = rel(0.9)),\n    plot.caption = element_markdown(color = \"grey50\", size = rel(0.75))\n  )\n\n# Add interactive elements\ntooltip_css = paste0(\n  \"background-color:black;color:white;font-family:\",\n  FONT_FAMILY,\n  \";padding:4px;\"\n)\n\ngirafe(                                  \n  ggobj = g,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(\n    opts_tooltip(css = tooltip_css)\n  )\n)\n```\n:::\n\n:::\n\nThe resource graph now represents the flow of resource, which can help us trace who benefits from a node's activities. We can now recompute the centralities and the resource flow.\n\n### 4.3.4 Recalculating the different centralities\n\nWe will recalculate the different centralities using the resource graph.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nssfec_inf_cent_res <- ssfec_influence_resource %>%\n  mutate(\n    eigen_score = centrality_eigen(),\n    authority_score = centrality_authority(),\n    hub_score = centrality_hub()\n  )\n```\n:::\n\n\n#### 4.3.4.1 Eigenvector centrality\n\n::: panel-tabset\n##### Graph\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show ggraph code\"}\nset.seed(911)\ng <- ggraph(ssfec_inf_cent_res, layout = \"nicely\") +\n  geom_point_interactive(\n    aes(\n      x = x, y = y, data_id = id,\n      tooltip = paste0(id, \" (\", num, \")\"),\n      color = focus, shape = shape,\n      size = eigen_score\n    ),\n    show.legend = FALSE\n    )+\n  geom_node_text(\n    aes(label = num),\n    family = FONT_FAMILY,\n    size = 2,\n    color = 'white'\n  ) +\n  geom_edge_link(\n    arrow = arrow(type = \"closed\", length = unit(0.01, \"npc\")),\n    end_cap = circle(4, \"mm\"),\n    start_cap = circle(4, \"mm\")\n  ) +\n  scale_color_manual(values = c(MUTED_COLOR, PRIMARY_COLOR)) +\n  scale_size_continuous(range=c(5, 15)) +\n  \n  # Style graph\n  unset_graph_style() +\n  theme_graph(base_family = FONT_FAMILY, plot_margin = margin(0)) +\n  plot_annotation(title = \"Resource Flow in SouthSeafood Express Corp's Sphere of Influence\",\n                  subtitle = \"Bigger nodes are more influential based on **Eigenvector Centrality**.<br/>Highlighted are the candidates for influential nodes in the network\",\n                  caption = \"*Hover on the nodes to see their names*\") &\n  theme(\n    text = element_text(family = FONT_FAMILY),\n    plot.title = element_text(face = \"bold\", size = rel(1.2)),\n    plot.subtitle = element_markdown(color = \"grey50\", size = rel(0.9)),\n    plot.caption = element_markdown(color = \"grey50\", size = rel(0.75))\n  )\n\n# Add interactive elements\ntooltip_css = paste0(\n  \"background-color:black;color:white;font-family:\",\n  FONT_FAMILY,\n  \";padding:4px;\"\n)\n\ngirafe(                                  \n  ggobj = g,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(\n    opts_tooltip(css = tooltip_css)\n  )\n)\n```\n:::\n\n\n##### Table\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show table code\"}\nssfec_inf_cent_res %>%\n  activate(nodes) %>%\n  arrange(-eigen_score) %>%\n  select(id, num, supertype, subtype, eigen_score) %>%\n  kable()\n```\n:::\n\n:::\n\nIt has a similar result as the original graph. 4 out of 5 of the candidate nodes are in the Top 5 of highest eigenvector score.\n\nThis metric is still contradicting as **Tainamarine Fishing Co** has lower score than **SouthSeafood Express Corp**, while **AguaLeska Transit N.V.** has a higher score, despite both of them benefiting from SouthSeafood Express Corp.\n\n#### 4.3.4.2 Authority Centrality\n\n::: panel-tabset\n##### Graph\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show ggraph code\"}\nset.seed(911)\ng <- ggraph(ssfec_inf_cent_res, layout = \"nicely\") +\n  geom_point_interactive(\n    aes(\n      x = x, y = y, data_id = id,\n      tooltip = paste0(id, \" (\", num, \")\"),\n      color = focus, shape = shape,\n      size = authority_score,\n    ),\n    show.legend = FALSE\n    )+\n  geom_node_text(\n    aes(label = num),\n    family = FONT_FAMILY,\n    size = 2,\n    color = 'white'\n  ) +\n  geom_edge_link(\n    arrow = arrow(type = \"closed\", length = unit(0.01, \"npc\")),\n    end_cap = circle(4, \"mm\"),\n    start_cap = circle(4, \"mm\")\n  ) +\n  scale_color_manual(values = c(MUTED_COLOR, PRIMARY_COLOR)) +\n  scale_size_continuous(range=c(5, 15)) +\n  \n  # Style graph\n  unset_graph_style() +\n  theme_graph(base_family = FONT_FAMILY, plot_margin = margin(0)) +\n  plot_annotation(title = \"Resource Flow in SouthSeafood Express Corp's Sphere of Influence\",\n                  subtitle = \"Bigger nodes are more influential based on **Authority Centrality**.<br/>Highlighted are the candidates for influential nodes in the network\",\n                  caption = \"*Hover on the nodes to see their names*\") &\n  theme(\n    text = element_text(family = FONT_FAMILY),\n    plot.title = element_text(face = \"bold\", size = rel(1.2)),\n    plot.subtitle = element_markdown(color = \"grey50\", size = rel(0.9)),\n    plot.caption = element_markdown(color = \"grey50\", size = rel(0.75))\n  )\n\n# Add interactive elements\ntooltip_css = paste0(\n  \"background-color:black;color:white;font-family:\",\n  FONT_FAMILY,\n  \";padding:4px;\"\n)\n\ngirafe(                                  \n  ggobj = g,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(\n    opts_tooltip(css = tooltip_css)\n  )\n)\n```\n:::\n\n\n##### Table\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show table code\"}\nssfec_inf_cent_res %>%\n  activate(nodes) %>%\n  arrange(-authority_score) %>%\n  select(id, num, supertype, subtype, authority_score) %>%\n  kable()\n```\n:::\n\n:::\n\n#### 4.3.4.3 Hub Centrality\n\n::: panel-tabset\n##### Graph\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show ggraph code\"}\nset.seed(911)\ng <- ggraph(ssfec_inf_cent_res, layout = \"nicely\") +\n  geom_point_interactive(\n    aes(\n      x = x, y = y, data_id = id,\n      tooltip = paste0(id, \" (\", num, \")\"),\n      color = focus, shape = shape,\n      size = hub_score\n    ),\n    show.legend = FALSE\n    )+\n  geom_node_text(\n    aes(label = num),\n    family = FONT_FAMILY,\n    size = 2,\n    color = 'white'\n  ) +\n  geom_edge_link(\n    arrow = arrow(type = \"closed\", length = unit(0.01, \"npc\")),\n    end_cap = circle(4, \"mm\"),\n    start_cap = circle(4, \"mm\")\n  ) +\n  scale_color_manual(values = c(MUTED_COLOR, PRIMARY_COLOR)) +\n  scale_size_continuous(range=c(5, 15)) +\n  \n  # Style graph\n  unset_graph_style() +\n  theme_graph(base_family = FONT_FAMILY, plot_margin = margin(0)) +\n  plot_annotation(title = \"Resource Flow in SouthSeafood Express Corp's Sphere of Influence\",\n                  subtitle = \"Bigger nodes are more influential based on **Hub Centrality**.<br/>Highlighted are the candidates for influential nodes in the network\",\n                  caption = \"*Hover on the nodes to see their names*\") &\n  theme(\n    text = element_text(family = FONT_FAMILY),\n    plot.title = element_text(face = \"bold\", size = rel(1.2)),\n    plot.subtitle = element_markdown(color = \"grey50\", size = rel(0.9)),\n    plot.caption = element_markdown(color = \"grey50\", size = rel(0.75))\n  )\n\n# Add interactive elements\ntooltip_css = paste0(\n  \"background-color:black;color:white;font-family:\",\n  FONT_FAMILY,\n  \";padding:4px;\"\n)\n\ngirafe(                                  \n  ggobj = g,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(\n    opts_tooltip(css = tooltip_css)\n  )\n)\n```\n:::\n\n\n##### Table\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show table code\"}\nssfec_inf_cent_res %>%\n  activate(nodes) %>%\n  arrange(-hub_score) %>%\n  select(id, num, supertype, subtype, hub_score) %>%\n  kable()\n```\n:::\n\n:::\n\n## 4.4 Full Network\n\n### 4.2.1 Extracting the subgraph\n\nWe will first extract the direct neighbors for *SouthSeafood Express Corp.* We will use `distance=3`, based on [**Three Degrees of Influence**](https://www.strategy-business.com/article/10218).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nssfec_full_network <- extract_subgraph(supernetwork, ssfec_node, distance = length(supernetwork))\n```\n:::\n\n\nWe will also add focus on the *SouthSeafood Express Corp* node to emphasize it.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nssfec_full_network <- ssfec_full_network %>%\n  mutate(focus = (id == \"SouthSeafood Express Corp\"))\n```\n:::\n\n\n### 4.2.2 Plotting the graph\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show ggraph code\"}\nset.seed(911)\ng <- ggraph(ssfec_full_network, layout = \"nicely\") +\n  geom_point_interactive(\n    aes(\n      x = x, y = y, data_id = id,\n      tooltip = paste0(id, \" (\", num, \")\"),\n      color = focus, shape = shape\n    ),\n    size = 7.5,\n    show.legend = FALSE\n    )+\n  geom_node_text(\n    aes(label = num),\n    family = FONT_FAMILY,\n    size = 2,\n    color = 'white'\n  ) +\n  geom_edge_link(\n    #aes(label = subtype),\n    arrow = arrow(type = \"closed\", length = unit(0.01, \"npc\")),\n    end_cap = circle(4, \"mm\"),\n    start_cap = circle(4, \"mm\"),\n    angle_calc = \"along\",\n    #label_dodge = unit(0.02, \"npc\"),\n    #label_size = 2,\n    #family = FONT_FAMILY\n  ) +\n  scale_color_manual(values = c(MUTED_COLOR, PRIMARY_COLOR)) +\n  \n  # Style graph\n  unset_graph_style() +\n  theme_graph(base_family = FONT_FAMILY, plot_margin = margin(0)) +\n  plot_annotation(title = \"SouthSeafood Express Corp's Full Network\",\n                  subtitle = \"Entities with relations to any degree with SouthSeafood Express Corp's Full Network\",\n                  caption = \"*Hover on the nodes to see their names*\") &\n  theme(\n    text = element_text(family = FONT_FAMILY),\n    plot.title = element_text(face = \"bold\", size = rel(1.2)),\n    plot.subtitle = element_markdown(color = \"grey50\", size = rel(0.9)),\n    plot.caption = element_markdown(color = \"grey50\", size = rel(0.75))\n  )\n\n# Add interactive elements\ntooltip_css = paste0(\n  \"background-color:black;color:white;font-family:\",\n  FONT_FAMILY,\n  \";padding:4px;\"\n)\n\ngirafe(                                  \n  ggobj = g,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(\n    opts_tooltip(css = tooltip_css)\n  )\n)\n```\n:::\n\n\n### 4.2.3 Resource Recipients\n\n\n::: {.cell}\n\n```{.r .cell-code}\nssfec_resource_network <- ssfec_full_network %>% convert_graph_to_resource_flow()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nssfec_resource_network <- ssfec_resource_network %>%\n  mutate(authority_score = centrality_authority())\n```\n:::\n\n\n::: panel-tabset\n#### Graph\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show ggraph code\"}\nset.seed(911)\ng <- ggraph(ssfec_resource_network, layout = \"nicely\") +\n  geom_point_interactive(\n    aes(\n      x = x, y = y, data_id = id,\n      tooltip = paste0(id, \" (\", num, \")\"),\n      shape = shape,\n      #alpha = authority_score,\n      size = authority_score,\n      color = authority_score\n    ),\n    #color = PRIMARY_COLOR\n    #size = 7.5,\n    )+\n  geom_node_text(\n    aes(label = num),\n    family = FONT_FAMILY,\n    size = 2,\n    color = 'white'\n  ) +\n  geom_edge_link(\n    #aes(label = subtype),\n    arrow = arrow(type = \"closed\", length = unit(0.01, \"npc\")),\n    end_cap = circle(4, \"mm\"),\n    start_cap = circle(4, \"mm\"),\n    angle_calc = \"along\",\n    #label_dodge = unit(0.02, \"npc\"),\n    #label_size = 2,\n    #family = FONT_FAMILY\n  ) +\n  #scale_alpha_continuous_interactive(range = c(0.5, 1)) +\n  scale_color_gradient(high = PRIMARY_COLOR, low = \"deepskyblue\") +\n  scale_size_continuous(range = c(5, 10)) +\n  \n  # Style graph\n  unset_graph_style() +\n  theme_graph(base_family = FONT_FAMILY, plot_margin = margin(0)) +\n  plot_annotation(title = \"SouthSeafood Express Corp's Full Network\",\n                  subtitle = \"Entities with relations to any degree with SouthSeafood Express Corp's Full Network\",\n                  caption = \"*Hover on the nodes to see their names*\") &\n  theme(\n    text = element_text(family = FONT_FAMILY),\n    plot.title = element_text(face = \"bold\", size = rel(1.2)),\n    plot.subtitle = element_markdown(color = \"grey50\", size = rel(0.9)),\n    plot.caption = element_markdown(color = \"grey50\", size = rel(0.75))\n  )\n\n# Add interactive elements\ntooltip_css = paste0(\n  \"background-color:black;color:white;font-family:\",\n  FONT_FAMILY,\n  \";padding:4px;\"\n)\n\ngirafe(                                  \n  ggobj = g,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(\n    opts_tooltip(css = tooltip_css)\n  )\n)\n```\n:::\n\n\n#### Table\n:::\n\n# 5 Scratch - Resource Flow\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnodes <- tibble(id = c(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\"))\nedges <- tibble(from = c(\"A\", \"B\", \"B\", \"C\", \"C\", \"D\", \"E\", \"F\", \"H\", \"G\", \"J\"),\n                        to = c(\"B\", \"D\", \"G\", \"B\", \"E\", \"F\", \"G\", \"G\", \"A\", \"I\", \"I\"),\n                        weight = c(2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 2))\n#edges <- edges %>% mutate(weight = 1)\n\ngraph <- tbl_graph(nodes = nodes, edges = edges, directed = TRUE)\n\nset.seed(911)\ng <- ggraph(graph, layout = \"nicely\") +\n  geom_point_interactive(\n    aes(\n      x = x, y = y, data_id = id,\n      tooltip = id\n    ),\n    size = 7.5\n    )+\n  geom_node_text(\n    aes(label = id),\n    family = FONT_FAMILY,\n    size = 2,\n    color = 'white'\n  ) +\n  geom_edge_link(\n    #aes(label = subtype),\n    aes(edge_width = weight),\n    arrow = arrow(type = \"closed\", length = unit(0.01, \"npc\")),\n    end_cap = circle(4, \"mm\"),\n    start_cap = circle(4, \"mm\"),\n    angle_calc = \"along\",\n    #label_dodge = unit(0.02, \"npc\"),\n    #label_size = 2,\n    #family = FONT_FAMILY\n  ) +\n  \n  scale_edge_width_continuous(range = c(0.1, 0.5))+\n  \n  # Style graph\n  unset_graph_style() +\n  theme_graph(base_family = FONT_FAMILY, plot_margin = margin(0)) +\n  plot_annotation(title = \"SouthSeafood Express Corp's Full Network\",\n                  subtitle = \"Entities with relations to any degree with SouthSeafood Express Corp's Full Network\",\n                  caption = \"*Hover on the nodes to see their names*\") &\n  theme(\n    text = element_text(family = FONT_FAMILY),\n    plot.title = element_text(face = \"bold\", size = rel(1.2)),\n    plot.subtitle = element_markdown(color = \"grey50\", size = rel(0.9)),\n    plot.caption = element_markdown(color = \"grey50\", size = rel(0.75))\n  )\n\n# Add interactive elements\ntooltip_css = paste0(\n  \"background-color:black;color:white;font-family:\",\n  FONT_FAMILY,\n  \";padding:4px;\"\n)\n\ngirafe(                                  \n  ggobj = g,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(\n    opts_tooltip(css = tooltip_css)\n  )\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngraph <- graph %>% mutate(\n  eigen_score = centrality_eigen(weights = E(graph)$weight),\n  authority_score = centrality_authority(weights = E(graph)$weight),\n  hub_score = centrality_hub(weight = E(graph)$weight),\n  pagerank_score = centrality_pagerank(weight = E(graph)$weight)\n)\n```\n:::\n\n\n## Eigen\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(911)\ng <- ggraph(graph, layout = \"nicely\") +\n  geom_point_interactive(\n    aes(\n      x = x, y = y, data_id = id,\n      tooltip = id,\n      color = eigen_score,\n      size = eigen_score\n    )\n    )+\n  geom_node_text(\n    aes(label = id),\n    family = FONT_FAMILY,\n    size = 2,\n    color = 'white'\n  ) +\n  geom_edge_link(\n    #aes(label = subtype),\n    aes(edge_width = weight),\n    arrow = arrow(type = \"closed\", length = unit(0.01, \"npc\")),\n    end_cap = circle(2, \"mm\"),\n    start_cap = circle(2, \"mm\"),\n    angle_calc = \"along\",\n    #label_dodge = unit(0.02, \"npc\"),\n    #label_size = 2,\n    #family = FONT_FAMILY\n  ) +\n  \n  scale_color_gradient(high = \"blue\", low = \"gray\")+\n  scale_size_continuous(range=c(5, 15)) +\n  scale_edge_width_continuous(range = c(0.1, 0.5))+\n  \n  # Style graph\n  unset_graph_style() +\n  theme_graph(base_family = FONT_FAMILY, plot_margin = margin(0)) +\n  plot_annotation(title = \"\",\n                  subtitle = \"\",\n                  caption = \"\") &\n  theme(\n    text = element_text(family = FONT_FAMILY),\n    plot.title = element_text(face = \"bold\", size = rel(1.2)),\n    plot.subtitle = element_markdown(color = \"grey50\", size = rel(0.9)),\n    plot.caption = element_markdown(color = \"grey50\", size = rel(0.75))\n  )\n\n# Add interactive elements\ntooltip_css = paste0(\n  \"background-color:black;color:white;font-family:\",\n  FONT_FAMILY,\n  \";padding:4px;\"\n)\n\ngirafe(                                  \n  ggobj = g,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(\n    opts_tooltip(css = tooltip_css)\n  )\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(911)\ng <- ggraph(graph, layout = \"nicely\") +\n  geom_point_interactive(\n    aes(\n      x = x, y = y, data_id = id,\n      tooltip = id,\n      color = authority_score,\n      size = authority_score\n    )\n    )+\n  geom_node_text(\n    aes(label = id),\n    family = FONT_FAMILY,\n    size = 2,\n    color = 'white'\n  ) +\n  geom_edge_link(\n    #aes(label = subtype),\n    aes(edge_width = weight),\n    arrow = arrow(type = \"closed\", length = unit(0.01, \"npc\")),\n    end_cap = circle(2, \"mm\"),\n    start_cap = circle(2, \"mm\"),\n    angle_calc = \"along\",\n    #label_dodge = unit(0.02, \"npc\"),\n    #label_size = 2,\n    #family = FONT_FAMILY\n  ) +\n  \n  scale_color_gradient(high = \"blue\", low = \"gray\")+\n  scale_size_continuous(range=c(5, 15)) +\n  scale_edge_width_continuous(range = c(0.1, 0.5))+\n  \n  # Style graph\n  unset_graph_style() +\n  theme_graph(base_family = FONT_FAMILY, plot_margin = margin(0)) +\n  plot_annotation(title = \"\",\n                  subtitle = \"\",\n                  caption = \"\") &\n  theme(\n    text = element_text(family = FONT_FAMILY),\n    plot.title = element_text(face = \"bold\", size = rel(1.2)),\n    plot.subtitle = element_markdown(color = \"grey50\", size = rel(0.9)),\n    plot.caption = element_markdown(color = \"grey50\", size = rel(0.75))\n  )\n\n# Add interactive elements\ntooltip_css = paste0(\n  \"background-color:black;color:white;font-family:\",\n  FONT_FAMILY,\n  \";padding:4px;\"\n)\n\ngirafe(                                  \n  ggobj = g,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(\n    opts_tooltip(css = tooltip_css)\n  )\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(911)\ng <- ggraph(graph, layout = \"nicely\") +\n  geom_point_interactive(\n    aes(\n      x = x, y = y, data_id = id,\n      tooltip = id,\n      color = hub_score,\n      size = hub_score\n    )\n    )+\n  geom_node_text(\n    aes(label = id),\n    family = FONT_FAMILY,\n    size = 2,\n    color = 'white'\n  ) +\n  geom_edge_link(\n    #aes(label = subtype),\n    aes(edge_width = weight),\n    arrow = arrow(type = \"closed\", length = unit(0.01, \"npc\")),\n    end_cap = circle(2, \"mm\"),\n    start_cap = circle(2, \"mm\"),\n    angle_calc = \"along\",\n    #label_dodge = unit(0.02, \"npc\"),\n    #label_size = 2,\n    #family = FONT_FAMILY\n  ) +\n  \n  scale_color_gradient(high = \"blue\", low = \"gray\")+\n  scale_size_continuous(range=c(5, 15)) +\n  scale_edge_width_continuous(range = c(0.1, 0.5))+\n  \n  # Style graph\n  unset_graph_style() +\n  theme_graph(base_family = FONT_FAMILY, plot_margin = margin(0)) +\n  plot_annotation(title = \"\",\n                  subtitle = \"\",\n                  caption = \"\") &\n  theme(\n    text = element_text(family = FONT_FAMILY),\n    plot.title = element_text(face = \"bold\", size = rel(1.2)),\n    plot.subtitle = element_markdown(color = \"grey50\", size = rel(0.9)),\n    plot.caption = element_markdown(color = \"grey50\", size = rel(0.75))\n  )\n\n# Add interactive elements\ntooltip_css = paste0(\n  \"background-color:black;color:white;font-family:\",\n  FONT_FAMILY,\n  \";padding:4px;\"\n)\n\ngirafe(                                  \n  ggobj = g,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(\n    opts_tooltip(css = tooltip_css)\n  )\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(911)\ng <- ggraph(graph, layout = \"nicely\") +\n  geom_point_interactive(\n    aes(\n      x = x, y = y, data_id = id,\n      tooltip = id,\n      color = pagerank_score,\n      size = pagerank_score\n    )\n    )+\n  geom_node_text(\n    aes(label = id),\n    family = FONT_FAMILY,\n    size = 2,\n    color = 'white'\n  ) +\n  geom_edge_link(\n    #aes(label = subtype),\n    aes(edge_width = weight),\n    arrow = arrow(type = \"closed\", length = unit(0.01, \"npc\")),\n    end_cap = circle(2, \"mm\"),\n    start_cap = circle(2, \"mm\"),\n    angle_calc = \"along\",\n    #label_dodge = unit(0.02, \"npc\"),\n    #label_size = 2,\n    #family = FONT_FAMILY\n  ) +\n  \n  scale_color_gradient(high = \"blue\", low = \"gray\")+\n  scale_size_continuous(range=c(5, 15)) +\n  scale_edge_width_continuous(range = c(0.1, 0.5))+\n  \n  # Style graph\n  unset_graph_style() +\n  theme_graph(base_family = FONT_FAMILY, plot_margin = margin(0)) +\n  plot_annotation(title = \"\",\n                  subtitle = \"\",\n                  caption = \"\") &\n  theme(\n    text = element_text(family = FONT_FAMILY),\n    plot.title = element_text(face = \"bold\", size = rel(1.2)),\n    plot.subtitle = element_markdown(color = \"grey50\", size = rel(0.9)),\n    plot.caption = element_markdown(color = \"grey50\", size = rel(0.75))\n  )\n\n# Add interactive elements\ntooltip_css = paste0(\n  \"background-color:black;color:white;font-family:\",\n  FONT_FAMILY,\n  \";padding:4px;\"\n)\n\ngirafe(                                  \n  ggobj = g,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(\n    opts_tooltip(css = tooltip_css)\n  )\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(911)\ng <- ggraph(graph, layout = \"nicely\") +\n  geom_point_interactive(\n    aes(\n      x = x, y = y, data_id = id,\n      tooltip = id,\n      color = centrality_random_walk(weights = E(graph)$weight),\n      size = centrality_random_walk(weights = E(graph)$weight)\n    )\n    )+\n  geom_node_text(\n    aes(label = id),\n    family = FONT_FAMILY,\n    size = 2,\n    color = 'white'\n  ) +\n  geom_edge_link(\n    #aes(label = subtype),\n    aes(edge_width = weight),\n    arrow = arrow(type = \"closed\", length = unit(0.01, \"npc\")),\n    end_cap = circle(2, \"mm\"),\n    start_cap = circle(2, \"mm\"),\n    angle_calc = \"along\",\n    #label_dodge = unit(0.02, \"npc\"),\n    #label_size = 2,\n    #family = FONT_FAMILY\n  ) +\n  \n  scale_color_gradient(high = \"blue\", low = \"gray\")+\n  scale_size_continuous(range=c(5, 15)) +\n  scale_edge_width_continuous(range = c(0.1, 0.5))+\n  \n  # Style graph\n  unset_graph_style() +\n  theme_graph(base_family = FONT_FAMILY, plot_margin = margin(0)) +\n  plot_annotation(title = \"\",\n                  subtitle = \"\",\n                  caption = \"\") &\n  theme(\n    text = element_text(family = FONT_FAMILY),\n    plot.title = element_text(face = \"bold\", size = rel(1.2)),\n    plot.subtitle = element_markdown(color = \"grey50\", size = rel(0.9)),\n    plot.caption = element_markdown(color = \"grey50\", size = rel(0.75))\n  )\n\n# Add interactive elements\ntooltip_css = paste0(\n  \"background-color:black;color:white;font-family:\",\n  FONT_FAMILY,\n  \";padding:4px;\"\n)\n\ngirafe(                                  \n  ggobj = g,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(\n    opts_tooltip(css = tooltip_css)\n  )\n)\n```\n:::\n\n\n# References\n\n<https://blogs.cornell.edu/info2040/2015/10/19/three-degrees-of-influence-how-far-can-you-reach-people/>\n\n<https://www.strategy-business.com/article/10218>\n\n<https://www.youtube.com/watch?v=-kiKUYM9Qq8>\n\n<https://pi.math.cornell.edu/~mec/Winter2009/RalucaRemus/Lecture4/lecture4.html>\n\n<https://vod.video.cornell.edu/media/32+-+Introduction+to+Eigenvalues+and+Eigenvectors+Session+32/1_fi5tfhbm/114208531>\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
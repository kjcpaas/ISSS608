{
  "hash": "005350de86b3973c65a2c3fc4feeb024",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In-class Exercise 4: Visualizing Stats and Models\"\nauthor: \"Kristine Joy Paas\"\ndate: \"4 May 2024\"\ndate-modified: \"last-modified\"\nformat: html\nexecute: \n  echo: true\n  eval: true\n  warning: false\n  freeze: true\n---\n\n\n# 1 Overview\n\n`ggstatsplot` enable plotting without calculating the statistics separately.\n\n# 2 Getting Started\n\n## 2.1 Loading the required packages\n\nFor this exercise we will use the following R packages:\n\n-   [**tidyverse**](https://www.tidyverse.org/), a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\n\n-   [**ggstatsplot**](https://indrajeetpatil.github.io/ggstatsplot/), extension of [**ggplot2**](https://ggplot2.tidyverse.org/) package for creating graphics with details from statistical tests included in the information-rich plots themselves.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, ggstatsplot)\nset.seed(1234)\n```\n:::\n\n\n## 2.2 Loading the data\n\nWe will use the same `exam_data` dataset from [Hands-on Ex 1](/Hands-on_Exs/Ex1/Hands-on_Ex1) and load it into the RStudio environment using [read_csv()](https://readr.tidyverse.org/reference/read_delim.html).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexam_data <- read_csv(\"data/Exam_data.csv\")\nglimpse(exam_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 322\nColumns: 7\n$ ID      <chr> \"Student321\", \"Student305\", \"Student289\", \"Student227\", \"Stude…\n$ CLASS   <chr> \"3I\", \"3I\", \"3H\", \"3F\", \"3I\", \"3I\", \"3I\", \"3I\", \"3I\", \"3H\", \"3…\n$ GENDER  <chr> \"Male\", \"Female\", \"Male\", \"Male\", \"Male\", \"Female\", \"Male\", \"M…\n$ RACE    <chr> \"Malay\", \"Malay\", \"Chinese\", \"Chinese\", \"Malay\", \"Malay\", \"Chi…\n$ ENGLISH <dbl> 21, 24, 26, 27, 27, 31, 31, 31, 33, 34, 34, 36, 36, 36, 37, 38…\n$ MATHS   <dbl> 9, 22, 16, 77, 11, 16, 21, 18, 19, 49, 39, 35, 23, 36, 49, 30,…\n$ SCIENCE <dbl> 15, 16, 16, 31, 25, 16, 25, 27, 15, 37, 42, 22, 32, 36, 35, 45…\n```\n\n\n:::\n:::\n\n\nThere are a total of seven attributes in the exam_data tibble data frame. Four of them are categorical data type and the other three are in continuous data type.\n\n-   The categorical attributes are: `ID`, `CLASS`, `GENDER` and `RACE`.\n\n-   The continuous attributes are: `MATHS`, `ENGLISH` and `SCIENCE`.\n\n# 3 Visualizing Stats\n\n## 3.1 Using gghistostats\n\n### 3.1.1 By stats type\n\n::: panel-tabset\n#### parametric\n\nIt used `mean`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngghistostats(\n  data = exam_data,\n  x = ENGLISH,\n  type = \"parametric\",\n  test.value = 60,\n  bin.args = list(color = \"black\",\n                  fill = \"grey50\",\n                  alpha = 0.7),\n  normal.curve = FALSE,\n  normal.curve.args = list(linewidth = 2),\n  xlab = \"English scores\"\n)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex4_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n#### np\n\nIt used `median`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngghistostats(\n  data = exam_data,\n  x = ENGLISH,\n  type = \"np\",\n  test.value = 60,\n  bin.args = list(color = \"black\",\n                  fill = \"grey50\",\n                  alpha = 0.7),\n  normal.curve = FALSE,\n  normal.curve.args = list(linewidth = 2),\n  xlab = \"English scores\"\n)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex4_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n#### robust\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngghistostats(\n  data = exam_data,\n  x = ENGLISH,\n  type = \"robust\",\n  test.value = 60,\n  bin.args = list(color = \"black\",\n                  fill = \"grey50\",\n                  alpha = 0.7),\n  normal.curve = FALSE,\n  normal.curve.args = list(linewidth = 2),\n  xlab = \"English scores\"\n)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex4_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n#### bayes\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngghistostats(\n  data = exam_data,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  bin.args = list(color = \"black\",\n                  fill = \"grey50\",\n                  alpha = 0.7),\n  normal.curve = FALSE,\n  normal.curve.args = list(linewidth = 2),\n  xlab = \"English scores\"\n)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex4_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n:::\n\n::: {.callout-tip appearance=\"simple\"}\nReference lines default to corresponding mean, median, etc can be controlled by the `centrality` argument.\n:::\n\n### 3.1.2 Plotting Normal Distribution Curve\n\nPrevious plot, by default, do not have the normal distribution curve. Setting `normal.curve = TRUE` adds the normal distribution curve.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngghistostats(\n  data = exam_data,\n  x = ENGLISH,\n  type = \"bayesian\",\n  test.value = 60,\n  bin.args = list(color = \"black\",\n                  fill = \"grey50\",\n                  alpha = 0.7),\n  normal.curve = TRUE,\n  normal.curve.args = list(linewidth = 0.5),\n  xlab = \"English scores\"\n)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex4_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n### 3.1.3 Extracting calculated stats\n\n\n::: {.cell}\n\n```{.r .cell-code}\np <- gghistostats(\n  data = exam_data,\n  x = ENGLISH,\n  type = \"parametric\",\n  test.value = 60,\n  bin.args = list(\n    color = \"black\",\n    fill = \"grey50\",\n    alpha = 0.7\n  ),\n  normal.curve = FALSE,\n  normal.curve.args = list(linewidth = 2),\n  xlab = \"English scores\"\n)\n\nextract_stats(p)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$subtitle_data\n# A tibble: 1 × 15\n     mu statistic df.error  p.value method            alternative effectsize\n  <dbl>     <dbl>    <dbl>    <dbl> <chr>             <chr>       <chr>     \n1    60      8.77      321 1.04e-16 One Sample t-test two.sided   Hedges' g \n  estimate conf.level conf.low conf.high conf.method conf.distribution n.obs\n     <dbl>      <dbl>    <dbl>     <dbl> <chr>       <chr>             <int>\n1    0.488       0.95    0.372     0.603 ncp         t                   322\n  expression\n  <list>    \n1 <language>\n\n$caption_data\n# A tibble: 1 × 16\n  term       effectsize      estimate conf.level conf.low conf.high    pd\n  <chr>      <chr>              <dbl>      <dbl>    <dbl>     <dbl> <dbl>\n1 Difference Bayesian t-test     7.20       0.95     5.48      8.79     1\n  prior.distribution prior.location prior.scale    bf10 method         \n  <chr>                       <dbl>       <dbl>   <dbl> <chr>          \n1 cauchy                          0       0.707 4.54e13 Bayesian t-test\n  conf.method log_e_bf10 n.obs expression\n  <chr>            <dbl> <int> <list>    \n1 ETI               31.4   322 <language>\n\n$pairwise_comparisons_data\nNULL\n\n$descriptive_data\nNULL\n\n$one_sample_data\nNULL\n\n$tidy_data\nNULL\n\n$glance_data\nNULL\n```\n\n\n:::\n:::\n\n\n## 3.2 ggwithinstats\n\nWe need to pivot table long to have these columns: `ID`, `SUBJECT`, `SCORE`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexam_long <-exam_data %>% pivot_longer(\n  cols = ENGLISH:SCIENCE,\n  names_to = \"SUBJECT\",\n  values_to = \"SCORE\") %>%\n  filter(CLASS == \"3A\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggwithinstats(\n  data = filter(exam_long, SUBJECT %in% c(\"MATHS\", \"SCIENCE\")),\n  x = SUBJECT,\n  y = SCORE,\n  type = \"np\"\n)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex4_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n## 3.3 ggscatterstats\n\nThe best fit line is controlled by `smooth.line.args`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggscatterstats(\n  data = exam_data,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = TRUE, # Show the histogram\n  label.var = ID,\n  label.expression = ENGLISH > 90 & MATHS > 90\n)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex4_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n# 4 Visualizing Models\n\n`performance` package is also part of `easystats` package.\n\nRefer to **Hands-on_Ex4A: 4 Model Visualizations**\n\n# 5 Reflections\n",
    "supporting": [
      "In-class_Ex4_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
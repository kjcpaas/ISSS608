---
title: "Hands-on Exercise 9D: Visual Multivariate Analysis with Parallel Coordinates Plot"
author: "Kristine Joy Paas"
date: "13 June 2024"
date-modified: "last-modified"
format: html
execute: 
  echo: true
  eval: true
  warning: false
  freeze: true
---

# 1 Overview

This hands-on exercise covers [Chapter 15: Visual Multivariate Analysis with Parallel Coordinates Plot](https://r4va.netlify.app/chap15).

In this exercise, I learned:

-   Doing multivariate analysis with parallel coordinates

# 2 Getting Started

## 2.1 Loading the required packages

For this exercise we will use the following R packages:

```{r}
pacman::p_load(GGally, parallelPlot, tidyverse)
```

## 2.2 Importing data

We will the data of [World Happines 2018 report](https://worldhappiness.report/ed/2018/). The data set is downloaded from [here](https://s3.amazonaws.com/happiness-report/2018/WHR2018Chapter2OnlineData.xls). The original data set is in Microsoft Excel format. It has been extracted and saved in csv file called **WHData-2018.csv**.

```{r}
wh <- read_csv("data/WHData-2018.csv")

glimpse(wh)
```

# 3 Plotting Static Parallel Coordinates Plots

We will use `ggparcoord()` to generate parallel coordinates plots.

## 3.1 Plotting simple parallel coordinates

```{r}
ggparcoord(data = wh, 
           columns = c(7:12))
```

## 3.2 Plotting simple parallel coordinates with boxplot

Adding boxplot will reveal information about the distribution of the values.

```{r}
ggparcoord(data = wh, 
           columns = c(7:12), 
           groupColumn = 2,
           scale = "uniminmax",
           alphaLines = 0.2,
           boxplot = TRUE, 
           title = "Parallel Coordinates Plot of World Happines Variables")
```

This generates values of for each region

## 3.3 Parallel coordinates with facets

```{r}
ggparcoord(data = wh, 
           columns = c(7:12), 
           groupColumn = 2,
           scale = "uniminmax",
           alphaLines = 0.2,
           boxplot = TRUE, 
           title = "Multiple Parallel Coordinates Plots of World Happines Variables by Region") +
  facet_wrap(~ Region)
```

## 3.4 Adjusting the x-axis labels

The x-axis labels overlap and are hard to read.

```{r}
ggparcoord(data = wh, 
           columns = c(7:12), 
           groupColumn = 2,
           scale = "uniminmax",
           alphaLines = 0.2,
           boxplot = TRUE, 
           title = "Multiple Parallel Coordinates Plots of World Happines Variables by Region") +
  facet_wrap(~ Region) + 
  theme(axis.text.x = element_text(angle = 30, hjust=1))
```

# 4 Plotting Interactive Parallel Plots

[**parallelPlot**](https://cran.r-project.org/web/packages/parallelPlot/) is an R package specially designed to plot a parallel coordinates plot by using ‘htmlwidgets’ package and [d3.js](https://d3js.org/). In this section, you will learn how to use functions provided in parallelPlot package to build interactive parallel coordinates plot.

## 4.1 The Basic Plot

```{r}
wh <- wh %>%
  select("Happiness score", c(7:12))
parallelPlot(wh,
             width = 320,
             height = 250)
```

## 4.2 Rotate axis label

The axis labels overlap and are hard to read. We will use `rotateTitle` to avoid overlapping axis labels.

```{r}
parallelPlot(wh,
             rotateTitle = TRUE)
```

## 4.3 Changing the color scheme

We can also change the color scheme

```{r}
parallelPlot(wh,
             continuousCS = "YlOrRd",
             rotateTitle = TRUE)
```

## 4.4 Parallel coordinates plot with histogram

In the code chunk below, `histoVisibility` argument is used to plot histogram along the axis of each variables.

```{r}
histoVisibility <- rep(TRUE, ncol(wh))
parallelPlot(wh,
             rotateTitle = TRUE,
             histoVisibility = histoVisibility)
```

# 5 Reflections

I understand that this technique is used to visualize multiple variables across many context (e.g., region).

However, its clarity and aesthetics both are on the low end as presented in the exercise, mainly due to the sheer amount of dimensions presented.

Adding a country label when hovering on a line should already improve the clarity.

For multivariate analysis, I prefer to use heatmap as it's more aesthetic and clearer.
